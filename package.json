{
  "name": "vscode-stripe",
  "displayName": "Stripe",
  "description": "Build, test, and use Stripe inside your editor.",
  "version": "1.7.4",
  "publisher": "stripe",
  "author": "Stripe (https://www.stripe.com)",
  "license": "SEE LICENSE IN LICENSE.md",
  "homepage": "https://stripe.com/docs/stripe-vscode",
  "repository": {
    "type": "git",
    "url": "https://github.com/stripe/vscode-stripe.git"
  },
  "bugs": {
    "url": "https://github.com/stripe/vscode-stripe/issues"
  },
  "engines": {
    "vscode": "^1.44.0"
  },
  "icon": "resources/logo.png",
  "categories": [
    "Debuggers",
    "Other",
    "Snippets"
  ],
  "extensionKind": [
    "workspace"
  ],
  "keywords": [
    "stripe",
    "payments",
    "finance"
  ],
  "activationEvents": [
    "onDebugInitialConfigurations",
    "onDebug",
    "onView:stripeEventsView",
    "onView:stripeLogsView",
    "onView:stripeDashboardView",
    "onView:stripeHelpView",
    "onCommand:stripe.login",
    "onCommand:stripe.openCLI",
    "onCommand:stripe.openWebhooksListen",
    "onCommand:stripe.openDashboardApikeys",
    "onCommand:stripe.openDashboardLogs",
    "onCommand:stripe.openDashboardEvents",
    "onCommand:stripe.openDashboardWebhooks",
    "onCommand:stripe.openEventDetails",
    "onCommand:stripe.openTriggerEvent",
    "onCommand:stripe.openReportIssue",
    "onCommand:stripe.openDocs",
    "onCommand:stripe.openSurvey",
    "onCommand:stripe.openSamples",
    "onCommand:stripe.startLogsStreaming",
    "onCommand:stripe.stopLogsStreaming",
    "onCommand:stripe.clearRecentLogs",
    "onCommand:stripe.clearRecentEvents",
    "onCommand:stripe.startEventsStreaming",
    "onCommand:stripe.stopEventsStreaming",
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onLanguage:csharp",
    "onLanguage:go",
    "onLanguage:python",
    "onLanguage:ruby",
    "onLanguage:java",
    "onLanguage:php"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Stripe",
      "type": "object",
      "properties": {
        "stripe.cliInstallPath": {
          "description": "Install path for the Stripe CLI executable (include the complete filepath to the executable)",
          "type": "string",
          "scope": "machine"
        },
        "stripe.projectName": {
          "type": "string",
          "description": "the project name to read from for config (default \"default\")"
        },
        "stripe.telemetry.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Specifies whether to enable Stripe telemetry (even if enabled still abides by the overall `#telemetry.enableTelemetry#` setting)",
          "scope": "window"
        }
      }
    },
    "commands": [
      {
        "category": "Stripe",
        "command": "stripe.openWebhooksListen",
        "title": "Start Webhooks events listening with CLI"
      },
      {
        "category": "Stripe",
        "command": "stripe.openWebhooksDebugConfigure",
        "title": "Configure webhooks debugging"
      },
      {
        "category": "Stripe",
        "command": "stripe.startEventsStreaming",
        "title": "Start streaming Events"
      },
      {
        "category": "Stripe",
        "command": "stripe.stopEventsStreaming",
        "title": "Stop streaming Events"
      },
      {
        "category": "Stripe",
        "command": "stripe.startLogsStreaming",
        "title": "Start streaming API logs "
      },
      {
        "category": "Stripe",
        "command": "stripe.stopLogsStreaming",
        "title": "Stop streaming API logs"
      },
      {
        "category": "Stripe",
        "command": "stripe.openCLI",
        "title": "Start CLI"
      },
      {
        "category": "Stripe",
        "command": "stripe.login",
        "title": "Login with CLI"
      },
      {
        "category": "Stripe",
        "command": "stripe.openDashboardApikeys",
        "title": "Open Dashboard to manage API Keys"
      },
      {
        "category": "Stripe",
        "command": "stripe.openDashboardLogFromTreeItemContextMenu",
        "title": "Open log in Dashboard"
      },
      {
        "category": "Stripe",
        "command": "stripe.openDashboardLogs",
        "title": "Open Dashboard to see recent logs"
      },
      {
        "category": "Stripe",
        "command": "stripe.openDashboardEvent",
        "title": "Open event in Dashboard"
      },
      {
        "category": "Stripe",
        "command": "stripe.openDashboardEvents",
        "title": "Open Dashboard to see recent Events"
      },
      {
        "category": "Stripe",
        "command": "stripe.openDashboardWebhooks",
        "title": "Open Dashboard to manage Webhooks"
      },
      {
        "category": "Stripe",
        "command": "stripe.openEventDetails",
        "title": "Open read-only document with a specific event"
      },
      {
        "category": "Stripe",
        "command": "stripe.clearRecentLogs",
        "title": "Clear recent logs",
        "icon": "$(clear-all)"
      },
      {
        "category": "Stripe",
        "command": "stripe.clearRecentEvents",
        "title": "Clear recent events",
        "icon": "$(clear-all)"
      },
      {
        "category": "Stripe",
        "command": "stripe.openTriggerEvent",
        "title": "Trigger a new event"
      },
      {
        "category": "Stripe",
        "command": "stripe.openReportIssue",
        "title": "Report issue"
      },
      {
        "category": "Stripe",
        "command": "stripe.openDocs",
        "title": "Open extension documentation"
      },
      {
        "category": "Stripe",
        "command": "stripe.openSurvey",
        "title": "Rate and provide feedback"
      },
      {
        "category": "Stripe",
        "command": "stripe.resendEvent",
        "title": "Resend event"
      },
      {
        "category": "Stripe",
        "command": "stripe.openSamples",
        "title": "Find code samples"
      }
    ],
    "views": {
      "stripe": [
        {
          "id": "stripeEventsView",
          "name": "Events"
        },
        {
          "id": "stripeLogsView",
          "name": "Logs"
        },
        {
          "id": "stripeDashboardView",
          "name": "Dashboard"
        },
        {
          "id": "stripeHelpView",
          "name": "Help and feedback"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "stripe.clearRecentLogs",
          "when": "view == stripeLogsView",
          "group": "navigation"
        },
        {
          "command": "stripe.clearRecentEvents",
          "when": "view == stripeEventsView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "stripe.openDashboardEvent",
          "when": "viewItem == eventItem"
        },
        {
          "command": "stripe.resendEvent",
          "when": "viewItem == eventItem"
        },
        {
          "command": "stripe.openDashboardLogFromTreeItemContextMenu",
          "when": "viewItem == logItem"
        }
      ],
      "commandPalette": [
        {
          "command": "stripe.openDashboardEvent",
          "when": "false"
        },
        {
          "command": "stripe.openDashboardLogFromTreeItemContextMenu",
          "when": "false"
        },
        {
          "command": "stripe.openEventDetails",
          "when": "false"
        },
        {
          "command": "stripe.resendEvent",
          "when": "false"
        }
      ]
    },
    "debuggers": [
      {
        "type": "stripe",
        "label": "Stripe",
        "configurationSnippets": [
          {
            "label": "Stripe: Webhooks listen",
            "description": "Listen for and forward Stripe webhooks events",
            "body": {
              "name": "Stripe: Webhooks listen",
              "type": "stripe",
              "request": "launch",
              "command": "listen"
            }
          }
        ],
        "configurationAttributes": {
          "launch": {
            "properties": {
              "forwardTo": {
                "type": "string",
                "description": "The URL to forward webhook events to",
                "default": "http://localhost:3000"
              },
              "forwardConnectTo": {
                "type": "string",
                "description": "The URL to forward Connect webhook events to (default: same as normal events)",
                "default": "http://localhost:3000"
              },
              "command": {
                "type": "string",
                "description": "Command to execute",
                "default": "listen"
              },
              "events": {
                "type": "array",
                "markdownDescription": "An array of specific events to listen for. For a list of all possible events, see: https://stripe.com/docs/api/events/types (default: listen for all events)",
                "default": []
              }
            }
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "resources/icons/icon_activitybar.svg",
          "id": "stripe",
          "title": "Stripe"
        }
      ]
    },
    "snippets": [
      {
        "language": "csharp",
        "path": "./config/snippets/dotnet.json"
      },
      {
        "language": "go",
        "path": "./config/snippets/go.json"
      },
      {
        "language": "java",
        "path": "./config/snippets/java.json"
      },
      {
        "language": "jsx",
        "path": "./config/snippets/node.json"
      },
      {
        "language": "javascriptreact",
        "path": "./config/snippets/node.json"
      },
      {
        "language": "typescript",
        "path": "./config/snippets/node.json"
      },
      {
        "language": "javascript",
        "path": "./config/snippets/node.json"
      },
      {
        "language": "php",
        "path": "./config/snippets/php.json"
      },
      {
        "language": "python",
        "path": "./config/snippets/python.json"
      },
      {
        "language": "ruby",
        "path": "./config/snippets/ruby.json"
      }
    ]
  },
  "scripts": {
    "compile": "tsc -p ./",
    "clean": "rm -rf out && rm -rf dist",
    "lint": "eslint --ext .ts .",
    "pretest": "npm run compile && npm run webpack-dev",
    "test": "node ./out/test/runTest.js",
    "vscode:prepublish": "npm run clean && npm run webpack-prod",
    "webpack-dev:extension": "webpack --mode development --config ./webpack.config.js",
    "webpack-dev:language-server": "webpack --mode development --config ./src/stripeLanguageServer/webpack.config.js",
    "webpack-dev": "npm run webpack-dev:extension && npm run webpack-dev:language-server",
    "webpack-prod:extension": "webpack --mode production --config ./webpack.config.js && webpack --mode production --config ./src/stripeLanguageServer/webpack.config.js",
    "webpack-prod:language-server": "webpack --mode production --config ./src/stripeLanguageServer/webpack.config.js",
    "webpack-prod": "npm run webpack-prod:extension && npm run webpack-prod:language-server"
  },
  "devDependencies": {
    "@types/byline": "^4.2.32",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.3",
    "@types/node": "^10.14.17",
    "@types/sinon": "^9.0.9",
    "@types/uuid": "^8.3.0",
    "@types/vscode": "^1.44.0",
    "@typescript-eslint/eslint-plugin": "^4.9.1",
    "@typescript-eslint/parser": "^4.9.1",
    "eslint": "^7.15.0",
    "eslint-config-prettier": "^7.0.0",
    "glob": "^7.1.6",
    "mocha": "^8.2.1",
    "remark": "^12.0.0",
    "remark-package-dependencies": "^1.1.0",
    "sinon": "^9.2.1",
    "ts-loader": "^8.0.18",
    "ts-sinon": "^2.0.1",
    "typescript": "^4.2.3",
    "vscode-test": "^1.4.1",
    "webpack": "^5.26.3",
    "webpack-cli": "^4.5.0"
  },
  "dependencies": {
    "@types/universal-analytics": "^0.4.4",
    "byline": "^5.0.0",
    "compare-versions": "^3.6.0",
    "execa": "^4.0.0",
    "moment": "^2.24.0",
    "os-name": "^3.1.0",
    "proxyquire": "^2.1.3",
    "toml": "^3.0.0",
    "universal-analytics": "^0.4.20",
    "uuid": "^3.4.0",
    "vscode-languageclient": "^6.1.3",
    "vscode-languageserver": "^6.1.1",
    "vscode-languageserver-textdocument": "^1.0.1"
  }
}

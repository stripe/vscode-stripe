// source: logs_tail.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.rpc.LogsTailRequest', null, global);
goog.exportSymbol('proto.rpc.LogsTailRequest.Account', null, global);
goog.exportSymbol('proto.rpc.LogsTailRequest.HttpMethod', null, global);
goog.exportSymbol('proto.rpc.LogsTailRequest.RequestStatus', null, global);
goog.exportSymbol('proto.rpc.LogsTailRequest.Source', null, global);
goog.exportSymbol('proto.rpc.LogsTailRequest.StatusCodeType', null, global);
goog.exportSymbol('proto.rpc.LogsTailResponse', null, global);
goog.exportSymbol('proto.rpc.LogsTailResponse.ContentCase', null, global);
goog.exportSymbol('proto.rpc.LogsTailResponse.Log', null, global);
goog.exportSymbol('proto.rpc.LogsTailResponse.Log.Error', null, global);
goog.exportSymbol('proto.rpc.LogsTailResponse.State', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.LogsTailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rpc.LogsTailRequest.repeatedFields_, null);
};
goog.inherits(proto.rpc.LogsTailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rpc.LogsTailRequest.displayName = 'proto.rpc.LogsTailRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.LogsTailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rpc.LogsTailResponse.oneofGroups_);
};
goog.inherits(proto.rpc.LogsTailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rpc.LogsTailResponse.displayName = 'proto.rpc.LogsTailResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.LogsTailResponse.Log = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.LogsTailResponse.Log, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rpc.LogsTailResponse.Log.displayName = 'proto.rpc.LogsTailResponse.Log';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.LogsTailResponse.Log.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.LogsTailResponse.Log.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rpc.LogsTailResponse.Log.Error.displayName = 'proto.rpc.LogsTailResponse.Log.Error';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rpc.LogsTailRequest.repeatedFields_ = [1,2,3,4,5,6,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.LogsTailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.LogsTailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.LogsTailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.LogsTailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterAccountsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    filterHttpMethodsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    filterIpAddressesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    filterRequestPathsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    filterRequestStatusesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    filterSourcesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    filterStatusCodesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    filterStatusCodeTypesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.LogsTailRequest}
 */
proto.rpc.LogsTailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.LogsTailRequest;
  return proto.rpc.LogsTailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.LogsTailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.LogsTailRequest}
 */
proto.rpc.LogsTailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.rpc.LogsTailRequest.Account>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFilterAccounts(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.rpc.LogsTailRequest.HttpMethod>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFilterHttpMethods(values[i]);
      }
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilterIpAddresses(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilterRequestPaths(value);
      break;
    case 5:
      var values = /** @type {!Array<!proto.rpc.LogsTailRequest.RequestStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFilterRequestStatuses(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<!proto.rpc.LogsTailRequest.Source>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFilterSources(values[i]);
      }
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilterStatusCodes(value);
      break;
    case 8:
      var values = /** @type {!Array<!proto.rpc.LogsTailRequest.StatusCodeType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFilterStatusCodeTypes(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.LogsTailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.LogsTailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.LogsTailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.LogsTailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterAccountsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getFilterHttpMethodsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getFilterIpAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getFilterRequestPathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getFilterRequestStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getFilterSourcesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getFilterStatusCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getFilterStatusCodeTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rpc.LogsTailRequest.Account = {
  ACCOUNT_UNSPECIFIED: 0,
  ACCOUNT_CONNECT_IN: 1,
  ACCOUNT_CONNECT_OUT: 2,
  ACCOUNT_SELF: 3
};

/**
 * @enum {number}
 */
proto.rpc.LogsTailRequest.HttpMethod = {
  HTTP_METHOD_UNSPECIFIED: 0,
  HTTP_METHOD_GET: 1,
  HTTP_METHOD_POST: 2,
  HTTP_METHOD_DELETE: 3
};

/**
 * @enum {number}
 */
proto.rpc.LogsTailRequest.RequestStatus = {
  REQUEST_STATUS_UNSPECIFIED: 0,
  REQUEST_STATUS_SUCCEEDED: 1,
  REQUEST_STATUS_FAILED: 2
};

/**
 * @enum {number}
 */
proto.rpc.LogsTailRequest.Source = {
  SOURCE_UNSPECIFIED: 0,
  SOURCE_API: 1,
  SOURCE_DASHBOARD: 2
};

/**
 * @enum {number}
 */
proto.rpc.LogsTailRequest.StatusCodeType = {
  STATUS_CODE_TYPE_UNSPECIFIED: 0,
  STATUS_CODE_TYPE_2XX: 1,
  STATUS_CODE_TYPE_4XX: 2,
  STATUS_CODE_TYPE_5XX: 3
};

/**
 * repeated Account filter_accounts = 1;
 * @return {!Array<!proto.rpc.LogsTailRequest.Account>}
 */
proto.rpc.LogsTailRequest.prototype.getFilterAccountsList = function() {
  return /** @type {!Array<!proto.rpc.LogsTailRequest.Account>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.rpc.LogsTailRequest.Account>} value
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.setFilterAccountsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.rpc.LogsTailRequest.Account} value
 * @param {number=} opt_index
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.addFilterAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.clearFilterAccountsList = function() {
  return this.setFilterAccountsList([]);
};


/**
 * repeated HttpMethod filter_http_methods = 2;
 * @return {!Array<!proto.rpc.LogsTailRequest.HttpMethod>}
 */
proto.rpc.LogsTailRequest.prototype.getFilterHttpMethodsList = function() {
  return /** @type {!Array<!proto.rpc.LogsTailRequest.HttpMethod>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.rpc.LogsTailRequest.HttpMethod>} value
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.setFilterHttpMethodsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.rpc.LogsTailRequest.HttpMethod} value
 * @param {number=} opt_index
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.addFilterHttpMethods = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.clearFilterHttpMethodsList = function() {
  return this.setFilterHttpMethodsList([]);
};


/**
 * repeated string filter_ip_addresses = 3;
 * @return {!Array<string>}
 */
proto.rpc.LogsTailRequest.prototype.getFilterIpAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.setFilterIpAddressesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.addFilterIpAddresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.clearFilterIpAddressesList = function() {
  return this.setFilterIpAddressesList([]);
};


/**
 * repeated string filter_request_paths = 4;
 * @return {!Array<string>}
 */
proto.rpc.LogsTailRequest.prototype.getFilterRequestPathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.setFilterRequestPathsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.addFilterRequestPaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.clearFilterRequestPathsList = function() {
  return this.setFilterRequestPathsList([]);
};


/**
 * repeated RequestStatus filter_request_statuses = 5;
 * @return {!Array<!proto.rpc.LogsTailRequest.RequestStatus>}
 */
proto.rpc.LogsTailRequest.prototype.getFilterRequestStatusesList = function() {
  return /** @type {!Array<!proto.rpc.LogsTailRequest.RequestStatus>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.rpc.LogsTailRequest.RequestStatus>} value
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.setFilterRequestStatusesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.rpc.LogsTailRequest.RequestStatus} value
 * @param {number=} opt_index
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.addFilterRequestStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.clearFilterRequestStatusesList = function() {
  return this.setFilterRequestStatusesList([]);
};


/**
 * repeated Source filter_sources = 6;
 * @return {!Array<!proto.rpc.LogsTailRequest.Source>}
 */
proto.rpc.LogsTailRequest.prototype.getFilterSourcesList = function() {
  return /** @type {!Array<!proto.rpc.LogsTailRequest.Source>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.rpc.LogsTailRequest.Source>} value
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.setFilterSourcesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.rpc.LogsTailRequest.Source} value
 * @param {number=} opt_index
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.addFilterSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.clearFilterSourcesList = function() {
  return this.setFilterSourcesList([]);
};


/**
 * repeated string filter_status_codes = 7;
 * @return {!Array<string>}
 */
proto.rpc.LogsTailRequest.prototype.getFilterStatusCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.setFilterStatusCodesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.addFilterStatusCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.clearFilterStatusCodesList = function() {
  return this.setFilterStatusCodesList([]);
};


/**
 * repeated StatusCodeType filter_status_code_types = 8;
 * @return {!Array<!proto.rpc.LogsTailRequest.StatusCodeType>}
 */
proto.rpc.LogsTailRequest.prototype.getFilterStatusCodeTypesList = function() {
  return /** @type {!Array<!proto.rpc.LogsTailRequest.StatusCodeType>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<!proto.rpc.LogsTailRequest.StatusCodeType>} value
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.setFilterStatusCodeTypesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!proto.rpc.LogsTailRequest.StatusCodeType} value
 * @param {number=} opt_index
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.addFilterStatusCodeTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rpc.LogsTailRequest} returns this
 */
proto.rpc.LogsTailRequest.prototype.clearFilterStatusCodeTypesList = function() {
  return this.setFilterStatusCodeTypesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rpc.LogsTailResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.rpc.LogsTailResponse.ContentCase = {
  CONTENT_NOT_SET: 0,
  STATE: 1,
  LOG: 2
};

/**
 * @return {proto.rpc.LogsTailResponse.ContentCase}
 */
proto.rpc.LogsTailResponse.prototype.getContentCase = function() {
  return /** @type {proto.rpc.LogsTailResponse.ContentCase} */(jspb.Message.computeOneofCase(this, proto.rpc.LogsTailResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.LogsTailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.LogsTailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.LogsTailResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.LogsTailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    log: (f = msg.getLog()) && proto.rpc.LogsTailResponse.Log.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.LogsTailResponse}
 */
proto.rpc.LogsTailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.LogsTailResponse;
  return proto.rpc.LogsTailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.LogsTailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.LogsTailResponse}
 */
proto.rpc.LogsTailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rpc.LogsTailResponse.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = new proto.rpc.LogsTailResponse.Log;
      reader.readMessage(value,proto.rpc.LogsTailResponse.Log.deserializeBinaryFromReader);
      msg.setLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.LogsTailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.LogsTailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.LogsTailResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.LogsTailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.rpc.LogsTailResponse.State} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getLog();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rpc.LogsTailResponse.Log.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.rpc.LogsTailResponse.State = {
  STATE_UNSPECIFIED: 0,
  STATE_LOADING: 1,
  STATE_RECONNECTING: 2,
  STATE_READY: 3,
  STATE_DONE: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.LogsTailResponse.Log.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.LogsTailResponse.Log.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.LogsTailResponse.Log} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.LogsTailResponse.Log.toObject = function(includeInstance, msg) {
  var f, obj = {
    livemode: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    method: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    requestId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    error: (f = msg.getError()) && proto.rpc.LogsTailResponse.Log.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.LogsTailResponse.Log}
 */
proto.rpc.LogsTailResponse.Log.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.LogsTailResponse.Log;
  return proto.rpc.LogsTailResponse.Log.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.LogsTailResponse.Log} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.LogsTailResponse.Log}
 */
proto.rpc.LogsTailResponse.Log.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLivemode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = new proto.rpc.LogsTailResponse.Log.Error;
      reader.readMessage(value,proto.rpc.LogsTailResponse.Log.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.LogsTailResponse.Log.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.LogsTailResponse.Log.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.LogsTailResponse.Log} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.LogsTailResponse.Log.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLivemode();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rpc.LogsTailResponse.Log.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.LogsTailResponse.Log.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.LogsTailResponse.Log.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.LogsTailResponse.Log.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    charge: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    declineCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    message: jspb.Message.getFieldWithDefault(msg, 5, ""),
    param: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.LogsTailResponse.Log.Error}
 */
proto.rpc.LogsTailResponse.Log.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.LogsTailResponse.Log.Error;
  return proto.rpc.LogsTailResponse.Log.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.LogsTailResponse.Log.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.LogsTailResponse.Log.Error}
 */
proto.rpc.LogsTailResponse.Log.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCharge(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeclineCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.LogsTailResponse.Log.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.LogsTailResponse.Log.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.LogsTailResponse.Log.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCharge();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeclineCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getParam();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log.Error} returns this
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string charge = 2;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.getCharge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log.Error} returns this
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.setCharge = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log.Error} returns this
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string decline_code = 4;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.getDeclineCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log.Error} returns this
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.setDeclineCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string message = 5;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log.Error} returns this
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string param = 6;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.getParam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log.Error} returns this
 */
proto.rpc.LogsTailResponse.Log.Error.prototype.setParam = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool livemode = 1;
 * @return {boolean}
 */
proto.rpc.LogsTailResponse.Log.prototype.getLivemode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rpc.LogsTailResponse.Log} returns this
 */
proto.rpc.LogsTailResponse.Log.prototype.setLivemode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string method = 2;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log} returns this
 */
proto.rpc.LogsTailResponse.Log.prototype.setMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log} returns this
 */
proto.rpc.LogsTailResponse.Log.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 status = 4;
 * @return {number}
 */
proto.rpc.LogsTailResponse.Log.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rpc.LogsTailResponse.Log} returns this
 */
proto.rpc.LogsTailResponse.Log.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string request_id = 5;
 * @return {string}
 */
proto.rpc.LogsTailResponse.Log.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rpc.LogsTailResponse.Log} returns this
 */
proto.rpc.LogsTailResponse.Log.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 created_at = 6;
 * @return {number}
 */
proto.rpc.LogsTailResponse.Log.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rpc.LogsTailResponse.Log} returns this
 */
proto.rpc.LogsTailResponse.Log.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Error error = 7;
 * @return {?proto.rpc.LogsTailResponse.Log.Error}
 */
proto.rpc.LogsTailResponse.Log.prototype.getError = function() {
  return /** @type{?proto.rpc.LogsTailResponse.Log.Error} */ (
    jspb.Message.getWrapperField(this, proto.rpc.LogsTailResponse.Log.Error, 7));
};


/**
 * @param {?proto.rpc.LogsTailResponse.Log.Error|undefined} value
 * @return {!proto.rpc.LogsTailResponse.Log} returns this
*/
proto.rpc.LogsTailResponse.Log.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rpc.LogsTailResponse.Log} returns this
 */
proto.rpc.LogsTailResponse.Log.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rpc.LogsTailResponse.Log.prototype.hasError = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional State state = 1;
 * @return {!proto.rpc.LogsTailResponse.State}
 */
proto.rpc.LogsTailResponse.prototype.getState = function() {
  return /** @type {!proto.rpc.LogsTailResponse.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rpc.LogsTailResponse.State} value
 * @return {!proto.rpc.LogsTailResponse} returns this
 */
proto.rpc.LogsTailResponse.prototype.setState = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.rpc.LogsTailResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.rpc.LogsTailResponse} returns this
 */
proto.rpc.LogsTailResponse.prototype.clearState = function() {
  return jspb.Message.setOneofField(this, 1, proto.rpc.LogsTailResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rpc.LogsTailResponse.prototype.hasState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Log log = 2;
 * @return {?proto.rpc.LogsTailResponse.Log}
 */
proto.rpc.LogsTailResponse.prototype.getLog = function() {
  return /** @type{?proto.rpc.LogsTailResponse.Log} */ (
    jspb.Message.getWrapperField(this, proto.rpc.LogsTailResponse.Log, 2));
};


/**
 * @param {?proto.rpc.LogsTailResponse.Log|undefined} value
 * @return {!proto.rpc.LogsTailResponse} returns this
*/
proto.rpc.LogsTailResponse.prototype.setLog = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rpc.LogsTailResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rpc.LogsTailResponse} returns this
 */
proto.rpc.LogsTailResponse.prototype.clearLog = function() {
  return this.setLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rpc.LogsTailResponse.prototype.hasLog = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.rpc);

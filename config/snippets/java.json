{
  "Create Bank Account": {
    "prefix": "StripeBankAccountCreate",
    "description": "Create Bank Account",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\n  \"external_account\",\n  \"btok_xxxxxxxxxxxxx\"\n);\n\nBankAccount bankAccount =\n  (BankAccount) account\n    .getExternalAccounts()\n    .create(params);"
  },
  "Delete Bank Account": {
    "prefix": "StripeBankAccountDelete",
    "description": "Delete Bank Account",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nBankAccount bankAccount =\n  account.getExternalAccounts().retrieve(\n    \"${1:ba_xxxxxxxxxxxxx}\"\n  );\n\nBankAccount deletedBankAccount =\n  (BankAccount) bankAccount.delete();"
  },
  "List Bank Account": {
    "prefix": "StripeBankAccountList",
    "description": "List Bank Account",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"object\", \"${2:bank_account}\");\nparams.put(\"limit\", ${3:3});\n\nExternalAccountCollection bankAccounts =\n  account.getExternalAccounts().list(params);"
  },
  "Retrieve Bank Account": {
    "prefix": "StripeBankAccountRetrieve",
    "description": "Retrieve Bank Account",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nBankAccount bankAccount =\n  (BankAccount) account\n    .getExternalAccounts()\n    .retrieve(\"${1:ba_xxxxxxxxxxxxx}\");"
  },
  "Update Bank Account": {
    "prefix": "StripeBankAccountUpdate",
    "description": "Update Bank Account",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nBankAccount bankAccount =\n  account.getExternalAccounts().retrieve(\n    \"${1:ba_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${3:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nBankAccount updatedAccountBankAccount =\n  (BankAccount) bankAccount.update(params);"
  },
  "Create Account Account Card": {
    "prefix": "StripeAccountAccountCardCreate",
    "description": "Create Account Account Card",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"external_account\", \"${2:tok_xxxx_debit}\");\n\nCard card =\n  (Card) account.getExternalAccounts().create(\n    params\n  );"
  },
  "Delete Account Account Card": {
    "prefix": "StripeAccountAccountCardDelete",
    "description": "Delete Account Account Card",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nCard card =\n  account.getExternalAccounts().retrieve(\n    \"${1:card_xxxxxxxxxxxxx}\"\n  );\n\nCard deletedCard = (Card) card.delete();"
  },
  "List Account Account Card": {
    "prefix": "StripeAccountAccountCardList",
    "description": "List Account Account Card",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"object\", \"${2:card}\");\nparams.put(\"limit\", ${3:3});\n\nExternalAccountCollection cards =\n  account.getExternalAccounts().list(params);"
  },
  "Retrieve Account Account Card": {
    "prefix": "StripeAccountAccountCardRetrieve",
    "description": "Retrieve Account Account Card",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nCard card =\n  (Card) account.getExternalAccounts().retrieve(\n    \"${1:card_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Account Account Card": {
    "prefix": "StripeAccountAccountCardUpdate",
    "description": "Update Account Account Card",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nCard card =\n  account.getExternalAccounts().retrieve(\n    \"${1:card_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${3:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nCard updatedAccountCard =\n  (Card) card.update(params);"
  },
  "List Account Capability": {
    "prefix": "StripeAccountCapabilityList",
    "description": "List Account Capability",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nCapabilityCollection capabilities =\n  account.capabilities().list();"
  },
  "Retrieve Account Capability": {
    "prefix": "StripeAccountCapabilityRetrieve",
    "description": "Retrieve Account Capability",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nCapability capability =\n  account.capabilities().retrieve(\n    \"${1:card_payments}\"\n  );"
  },
  "Update Account Capability": {
    "prefix": "StripeAccountCapabilityUpdate",
    "description": "Update Account Capability",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nCapability capability =\n  account.capabilities().retrieve(\n    \"${1:card_payments}\"\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"requested\", ${3:true});\n\nCapability updatedCapability =\n  capability.update(params);"
  },
  "Create Account": {
    "prefix": "StripeAccountCreate",
    "description": "Create Account",
    "body": "Map<String, Object> cardPayments =\n  new HashMap<>();\ncardPayments.put(\"requested\", ${4:${5:true}});\nMap<String, Object> transfers = new HashMap<>();\ntransfers.put(\"requested\", true);\nMap<String, Object> capabilities =\n  new HashMap<>();\ncapabilities.put(\"card_payments\", cardPayments);\ncapabilities.put(\"transfers\", transfers);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"type\", \"${1:custom}\");\nparams.put(\"country\", \"${2:US}\");\nparams.put(\"email\", \"${3:jenny.rosen@example.com}\");\nparams.put(\"capabilities\", capabilities);\n\nAccount account = Account.create(params);"
  },
  "Delete Account": {
    "prefix": "StripeAccountDelete",
    "description": "Delete Account",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nAccount deletedAccount = account.delete();"
  },
  "Create Account Link": {
    "prefix": "StripeAccountLinkCreate",
    "description": "Create Account Link",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"account\", \"${1:acct_xxxxxxxxxxxxx}\");\nparams.put(\n  \"refresh_url\",\n  \"https://example.com/reauth\"\n);\nparams.put(\n  \"return_url\",\n  \"https://example.com/return\"\n);\nparams.put(\"type\", \"${4:account_onboarding}\");\n\nAccountLink accountLink =\n  AccountLink.create(params);"
  },
  "List Account": {
    "prefix": "StripeAccountList",
    "description": "List Account",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nAccountCollection accounts = Account.list(params);"
  },
  "Create Account Person": {
    "prefix": "StripeAccountPersonCreate",
    "description": "Create Account Person",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"first_name\", \"${2:Jane}\");\nparams.put(\"last_name\", \"${3:Diaz}\");\n\nPerson person = account.persons().create(params);"
  },
  "Delete Account Person": {
    "prefix": "StripeAccountPersonDelete",
    "description": "Delete Account Person",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nPerson person =\n  account.persons().retrieve(\n    \"${1:person_xxxxxxxxxxxxx}\"\n  );\n\nPerson deletedPerson = person.delete();"
  },
  "List Account Person": {
    "prefix": "StripeAccountPersonList",
    "description": "List Account Person",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:3});\n\nPersonCollection persons =\n  account.persons().list(params);"
  },
  "Retrieve Account Person": {
    "prefix": "StripeAccountPersonRetrieve",
    "description": "Retrieve Account Person",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nPerson person =\n  account.persons().retrieve(\n    \"${1:person_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Account Person": {
    "prefix": "StripeAccountPersonUpdate",
    "description": "Update Account Person",
    "body": "Account account =\n  Account.retrieve(\"${2:acct_xxxxxxxxxxxxx}\");\n\nPerson person =\n  account.persons().retrieve(\n    \"${1:person_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${3:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nPerson updatedPerson = person.update(params);"
  },
  "Reject Account": {
    "prefix": "StripeAccountReject",
    "description": "Reject Account",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"reason\", \"${2:fraud}\");\n\nAccount updatedAccount = account.reject(params);"
  },
  "Retrieve Account": {
    "prefix": "StripeAccountRetrieve",
    "description": "Retrieve Account",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");"
  },
  "Update Account": {
    "prefix": "StripeAccountUpdate",
    "description": "Update Account",
    "body": "Account account =\n  Account.retrieve(\"${1:acct_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nAccount updatedAccount = account.update(params);"
  },
  "Create Application Fee Fee Refund": {
    "prefix": "StripeApplicationFeeFeeRefundCreate",
    "description": "Create Application Fee Fee Refund",
    "body": "ApplicationFee applicationFee =\n  ApplicationFee.retrieve(\"${1:fee_xxxxxxxxxxxxx}\");\n\nFeeRefund feeRefund =\n  applicationFee.getRefunds().create();"
  },
  "List Application Fee Fee Refund": {
    "prefix": "StripeApplicationFeeFeeRefundList",
    "description": "List Application Fee Fee Refund",
    "body": "ApplicationFee applicationFee =\n  ApplicationFee.retrieve(\"${1:fee_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:3});\n\nFeeRefundCollection feeRefunds =\n  applicationFee.getRefunds().list(params);"
  },
  "Retrieve Application Fee Fee Refund": {
    "prefix": "StripeApplicationFeeFeeRefundRetrieve",
    "description": "Retrieve Application Fee Fee Refund",
    "body": "ApplicationFee applicationFee =\n  ApplicationFee.retrieve(\"${2:fee_xxxxxxxxxxxxx}\");\n\nFeeRefund feeRefund =\n  applicationFee.getRefunds().retrieve(\n    \"${1:fr_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Application Fee Fee Refund": {
    "prefix": "StripeApplicationFeeFeeRefundUpdate",
    "description": "Update Application Fee Fee Refund",
    "body": "ApplicationFee applicationFee =\n  ApplicationFee.retrieve(\"${2:fee_xxxxxxxxxxxxx}\");\n\nFeeRefund feeRefund =\n  applicationFee.getRefunds().retrieve(\n    \"${1:fr_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${3:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nFeeRefund updatedFeeRefund =\n  feeRefund.update(params);"
  },
  "List Application Fee": {
    "prefix": "StripeApplicationFeeList",
    "description": "List Application Fee",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nApplicationFeeCollection applicationFees =\n  ApplicationFee.list(params);"
  },
  "Retrieve Application Fee": {
    "prefix": "StripeApplicationFeeRetrieve",
    "description": "Retrieve Application Fee",
    "body": "ApplicationFee applicationFee =\n  ApplicationFee.retrieve(\"${1:fee_xxxxxxxxxxxxx}\");"
  },
  "Retrieve Balance": {
    "prefix": "StripeBalanceRetrieve",
    "description": "Retrieve Balance",
    "body": "Balance.retrieve()\n"
  },
  "List Balance Transaction": {
    "prefix": "StripeBalanceTransactionList",
    "description": "List Balance Transaction",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nBalanceTransactionCollection balanceTransactions =\n  BalanceTransaction.list(params);"
  },
  "Retrieve Balance Transaction": {
    "prefix": "StripeBalanceTransactionRetrieve",
    "description": "Retrieve Balance Transaction",
    "body": "BalanceTransaction balanceTransaction =\n  BalanceTransaction.retrieve(\n    \"${1:txn_xxxxxxxxxxxxx}\"\n  );"
  },
  "Create Billing Portal Configuration": {
    "prefix": "StripeBillingPortalConfigurationCreate",
    "description": "Create Billing Portal Configuration",
    "body": "List<Object> allowedUpdates = new ArrayList<>();\nallowedUpdates.add(\"email\");\nallowedUpdates.add(\"tax_id\");\nMap<String, Object> customerUpdate =\n  new HashMap<>();\ncustomerUpdate.put(\n  \"allowed_updates\",\n  allowedUpdates\n);\ncustomerUpdate.put(\"enabled\", ${3:${4:true}});\nMap<String, Object> invoiceHistory =\n  new HashMap<>();\ninvoiceHistory.put(\"enabled\", true);\nMap<String, Object> features = new HashMap<>();\nfeatures.put(\"customer_update\", customerUpdate);\nfeatures.put(\"invoice_history\", invoiceHistory);\nMap<String, Object> businessProfile =\n  new HashMap<>();\nbusinessProfile.put(\n  \"privacy_policy_url\",\n  \"https://example.com/privacy\"\n);\nbusinessProfile.put(\n  \"terms_of_service_url\",\n  \"https://example.com/terms\"\n);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"features\", features);\nparams.put(\"business_profile\", businessProfile);\n\nConfiguration configuration =\n  Configuration.create(params);"
  },
  "List Billing Portal Configuration": {
    "prefix": "StripeBillingPortalConfigurationList",
    "description": "List Billing Portal Configuration",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nConfigurationCollection configurations =\n  Configuration.list(params);"
  },
  "Retrieve Billing Portal Configuration": {
    "prefix": "StripeBillingPortalConfigurationRetrieve",
    "description": "Retrieve Billing Portal Configuration",
    "body": "Configuration configuration =\n  Configuration.retrieve(\"${1:bpc_xxxxxxxxxxxxx}\");"
  },
  "Update Billing Portal Configuration": {
    "prefix": "StripeBillingPortalConfigurationUpdate",
    "description": "Update Billing Portal Configuration",
    "body": "Configuration configuration =\n  Configuration.retrieve(\"${1:bpc_xxxxxxxxxxxxx}\");\n\nMap<String, Object> businessProfile =\n  new HashMap<>();\nbusinessProfile.put(\n  \"privacy_policy_url\",\n  \"https://example.com/privacy\"\n);\nbusinessProfile.put(\n  \"terms_of_service_url\",\n  \"https://example.com/terms\"\n);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"business_profile\", businessProfile);\n\nConfiguration updatedConfiguration =\n  configuration.update(params);"
  },
  "Create Billing Portal Session": {
    "prefix": "StripeBillingPortalSessionCreate",
    "description": "Create Billing Portal Session",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"customer\", \"${1:cus_xxxxxxxxxxxxx}\");\nparams.put(\n  \"return_url\",\n  \"https://example.com/account\"\n);\n\nSession session = Session.create(params);"
  },
  "List Cards": {
    "prefix": "StripeCardsList",
    "description": "List Cards",
    "body": "List<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\n\nMap<String, Object> retrieveParams = new HashMap<>();\nretrieveParams.put(\"expand\", expandList);\n\nCustomer customer =\n  Customer.retrieve(\n    \"${1:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"object\", \"card\");\nparams.put(\"limit\", ${2:3});\n\nPaymentSourceCollection cards =\n  customer.getSources().list(params);\n\n"
  },
  "Capture Charge": {
    "prefix": "StripeChargeCapture",
    "description": "Capture Charge",
    "body": "Charge charge =\n  Charge.retrieve(\"${1:ch_xxxxxxxxxxxxx}\");\n\nCharge updatedCharge = charge.capture();"
  },
  "Create Charge": {
    "prefix": "StripeChargeCreate",
    "description": "Create Charge",
    "body": "// `source` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token\nMap<String, Object> params = new HashMap<>();\nparams.put(\"amount\", ${1:2000});\nparams.put(\"currency\", \"${2:usd}\");\nparams.put(\"source\", \"${3:tok_xxxx}\");\nparams.put(\n  \"description\",\n  \"My First Test Charge (created for API docs)\"\n);\n\nCharge charge = Charge.create(params);"
  },
  "List Charge": {
    "prefix": "StripeChargeList",
    "description": "List Charge",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nChargeCollection charges = Charge.list(params);"
  },
  "Retrieve Charge": {
    "prefix": "StripeChargeRetrieve",
    "description": "Retrieve Charge",
    "body": "Charge charge =\n  Charge.retrieve(\"${1:ch_xxxxxxxxxxxxx}\");"
  },
  "Update Charge": {
    "prefix": "StripeChargeUpdate",
    "description": "Update Charge",
    "body": "Charge charge =\n  Charge.retrieve(\"${1:ch_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nCharge updatedCharge = charge.update(params);"
  },
  "Create Checkout Session": {
    "prefix": "StripeCheckoutSessionCreate",
    "description": "Create Checkout Session",
    "body": "List<Object> paymentMethodTypes =\n  new ArrayList<>();\npaymentMethodTypes.add(\"card\");\nList<Object> lineItems = new ArrayList<>();\nMap<String, Object> lineItem1 = new HashMap<>();\nlineItem1.put(\"price\", \"${4:price_xxxxxxxxxxxxx}\");\nlineItem1.put(\"quantity\", ${5:2});\nlineItems.add(line_item1);\nMap<String, Object> params = new HashMap<>();\nparams.put(\n  \"success_url\",\n  \"https://example.com/success\"\n);\nparams.put(\n  \"cancel_url\",\n  \"https://example.com/cancel\"\n);\nparams.put(\n  \"payment_method_types\",\n  paymentMethodTypes\n);\nparams.put(\"line_items\", lineItems);\nparams.put(\"mode\", \"${6:payment}\");\n\nSession session = Session.create(params);"
  },
  "Retrieve Checkout Session Line Items": {
    "prefix": "StripeCheckoutSessionLineItemsRetrieve",
    "description": "Retrieve Checkout Session Line Items",
    "body": "Session session = Session.retrieve(\"${1:cs_test_xxxxxxxxxxxxx}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:5});\nLineItemCollection lineItems = session.listLineItems(params);\n\n"
  },
  "List Checkout Session": {
    "prefix": "StripeCheckoutSessionList",
    "description": "List Checkout Session",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nSessionCollection sessions = Session.list(params);"
  },
  "Retrieve Checkout Session": {
    "prefix": "StripeCheckoutSessionRetrieve",
    "description": "Retrieve Checkout Session",
    "body": "Session session =\n  Session.retrieve(\"${1:cs_test_xxxxxxxxxxxxx}\");"
  },
  "List Country Spec": {
    "prefix": "StripeCountrySpecList",
    "description": "List Country Spec",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nCountrySpecCollection countrySpecs =\n  CountrySpec.list(params);"
  },
  "Retrieve Country Spec": {
    "prefix": "StripeCountrySpecRetrieve",
    "description": "Retrieve Country Spec",
    "body": "CountrySpec countrySpec =\n  CountrySpec.retrieve(\"${1:US}\");"
  },
  "Create Coupon": {
    "prefix": "StripeCouponCreate",
    "description": "Create Coupon",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"percent_off\", ${1:25});\nparams.put(\"duration\", \"${2:repeating}\");\nparams.put(\"duration_in_months\", ${3:3});\n\nCoupon coupon = Coupon.create(params);"
  },
  "Delete Coupon": {
    "prefix": "StripeCouponDelete",
    "description": "Delete Coupon",
    "body": "Coupon coupon =\n  Coupon.retrieve(\"${1:co_xxxxxxxxxxxxx}\");\n\nCoupon deletedCoupon = coupon.delete();"
  },
  "List Coupon": {
    "prefix": "StripeCouponList",
    "description": "List Coupon",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nCouponCollection coupons = Coupon.list(params);"
  },
  "Retrieve Coupon": {
    "prefix": "StripeCouponRetrieve",
    "description": "Retrieve Coupon",
    "body": "Coupon coupon = Coupon.retrieve(\"${1:25_5OFF}\");"
  },
  "Update Coupon": {
    "prefix": "StripeCouponUpdate",
    "description": "Update Coupon",
    "body": "Coupon coupon =\n  Coupon.retrieve(\"${1:co_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nCoupon updatedCoupon = coupon.update(params);"
  },
  "Create Credit Note": {
    "prefix": "StripeCreditNoteCreate",
    "description": "Create Credit Note",
    "body": "List<Object> lines = new ArrayList<>();\nMap<String, Object> line1 = new HashMap<>();\nline1.put(\"type\", \"${2:invoice_line_item}\");\nline1.put(\n  \"invoice_line_item\",\n  \"il_xxxxxxxxxxxxx\"\n);\nline1.put(\"quantity\", ${4:1});\nlines.add(line1);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"invoice\", \"${1:in_xxxxxxxxxxxxx}\");\nparams.put(\"lines\", lines);\n\nCreditNote creditNote = CreditNote.create(params);"
  },
  "List Credit Note Line Item": {
    "prefix": "StripeCreditNoteLineItemList",
    "description": "List Credit Note Line Item",
    "body": "CreditNote creditNote =\n  CreditNote.retrieve(\"${1:cn_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:3});\n\nLineItemCollection lineItems =\n  creditNote.getLineItems().list(params);"
  },
  "Preview Credit Note Lines": {
    "prefix": "StripeCreditNoteLinesPreview",
    "description": "Preview Credit Note Lines",
    "body": "List<Object> lines = new ArrayList<>();\nMap<String, Object> line1 = new HashMap<>();\nline1.put(\"type\", \"invoice_line_item\");\nline1.put(\"invoice_line_item\", \"${1:il_xxxxxxxxxxxxx}\");\nline1.put(\"quantity\", ${2:1});\nlines.add(line1);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"invoice\", \"${3:in_xxxxxxxxxxxxx}\");\nparams.put(\"lines\", lines);\n\nCreditNote creditNote = CreditNote.preview(params);\n\ncreditNote.getLines().list();\n\n"
  },
  "List Credit Note": {
    "prefix": "StripeCreditNoteList",
    "description": "List Credit Note",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nCreditNoteCollection creditNotes =\n  CreditNote.list(params);"
  },
  "Preview Credit Note": {
    "prefix": "StripeCreditNotePreview",
    "description": "Preview Credit Note",
    "body": "List<Object> lines = new ArrayList<>();\nMap<String, Object> line1 = new HashMap<>();\nline1.put(\"type\", \"${2:invoice_line_item}\");\nline1.put(\n  \"invoice_line_item\",\n  \"il_xxxxxxxxxxxxx\"\n);\nline1.put(\"quantity\", ${4:1});\nlines.add(line1);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"invoice\", \"${1:in_xxxxxxxxxxxxx}\");\nparams.put(\"lines\", lines);\n\nCreditNote updatedCreditNote =\n  CreditNote.preview(params);"
  },
  "Retrieve Credit Note": {
    "prefix": "StripeCreditNoteRetrieve",
    "description": "Retrieve Credit Note",
    "body": "CreditNote creditNote =\n  CreditNote.retrieve(\"${1:cn_xxxxxxxxxxxxx}\");"
  },
  "Update Credit Note": {
    "prefix": "StripeCreditNoteUpdate",
    "description": "Update Credit Note",
    "body": "CreditNote creditNote =\n  CreditNote.retrieve(\"${1:cn_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nCreditNote updatedCreditNote =\n  creditNote.update(params);"
  },
  "Void Credit Note Credit Note": {
    "prefix": "StripeCreditNoteVoidCreditNote",
    "description": "Void Credit Note Credit Note",
    "body": "CreditNote creditNote =\n  CreditNote.retrieve(\"${1:cn_xxxxxxxxxxxxx}\");\n\nCreditNote updatedCreditNote =\n  creditNote.voidCreditNote();"
  },
  "Create Customer Balance Transaction": {
    "prefix": "StripeCustomerBalanceTransactionCreate",
    "description": "Create Customer Balance Transaction",
    "body": "Customer customer =\n  Customer.retrieve(\"${1:cus_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"amount\", ${2:-500});\nparams.put(\"currency\", \"${3:usd}\");\n\nBalanceTransaction balanceTransaction =\n  customer.balanceTransactions().create(params);"
  },
  "List Customer Balance Transaction": {
    "prefix": "StripeCustomerBalanceTransactionList",
    "description": "List Customer Balance Transaction",
    "body": "Customer customer =\n  Customer.retrieve(\"${1:cus_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:3});\n\nBalanceTransactionCollection balanceTransactions =\n  customer.balanceTransactions().list(params);"
  },
  "Retrieve Customer Balance Transaction": {
    "prefix": "StripeCustomerBalanceTransactionRetrieve",
    "description": "Retrieve Customer Balance Transaction",
    "body": "Customer customer =\n  Customer.retrieve(\"${2:cus_xxxxxxxxxxxxx}\");\n\nBalanceTransaction balanceTransaction =\n  customer.balanceTransactions().retrieve(\n    \"${1:cbtxn_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Customer Balance Transaction": {
    "prefix": "StripeCustomerBalanceTransactionUpdate",
    "description": "Update Customer Balance Transaction",
    "body": "Customer customer =\n  Customer.retrieve(\"${2:cus_xxxxxxxxxxxxx}\");\n\nBalanceTransaction balanceTransaction =\n  customer.balanceTransactions().retrieve(\n    \"${1:cbtxn_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${3:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nBalanceTransaction updatedBalanceTransaction =\n  balanceTransaction.update(params);"
  },
  "Create Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountCreate",
    "description": "Create Customer Bank Account",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${1:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"source\", \"${2:btok_xxxxxxxxxxxxx}\");\n\nBankAccount bankAccount =\n  (BankAccount) customer.getSources().create(\n    params\n  );"
  },
  "Delete Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountDelete",
    "description": "Delete Customer Bank Account",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nBankAccount bankAccount =\n  customer.getSources().retrieve(\n    \"${1:ba_xxxxxxxxxxxxx}\"\n  );\n\nBankAccount deletedBankAccount =\n  (BankAccount) bankAccount.delete();"
  },
  "List Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountList",
    "description": "List Customer Bank Account",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${1:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"object\", \"${2:bank_account}\");\nparams.put(\"limit\", ${3:3});\n\nPaymentSourceCollection bankAccounts =\n  customer.getSources().list(params);"
  },
  "Retrieve Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountRetrieve",
    "description": "Retrieve Customer Bank Account",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nBankAccount bankAccount =\n  (BankAccount) customer.getSources().retrieve(\n    \"${1:ba_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountUpdate",
    "description": "Update Customer Bank Account",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nBankAccount bankAccount =\n  customer.getSources().retrieve(\n    \"${1:ba_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${3:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nBankAccount updatedBankAccount =\n  (BankAccount) bankAccount.update(params);"
  },
  "Verify Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountVerify",
    "description": "Verify Customer Bank Account",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nBankAccount bankAccount =\n  customer.getSources().retrieve(\n    \"${1:ba_xxxxxxxxxxxxx}\"\n  );\n\nList<Object> amounts = new ArrayList<>();\namounts.add(${3:32});\namounts.add(${4:45});\nMap<String, Object> params = new HashMap<>();\nparams.put(\"amounts\", amounts);\n\nBankAccount updatedBankAccount =\n  (BankAccount) bankAccount.verify(params);"
  },
  "Create Customer Card": {
    "prefix": "StripeCustomerCardCreate",
    "description": "Create Customer Card",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${1:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"source\", \"${2:tok_xxxx}\");\n\nCard card =\n  (Card) customer.getSources().create(params);"
  },
  "Delete Customer Card": {
    "prefix": "StripeCustomerCardDelete",
    "description": "Delete Customer Card",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nCard card =\n  customer.getSources().retrieve(\n    \"${1:card_xxxxxxxxxxxxx}\"\n  );\n\nCard deletedCard = (Card) card.delete();"
  },
  "Retrieve Customer Card": {
    "prefix": "StripeCustomerCardRetrieve",
    "description": "Retrieve Customer Card",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nCard card =\n  (Card) customer.getSources().retrieve(\n    \"${1:card_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Customer Card": {
    "prefix": "StripeCustomerCardUpdate",
    "description": "Update Customer Card",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nCard card =\n  customer.getSources().retrieve(\n    \"${1:card_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"name\", \"${3:Jenny Rosen}\");\n\nCard updatedCard = (Card) card.update(params);"
  },
  "Create Customer": {
    "prefix": "StripeCustomerCreate",
    "description": "Create Customer",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\n  \"description\",\n  \"My First Test Customer (created for API docs)\"\n);\n\nCustomer customer = Customer.create(params);"
  },
  "Delete Customer": {
    "prefix": "StripeCustomerDelete",
    "description": "Delete Customer",
    "body": "Customer customer =\n  Customer.retrieve(\"${1:cus_xxxxxxxxxxxxx}\");\n\nCustomer deletedCustomer = customer.delete();"
  },
  "List Customer": {
    "prefix": "StripeCustomerList",
    "description": "List Customer",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nCustomerCollection customers =\n  Customer.list(params);"
  },
  "Retrieve Customer": {
    "prefix": "StripeCustomerRetrieve",
    "description": "Retrieve Customer",
    "body": "Customer customer =\n  Customer.retrieve(\"${1:cus_xxxxxxxxxxxxx}\");"
  },
  "Create Customer Tax Id": {
    "prefix": "StripeCustomerTaxIdCreate",
    "description": "Create Customer Tax Id",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"tax_ids\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${1:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"type\", \"${2:eu_vat}\");\nparams.put(\"value\", \"${3:DE123456789}\");\n\nTaxId taxId = customer.getTaxIds().create(params);"
  },
  "Delete Customer Tax Id": {
    "prefix": "StripeCustomerTaxIdDelete",
    "description": "Delete Customer Tax Id",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"tax_ids\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nTaxId taxId =\n  customer.getTaxIds().retrieve(\n    \"${1:txi_xxxxxxxxxxxxx}\"\n  );\n\nTaxId deletedTaxId = taxId.delete();"
  },
  "List Customer Tax Id": {
    "prefix": "StripeCustomerTaxIdList",
    "description": "List Customer Tax Id",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"tax_ids\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${1:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:3});\n\nTaxIdCollection taxIds =\n  customer.getTaxIds().list(params);"
  },
  "Retrieve Customer Tax Id": {
    "prefix": "StripeCustomerTaxIdRetrieve",
    "description": "Retrieve Customer Tax Id",
    "body": "Map<String, Object> retrieveParams =\n  new HashMap<>();\nList<String> expandList = new ArrayList<>();\nexpandList.add(\"tax_ids\");\nretrieveParams.put(\"expand\", expandList);\nCustomer customer =\n  Customer.retrieve(\n    \"${2:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\n\nTaxId taxId =\n  customer.getTaxIds().retrieve(\n    \"${1:txi_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Customer": {
    "prefix": "StripeCustomerUpdate",
    "description": "Update Customer",
    "body": "Customer customer =\n  Customer.retrieve(\"${1:cus_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nCustomer updatedCustomer =\n  customer.update(params);"
  },
  "Delete Discount": {
    "prefix": "StripeDiscountDelete",
    "description": "Delete Discount",
    "body": "Customer customer = Customer.retrieve(\"${1:cus_xxxxxxxxxxxxx}\");\ncustomer.deleteDiscount();\n\n"
  },
  "Close Dispute": {
    "prefix": "StripeDisputeClose",
    "description": "Close Dispute",
    "body": "Dispute dispute =\n  Dispute.retrieve(\"${1:dp_xxxxxxxxxxxxx}\");\n\nDispute updatedDispute = dispute.close();"
  },
  "List Dispute": {
    "prefix": "StripeDisputeList",
    "description": "List Dispute",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nDisputeCollection disputes = Dispute.list(params);"
  },
  "Retrieve Dispute": {
    "prefix": "StripeDisputeRetrieve",
    "description": "Retrieve Dispute",
    "body": "Dispute dispute =\n  Dispute.retrieve(\"${1:dp_xxxxxxxxxxxxx}\");"
  },
  "Update Dispute": {
    "prefix": "StripeDisputeUpdate",
    "description": "Update Dispute",
    "body": "Dispute dispute =\n  Dispute.retrieve(\"${1:dp_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nDispute updatedDispute = dispute.update(params);"
  },
  "List Event": {
    "prefix": "StripeEventList",
    "description": "List Event",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nEventCollection events = Event.list(params);"
  },
  "Retrieve Event": {
    "prefix": "StripeEventRetrieve",
    "description": "Retrieve Event",
    "body": "Event event = Event.retrieve(\"${1:evt_xxxxxxxxxxxxx}\");"
  },
  "Create File": {
    "prefix": "StripeFileCreate",
    "description": "Create File",
    "body": "Map<String, Object> fileParams = new HashMap<>();\nfileParams.put(\"purpose\", \"dispute_evidence\");\nfileParams.put(\"file\", new File('${1:/path/to/a/file.jpg}'));\nFile.create(fileParams);\n"
  },
  "Create File Link": {
    "prefix": "StripeFileLinkCreate",
    "description": "Create File Link",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"file\", \"${1:file_xxxxxxxxxxxxx}\");\n\nFileLink fileLink = FileLink.create(params);"
  },
  "List File Link": {
    "prefix": "StripeFileLinkList",
    "description": "List File Link",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nFileLinkCollection fileLinks =\n  FileLink.list(params);"
  },
  "Retrieve File Link": {
    "prefix": "StripeFileLinkRetrieve",
    "description": "Retrieve File Link",
    "body": "FileLink fileLink =\n  FileLink.retrieve(\"${1:link_xxxxxxxxxxxxx}\");"
  },
  "Update File Link": {
    "prefix": "StripeFileLinkUpdate",
    "description": "Update File Link",
    "body": "FileLink fileLink =\n  FileLink.retrieve(\"${1:link_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nFileLink updatedFileLink =\n  fileLink.update(params);"
  },
  "List File": {
    "prefix": "StripeFileList",
    "description": "List File",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nFileCollection files = File.list(params);"
  },
  "Retrieve File": {
    "prefix": "StripeFileRetrieve",
    "description": "Retrieve File",
    "body": "File file = File.retrieve(\"${1:file_xxxxxxxxxxxxx}\");"
  },
  "Create Funding Instruction": {
    "prefix": "StripeFundingInstructionCreate",
    "description": "Create Funding Instruction",
    "body": "Map<String, Object> bankTransfer =\n  new HashMap<>();\nbankTransfer.put(\"type\", \"${4:iban}\");\nbankTransfer.put(\"country\", \"${5:DE}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"funding_type\", \"${1:bank_xxxxxxxxxxxxx}\");\nparams.put(\"currency\", \"${2:eur}\");\nparams.put(\"destination_balance\", \"${3:issuing}\");\nparams.put(\"bank_transfer\", bankTransfer);\n\nFundingInstruction fundingInstruction =\n  FundingInstruction.create(params);"
  },
  "List Funding Instruction": {
    "prefix": "StripeFundingInstructionList",
    "description": "List Funding Instruction",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nFundingInstructionCollection fundingInstructions =\n  FundingInstruction.list(params);"
  },
  "Retrieve Funding Instruction": {
    "prefix": "StripeFundingInstructionRetrieve",
    "description": "Retrieve Funding Instruction",
    "body": "FundingInstruction fundingInstruction =\n  FundingInstruction.retrieve(\"${1:fi_xxxxxxxxxxxxx}\");"
  },
  "Update Funding Instruction": {
    "prefix": "StripeFundingInstructionUpdate",
    "description": "Update Funding Instruction",
    "body": "FundingInstruction fundingInstruction =\n  FundingInstruction.retrieve(\"${1:fi_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nFundingInstruction updatedFundingInstruction =\n  fundingInstruction.update(params);"
  },
  "Create Invoice": {
    "prefix": "StripeInvoiceCreate",
    "description": "Create Invoice",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"customer\", \"${1:cus_xxxxxxxxxxxxx}\");\n\nInvoice invoice = Invoice.create(params);"
  },
  "Delete Invoice": {
    "prefix": "StripeInvoiceDelete",
    "description": "Delete Invoice",
    "body": "Invoice invoice =\n  Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");\n\nInvoice deletedInvoice = invoice.delete();"
  },
  "Finalize Invoice Invoice": {
    "prefix": "StripeInvoiceFinalizeInvoice",
    "description": "Finalize Invoice Invoice",
    "body": "Invoice invoice =\n  Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");\n\nInvoice updatedInvoice =\n  invoice.finalizeInvoice();"
  },
  "Create Invoice Item": {
    "prefix": "StripeInvoiceItemCreate",
    "description": "Create Invoice Item",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"customer\", \"${1:cus_xxxxxxxxxxxxx}\");\nparams.put(\"price\", \"${2:price_xxxxxxxxxxxxx}\");\n\nInvoiceItem invoiceItem =\n  InvoiceItem.create(params);"
  },
  "Delete Invoice Item": {
    "prefix": "StripeInvoiceItemDelete",
    "description": "Delete Invoice Item",
    "body": "InvoiceItem invoiceItem =\n  InvoiceItem.retrieve(\"${1:ii_xxxxxxxxxxxxx}\");\n\nInvoiceItem deletedInvoiceItem =\n  invoiceItem.delete();"
  },
  "List Invoice Item": {
    "prefix": "StripeInvoiceItemList",
    "description": "List Invoice Item",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nInvoiceItemCollection invoiceItems =\n  InvoiceItem.list(params);"
  },
  "Retrieve Invoice Item": {
    "prefix": "StripeInvoiceItemRetrieve",
    "description": "Retrieve Invoice Item",
    "body": "InvoiceItem invoiceItem =\n  InvoiceItem.retrieve(\"${1:ii_xxxxxxxxxxxxx}\");"
  },
  "Update Invoice Item": {
    "prefix": "StripeInvoiceItemUpdate",
    "description": "Update Invoice Item",
    "body": "InvoiceItem invoiceItem =\n  InvoiceItem.retrieve(\"${1:ii_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nInvoiceItem updatedInvoiceItem =\n  invoiceItem.update(params);"
  },
  "Invoice Lines": {
    "prefix": "StripeInvoiceLines",
    "description": "Invoice Lines",
    "body": "Invoice invoice = Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:5});\nInvoiceLineItemCollection lines = invoice.getLines().list(params);\n\n"
  },
  "Upcoming Invoice Lines": {
    "prefix": "StripeInvoiceLinesUpcoming",
    "description": "Upcoming Invoice Lines",
    "body": "Map<String, Object> invoiceParams = new HashMap<>();\ninvoiceParams.put(\"customer\", \"${1:cus_xxxxxxxxxxxxx}\");\n\nInvoice invoice = Invoice.upcoming(invoiceParams);\n\nMap<String, Object> lineParams = new HashMap<>();\nlineParams.put(\"limit\", ${2:5});\nInvoiceLineItemCollection lines = invoice.getLines().list(lineParams);\n\n"
  },
  "List Invoice": {
    "prefix": "StripeInvoiceList",
    "description": "List Invoice",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nInvoiceCollection invoices = Invoice.list(params);"
  },
  "Mark Uncollectible Invoice": {
    "prefix": "StripeInvoiceMarkUncollectible",
    "description": "Mark Uncollectible Invoice",
    "body": "Invoice invoice =\n  Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");\n\nInvoice updatedInvoice =\n  invoice.markUncollectible();"
  },
  "Pay Invoice": {
    "prefix": "StripeInvoicePay",
    "description": "Pay Invoice",
    "body": "Invoice invoice =\n  Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");\n\nInvoice updatedInvoice = invoice.pay();"
  },
  "Retrieve Invoice": {
    "prefix": "StripeInvoiceRetrieve",
    "description": "Retrieve Invoice",
    "body": "Invoice invoice =\n  Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");"
  },
  "Send Invoice Invoice": {
    "prefix": "StripeInvoiceSendInvoice",
    "description": "Send Invoice Invoice",
    "body": "Invoice invoice =\n  Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");\n\nInvoice updatedInvoice = invoice.sendInvoice();"
  },
  "Upcoming Invoice": {
    "prefix": "StripeInvoiceUpcoming",
    "description": "Upcoming Invoice",
    "body": "Map<String, Object> invoiceParams = new HashMap<>();\ninvoiceParams.put(\"customer\", \"${1:cus_xxxxxxxxxxxxx}\");\n\nInvoice.upcoming(invoiceParams);\n"
  },
  "Update Invoice": {
    "prefix": "StripeInvoiceUpdate",
    "description": "Update Invoice",
    "body": "Invoice invoice =\n  Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nInvoice updatedInvoice = invoice.update(params);"
  },
  "Void Invoice Invoice": {
    "prefix": "StripeInvoiceVoidInvoice",
    "description": "Void Invoice Invoice",
    "body": "Invoice invoice =\n  Invoice.retrieve(\"${1:in_xxxxxxxxxxxxx}\");\n\nInvoice updatedInvoice = invoice.voidInvoice();"
  },
  "Approve Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationApprove",
    "description": "Approve Issuing Authorization",
    "body": "Authorization authorization =\n  Authorization.retrieve(\"${1:iauth_xxxxxxxxxxxxx}\");\n\nAuthorization updatedAuthorization =\n  authorization.approve();"
  },
  "Decline Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationDecline",
    "description": "Decline Issuing Authorization",
    "body": "Authorization authorization =\n  Authorization.retrieve(\"${1:iauth_xxxxxxxxxxxxx}\");\n\nAuthorization updatedAuthorization =\n  authorization.decline();"
  },
  "List Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationList",
    "description": "List Issuing Authorization",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nAuthorizationCollection authorizations =\n  Authorization.list(params);"
  },
  "Retrieve Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationRetrieve",
    "description": "Retrieve Issuing Authorization",
    "body": "Authorization authorization =\n  Authorization.retrieve(\"${1:iauth_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationUpdate",
    "description": "Update Issuing Authorization",
    "body": "Authorization authorization =\n  Authorization.retrieve(\"${1:iauth_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nAuthorization updatedAuthorization =\n  authorization.update(params);"
  },
  "Create Issuing Card": {
    "prefix": "StripeIssuingCardCreate",
    "description": "Create Issuing Card",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"cardholder\", \"${1:ich_xxxxxxxxxxxxx}\");\nparams.put(\"currency\", \"${2:usd}\");\nparams.put(\"type\", \"${3:virtual}\");\n\nCard card = (Card) Card.create(params);"
  },
  "Create Issuing Cardholder": {
    "prefix": "StripeIssuingCardholderCreate",
    "description": "Create Issuing Cardholder",
    "body": "Map<String, Object> address = new HashMap<>();\naddress.put(\"line1\", \"${5:1234 Main Street}\");\naddress.put(\"city\", \"${6:San Francisco}\");\naddress.put(\"state\", \"${7:CA}\");\naddress.put(\"country\", \"${8:US}\");\naddress.put(\"postal_code\", \"${9:94111}\");\nMap<String, Object> billing = new HashMap<>();\nbilling.put(\"address\", address);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"type\", \"${1:individual}\");\nparams.put(\"name\", \"${2:Jenny Rosen}\");\nparams.put(\"email\", \"${3:jenny.rosen@example.com}\");\nparams.put(\"phone_number\", \"${4:+18888675309}\");\nparams.put(\"billing\", billing);\n\nCardholder cardholder = Cardholder.create(params);"
  },
  "List Issuing Cardholder": {
    "prefix": "StripeIssuingCardholderList",
    "description": "List Issuing Cardholder",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nCardholderCollection cardholders =\n  Cardholder.list(params);"
  },
  "Retrieve Issuing Cardholder": {
    "prefix": "StripeIssuingCardholderRetrieve",
    "description": "Retrieve Issuing Cardholder",
    "body": "Cardholder cardholder =\n  Cardholder.retrieve(\"${1:ich_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Cardholder": {
    "prefix": "StripeIssuingCardholderUpdate",
    "description": "Update Issuing Cardholder",
    "body": "Cardholder cardholder =\n  Cardholder.retrieve(\"${1:ich_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nCardholder updatedCardholder =\n  cardholder.update(params);"
  },
  "List Issuing Card": {
    "prefix": "StripeIssuingCardList",
    "description": "List Issuing Card",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nPaymentSourceCollection cards = Card.list(params);"
  },
  "Retrieve Issuing Card": {
    "prefix": "StripeIssuingCardRetrieve",
    "description": "Retrieve Issuing Card",
    "body": "Card card =\n  (Card) Card.retrieve(\"${1:ic_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Card": {
    "prefix": "StripeIssuingCardUpdate",
    "description": "Update Issuing Card",
    "body": "Card card = Card.retrieve(\"${1:ic_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nCard updatedCard = (Card) card.update(params);"
  },
  "Create Issuing Dispute": {
    "prefix": "StripeIssuingDisputeCreate",
    "description": "Create Issuing Dispute",
    "body": "Map<String, Object> fraudulent = new HashMap<>();\nfraudulent.put(\n  \"explanation\",\n  \"Purchase was unrecognized.\"\n);\nMap<String, Object> evidence = new HashMap<>();\nevidence.put(\"reason\", \"${2:fraudulent}\");\nevidence.put(\"fraudulent\", fraudulent);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"transaction\", \"${1:ipi_xxxxxxxxxxxxx}\");\nparams.put(\"evidence\", evidence);\n\nDispute dispute = Dispute.create(params);"
  },
  "List Issuing Dispute": {
    "prefix": "StripeIssuingDisputeList",
    "description": "List Issuing Dispute",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nDisputeCollection disputes = Dispute.list(params);"
  },
  "Retrieve Issuing Dispute": {
    "prefix": "StripeIssuingDisputeRetrieve",
    "description": "Retrieve Issuing Dispute",
    "body": "Dispute dispute =\n  Dispute.retrieve(\"${1:idp_xxxxxxxxxxxxx}\");"
  },
  "Submit Issuing Dispute": {
    "prefix": "StripeIssuingDisputeSubmit",
    "description": "Submit Issuing Dispute",
    "body": "Dispute dispute =\n  Dispute.retrieve(\"${1:idp_xxxxxxxxxxxxx}\");\n\nDispute updatedDispute = dispute.submit();"
  },
  "Update Issuing Dispute": {
    "prefix": "StripeIssuingDisputeUpdate",
    "description": "Update Issuing Dispute",
    "body": "Dispute dispute =\n  Dispute.retrieve(\"${1:idp_xxxxxxxxxxxxx}\");\n\nMap<String, Object> notReceived = new HashMap<>();\nnotReceived.put(\"expected_at\", ${3:1590000000});\nnotReceived.put(\"explanation${4:}\", \"\");\nnotReceived.put(\n  \"product_description\",\n  \"Baseball cap\"\n);\nnotReceived.put(\"product_type\", \"${6:merchandise}\");\nMap<String, Object> evidence = new HashMap<>();\nevidence.put(\"reason\", \"${2:not_xxxxxxxxxxxxx}\");\nevidence.put(\"not_received\", notReceived);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"evidence\", evidence);\n\nDispute updatedDispute = dispute.update(params);"
  },
  "List Issuing Transaction": {
    "prefix": "StripeIssuingTransactionList",
    "description": "List Issuing Transaction",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nTransactionCollection transactions =\n  Transaction.list(params);"
  },
  "Retrieve Issuing Transaction": {
    "prefix": "StripeIssuingTransactionRetrieve",
    "description": "Retrieve Issuing Transaction",
    "body": "Transaction transaction =\n  Transaction.retrieve(\"${1:ipi_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Transaction": {
    "prefix": "StripeIssuingTransactionUpdate",
    "description": "Update Issuing Transaction",
    "body": "Transaction transaction =\n  Transaction.retrieve(\"${1:ipi_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nTransaction updatedTransaction =\n  transaction.update(params);"
  },
  "Create Login Link": {
    "prefix": "StripeLoginLinkCreate",
    "description": "Create Login Link",
    "body": "LoginLink login_link = LoginLink.createOnAccount(\n  \"${1:acct_xxxxxxxxxxxxx}\",\n  (Map<String, Object>) null,\n  (RequestOptions) null\n);\n\n"
  },
  "Retrieve Mandate": {
    "prefix": "StripeMandateRetrieve",
    "description": "Retrieve Mandate",
    "body": "Mandate mandate =\n  Mandate.retrieve(\"${1:mandate_xxxxxxxxxxxxx}\");"
  },
  "Create Order": {
    "prefix": "StripeOrderCreate",
    "description": "Create Order",
    "body": "List<Object> items = new ArrayList<>();\nMap<String, Object> item1 = new HashMap<>();\nitem1.put(\"type\", \"${3:sku}\");\nitem1.put(\"parent\", \"${4:sku_xxxxxxxxxxxxx}\");\nitems.add(item1);\nMap<String, Object> address = new HashMap<>();\naddress.put(\"line1\", \"${6:1234 Main Street}\");\naddress.put(\"city\", \"${7:San Francisco}\");\naddress.put(\"state\", \"${8:CA}\");\naddress.put(\"country\", \"${9:US}\");\naddress.put(\"postal_code\", \"${10:94111}\");\nMap<String, Object> shipping = new HashMap<>();\nshipping.put(\"name\", \"${5:Jenny Rosen}\");\nshipping.put(\"address\", address);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"currency\", \"${1:usd}\");\nparams.put(\"email\", \"${2:jenny.rosen@example.com}\");\nparams.put(\"items\", items);\nparams.put(\"shipping\", shipping);\n\nOrder order = Order.create(params);"
  },
  "List Order": {
    "prefix": "StripeOrderList",
    "description": "List Order",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nOrderCollection orders = Order.list(params);"
  },
  "Pay Order": {
    "prefix": "StripeOrderPay",
    "description": "Pay Order",
    "body": "Order order = Order.retrieve(\"${1:or_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"source\", \"${2:tok_xxxx}\");\n\nOrder updatedOrder = order.pay(params);"
  },
  "Retrieve Order": {
    "prefix": "StripeOrderRetrieve",
    "description": "Retrieve Order",
    "body": "Order order = Order.retrieve(\"${1:or_xxxxxxxxxxxxx}\");"
  },
  "Return Order": {
    "prefix": "StripeOrderReturn",
    "description": "Return Order",
    "body": "Map<String, Object> params = new HashMap<>();\nList<Map<String, String>> items = new ArrayList<>();\nMap<String, String> itemParams = new HashMap<>();\nitemParams.put(\"type\", \"sku\");\nitemParams.put(\"parent\", \"${1:sku_xxxxxxxxxxxxx}\");\nitems.add(itemParams);\nparams.put(\"items\", items);\nOrder order = Order.retrieve(\"${2:or_xxxxxxxxxxxxx}\");\n\norder.returnOrder(params);\n\n"
  },
  "List Order Return": {
    "prefix": "StripeOrderReturnList",
    "description": "List Order Return",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nOrderReturnCollection orderReturns =\n  OrderReturn.list(params);"
  },
  "Retrieve Order Return": {
    "prefix": "StripeOrderReturnRetrieve",
    "description": "Retrieve Order Return",
    "body": "OrderReturn orderReturn =\n  OrderReturn.retrieve(\"${1:orret_xxxxxxxxxxxxx}\");"
  },
  "Update Order": {
    "prefix": "StripeOrderUpdate",
    "description": "Update Order",
    "body": "Order order = Order.retrieve(\"${1:or_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nOrder updatedOrder = order.update(params);"
  },
  "Cancel Payment Intent": {
    "prefix": "StripePaymentIntentCancel",
    "description": "Cancel Payment Intent",
    "body": "// To create a PaymentIntent, see our guide at: https://mock.stripe.com/docs/payments/payment-intents/creating-payment-intents#creating-for-automatic\nPaymentIntent paymentIntent =\n  PaymentIntent.retrieve(\"${1:pi_xxxxxxxxxxxxx}\");\n\nPaymentIntent updatedPaymentIntent =\n  paymentIntent.cancel();"
  },
  "Capture Payment Intent": {
    "prefix": "StripePaymentIntentCapture",
    "description": "Capture Payment Intent",
    "body": "// To create a requires_capture PaymentIntent, see our guide at: https://mock.stripe.com/docs/payments/capture-later\nPaymentIntent paymentIntent =\n  PaymentIntent.retrieve(\"${1:pi_xxxxxxxxxxxxx}\");\n\nPaymentIntent updatedPaymentIntent =\n  paymentIntent.capture();"
  },
  "Confirm Payment Intent": {
    "prefix": "StripePaymentIntentConfirm",
    "description": "Confirm Payment Intent",
    "body": "// To create a PaymentIntent for confirmation, see our guide at: https://mock.stripe.com/docs/payments/payment-intents/creating-payment-intents#creating-for-automatic\nPaymentIntent paymentIntent =\n  PaymentIntent.retrieve(\"${1:pi_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"payment_method\", \"${2:pm_card_visa}\");\n\nPaymentIntent updatedPaymentIntent =\n  paymentIntent.confirm(params);"
  },
  "Create Payment Intent": {
    "prefix": "StripePaymentIntentCreate",
    "description": "Create Payment Intent",
    "body": "List<Object> paymentMethodTypes =\n  new ArrayList<>();\npaymentMethodTypes.add(\"card\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"amount\", ${1:2000});\nparams.put(\"currency\", \"${2:usd}\");\nparams.put(\n  \"payment_method_types\",\n  paymentMethodTypes\n);\n\nPaymentIntent paymentIntent =\n  PaymentIntent.create(params);"
  },
  "List Payment Intent": {
    "prefix": "StripePaymentIntentList",
    "description": "List Payment Intent",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nPaymentIntentCollection paymentIntents =\n  PaymentIntent.list(params);"
  },
  "Retrieve Payment Intent": {
    "prefix": "StripePaymentIntentRetrieve",
    "description": "Retrieve Payment Intent",
    "body": "PaymentIntent paymentIntent =\n  PaymentIntent.retrieve(\"${1:pi_xxxxxxxxxxxxx}\");"
  },
  "Update Payment Intent": {
    "prefix": "StripePaymentIntentUpdate",
    "description": "Update Payment Intent",
    "body": "PaymentIntent paymentIntent =\n  PaymentIntent.retrieve(\"${1:pi_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nPaymentIntent updatedPaymentIntent =\n  paymentIntent.update(params);"
  },
  "Attach Payment Method": {
    "prefix": "StripePaymentMethodAttach",
    "description": "Attach Payment Method",
    "body": "PaymentMethod paymentMethod =\n  PaymentMethod.retrieve(\"${1:pm_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"customer\", \"${2:cus_xxxxxxxxxxxxx}\");\n\nPaymentMethod updatedPaymentMethod =\n  paymentMethod.attach(params);"
  },
  "Create Payment Method": {
    "prefix": "StripePaymentMethodCreate",
    "description": "Create Payment Method",
    "body": "Map<String, Object> card = new HashMap<>();\ncard.put(\"number\", \"${2:4242424242424242}\");\ncard.put(\"exp_month\", ${3:5});\ncard.put(\"exp_year\", ${4:2022});\ncard.put(\"cvc\", \"${5:314}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"type\", \"${1:card}\");\nparams.put(\"card\", card);\n\nPaymentMethod paymentMethod =\n  PaymentMethod.create(params);"
  },
  "Detach Payment Method": {
    "prefix": "StripePaymentMethodDetach",
    "description": "Detach Payment Method",
    "body": "PaymentMethod paymentMethod =\n  PaymentMethod.retrieve(\"${1:pm_xxxxxxxxxxxxx}\");\n\nPaymentMethod updatedPaymentMethod =\n  paymentMethod.detach();"
  },
  "List Payment Method": {
    "prefix": "StripePaymentMethodList",
    "description": "List Payment Method",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"customer\", \"${1:cus_xxxxxxxxxxxxx}\");\nparams.put(\"type\", \"${2:card}\");\n\nPaymentMethodCollection paymentMethods =\n  PaymentMethod.list(params);"
  },
  "Retrieve Payment Method": {
    "prefix": "StripePaymentMethodRetrieve",
    "description": "Retrieve Payment Method",
    "body": "PaymentMethod paymentMethod =\n  PaymentMethod.retrieve(\"${1:pm_xxxxxxxxxxxxx}\");"
  },
  "Update Payment Method": {
    "prefix": "StripePaymentMethodUpdate",
    "description": "Update Payment Method",
    "body": "PaymentMethod paymentMethod =\n  PaymentMethod.retrieve(\"${1:pm_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nPaymentMethod updatedPaymentMethod =\n  paymentMethod.update(params);"
  },
  "Cancel Payout": {
    "prefix": "StripePayoutCancel",
    "description": "Cancel Payout",
    "body": "Payout payout =\n  Payout.retrieve(\"${1:po_xxxxxxxxxxxxx}\");\n\nPayout updatedPayout = payout.cancel();"
  },
  "Create Payout": {
    "prefix": "StripePayoutCreate",
    "description": "Create Payout",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"amount\", ${1:1100});\nparams.put(\"currency\", \"${2:usd}\");\n\nPayout payout = Payout.create(params);"
  },
  "List Payout": {
    "prefix": "StripePayoutList",
    "description": "List Payout",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nPayoutCollection payouts = Payout.list(params);"
  },
  "Retrieve Payout": {
    "prefix": "StripePayoutRetrieve",
    "description": "Retrieve Payout",
    "body": "Payout payout =\n  Payout.retrieve(\"${1:po_xxxxxxxxxxxxx}\");"
  },
  "Reverse Payout": {
    "prefix": "StripePayoutReverse",
    "description": "Reverse Payout",
    "body": "Payout payout =\n  Payout.retrieve(\"${1:po_xxxxxxxxxxxxx}\");\n\nPayout updatedPayout = payout.reverse();"
  },
  "Update Payout": {
    "prefix": "StripePayoutUpdate",
    "description": "Update Payout",
    "body": "Payout payout =\n  Payout.retrieve(\"${1:po_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nPayout updatedPayout = payout.update(params);"
  },
  "Create Plan": {
    "prefix": "StripePlanCreate",
    "description": "Create Plan",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"amount\", ${1:2000});\nparams.put(\"currency\", \"${2:usd}\");\nparams.put(\"interval\", \"${3:month}\");\nparams.put(\"product\", \"${4:prod_xxxxxxxxxxxxx}\");\n\nPlan plan = Plan.create(params);"
  },
  "Delete Plan": {
    "prefix": "StripePlanDelete",
    "description": "Delete Plan",
    "body": "Plan plan = Plan.retrieve(\"${1:price_xxxxxxxxxxxxx}\");\n\nPlan deletedPlan = plan.delete();"
  },
  "List Plan": {
    "prefix": "StripePlanList",
    "description": "List Plan",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nPlanCollection plans = Plan.list(params);"
  },
  "Retrieve Plan": {
    "prefix": "StripePlanRetrieve",
    "description": "Retrieve Plan",
    "body": "Plan plan = Plan.retrieve(\"${1:price_xxxxxxxxxxxxx}\");"
  },
  "Update Plan": {
    "prefix": "StripePlanUpdate",
    "description": "Update Plan",
    "body": "Plan plan = Plan.retrieve(\"${1:price_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nPlan updatedPlan = plan.update(params);"
  },
  "Create Price": {
    "prefix": "StripePriceCreate",
    "description": "Create Price",
    "body": "Map<String, Object> recurring = new HashMap<>();\nrecurring.put(\"interval\", \"${3:month}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"unit_amount\", ${1:2000});\nparams.put(\"currency\", \"${2:usd}\");\nparams.put(\"recurring\", recurring);\nparams.put(\"product\", \"${4:prod_xxxxxxxxxxxxx}\");\n\nPrice price = Price.create(params);"
  },
  "List Price": {
    "prefix": "StripePriceList",
    "description": "List Price",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nPriceCollection prices = Price.list(params);"
  },
  "Retrieve Price": {
    "prefix": "StripePriceRetrieve",
    "description": "Retrieve Price",
    "body": "Price price =\n  Price.retrieve(\"${1:price_xxxxxxxxxxxxx}\");"
  },
  "Update Price": {
    "prefix": "StripePriceUpdate",
    "description": "Update Price",
    "body": "Price price =\n  Price.retrieve(\"${1:price_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nPrice updatedPrice = price.update(params);"
  },
  "Create Product": {
    "prefix": "StripeProductCreate",
    "description": "Create Product",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"name\", \"${1:Gold Special}\");\n\nProduct product = Product.create(params);"
  },
  "Delete Product": {
    "prefix": "StripeProductDelete",
    "description": "Delete Product",
    "body": "Product product =\n  Product.retrieve(\"${1:prod_xxxxxxxxxxxxx}\");\n\nProduct deletedProduct = product.delete();"
  },
  "List Product": {
    "prefix": "StripeProductList",
    "description": "List Product",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nProductCollection products = Product.list(params);"
  },
  "Retrieve Product": {
    "prefix": "StripeProductRetrieve",
    "description": "Retrieve Product",
    "body": "Product product =\n  Product.retrieve(\"${1:prod_xxxxxxxxxxxxx}\");"
  },
  "Update Product": {
    "prefix": "StripeProductUpdate",
    "description": "Update Product",
    "body": "Product product =\n  Product.retrieve(\"${1:prod_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nProduct updatedProduct = product.update(params);"
  },
  "Create Promotion Code": {
    "prefix": "StripePromotionCodeCreate",
    "description": "Create Promotion Code",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"coupon\", \"${1:25_5OFF}\");\n\nPromotionCode promotionCode =\n  PromotionCode.create(params);"
  },
  "List Promotion Code": {
    "prefix": "StripePromotionCodeList",
    "description": "List Promotion Code",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nPromotionCodeCollection promotionCodes =\n  PromotionCode.list(params);"
  },
  "Retrieve Promotion Code": {
    "prefix": "StripePromotionCodeRetrieve",
    "description": "Retrieve Promotion Code",
    "body": "PromotionCode promotionCode =\n  PromotionCode.retrieve(\"${1:promo_xxxxxxxxxxxxx}\");"
  },
  "Update Promotion Code": {
    "prefix": "StripePromotionCodeUpdate",
    "description": "Update Promotion Code",
    "body": "PromotionCode promotionCode =\n  PromotionCode.retrieve(\"${1:promo_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nPromotionCode updatedPromotionCode =\n  promotionCode.update(params);"
  },
  "List Radar Early Fraud Warning": {
    "prefix": "StripeRadarEarlyFraudWarningList",
    "description": "List Radar Early Fraud Warning",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nEarlyFraudWarningCollection earlyFraudWarnings =\n  EarlyFraudWarning.list(params);"
  },
  "Retrieve Radar Early Fraud Warning": {
    "prefix": "StripeRadarEarlyFraudWarningRetrieve",
    "description": "Retrieve Radar Early Fraud Warning",
    "body": "EarlyFraudWarning earlyFraudWarning =\n  EarlyFraudWarning.retrieve(\n    \"${1:issfr_xxxxxxxxxxxxx}\"\n  );"
  },
  "Create Radar Value List": {
    "prefix": "StripeRadarValueListCreate",
    "description": "Create Radar Value List",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"alias\", \"${1:custom_ip_xxxxxxxxxxxxx}\");\nparams.put(\"name\", \"${2:Custom IP Blocklist}\");\nparams.put(\"item_type\", \"${3:ip_address}\");\n\nValueList valueList = ValueList.create(params);"
  },
  "Delete Radar Value List": {
    "prefix": "StripeRadarValueListDelete",
    "description": "Delete Radar Value List",
    "body": "ValueList valueList =\n  ValueList.retrieve(\"${1:rsl_xxxxxxxxxxxxx}\");\n\nValueList deletedValueList = valueList.delete();"
  },
  "Create Radar Value List Item": {
    "prefix": "StripeRadarValueListItemCreate",
    "description": "Create Radar Value List Item",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"value_list\", \"${1:rsl_xxxxxxxxxxxxx}\");\nparams.put(\"value\", \"${2:1.2.3.4}\");\n\nValueListItem valueListItem =\n  ValueListItem.create(params);"
  },
  "Delete Radar Value List Item": {
    "prefix": "StripeRadarValueListItemDelete",
    "description": "Delete Radar Value List Item",
    "body": "ValueListItem valueListItem =\n  ValueListItem.retrieve(\"${1:rsli_xxxxxxxxxxxxx}\");\n\nValueListItem deletedValueListItem =\n  valueListItem.delete();"
  },
  "List Radar Value List Item": {
    "prefix": "StripeRadarValueListItemList",
    "description": "List Radar Value List Item",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\nparams.put(\"value_list\", \"${2:rsl_xxxxxxxxxxxxx}\");\n\nValueListItemCollection valueListItems =\n  ValueListItem.list(params);"
  },
  "Retrieve Radar Value List Item": {
    "prefix": "StripeRadarValueListItemRetrieve",
    "description": "Retrieve Radar Value List Item",
    "body": "ValueListItem valueListItem =\n  ValueListItem.retrieve(\"${1:rsli_xxxxxxxxxxxxx}\");"
  },
  "List Radar Value List": {
    "prefix": "StripeRadarValueListList",
    "description": "List Radar Value List",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nValueListCollection valueLists =\n  ValueList.list(params);"
  },
  "Retrieve Radar Value List": {
    "prefix": "StripeRadarValueListRetrieve",
    "description": "Retrieve Radar Value List",
    "body": "ValueList valueList =\n  ValueList.retrieve(\"${1:rsl_xxxxxxxxxxxxx}\");"
  },
  "Update Radar Value List": {
    "prefix": "StripeRadarValueListUpdate",
    "description": "Update Radar Value List",
    "body": "ValueList valueList =\n  ValueList.retrieve(\"${1:rsl_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"name\", \"${2:Updated IP Block List}\");\n\nValueList updatedValueList =\n  valueList.update(params);"
  },
  "Create Refund": {
    "prefix": "StripeRefundCreate",
    "description": "Create Refund",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"charge\", \"${1:ch_xxxxxxxxxxxxx}\");\n\nRefund refund = Refund.create(params);"
  },
  "List Refund": {
    "prefix": "StripeRefundList",
    "description": "List Refund",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nRefundCollection refunds = Refund.list(params);"
  },
  "Retrieve Refund": {
    "prefix": "StripeRefundRetrieve",
    "description": "Retrieve Refund",
    "body": "Refund refund =\n  Refund.retrieve(\"${1:re_xxxxxxxxxxxxx}\");"
  },
  "Update Refund": {
    "prefix": "StripeRefundUpdate",
    "description": "Update Refund",
    "body": "Refund refund =\n  Refund.retrieve(\"${1:re_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nRefund updatedRefund = refund.update(params);"
  },
  "Create Reporting Report Run": {
    "prefix": "StripeReportingReportRunCreate",
    "description": "Create Reporting Report Run",
    "body": "Map<String, Object> parameters = new HashMap<>();\nparameters.put(\"interval_start\", ${2:1522540800});\nparameters.put(\"interval_end\", ${3:1525132800});\nMap<String, Object> params = new HashMap<>();\nparams.put(\"report_type\", \"${1:balance.summary.1}\");\nparams.put(\"parameters\", parameters);\n\nReportRun reportRun = ReportRun.create(params);"
  },
  "List Reporting Report Run": {
    "prefix": "StripeReportingReportRunList",
    "description": "List Reporting Report Run",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nReportRunCollection reportRuns =\n  ReportRun.list(params);"
  },
  "Retrieve Reporting Report Run": {
    "prefix": "StripeReportingReportRunRetrieve",
    "description": "Retrieve Reporting Report Run",
    "body": "ReportRun reportRun =\n  ReportRun.retrieve(\"${1:frr_xxxxxxxxxxxxx}\");"
  },
  "List Reporting Report Type": {
    "prefix": "StripeReportingReportTypeList",
    "description": "List Reporting Report Type",
    "body": "ReportTypeCollection reportTypes =\n  ReportType.list();"
  },
  "Retrieve Reporting Report Type": {
    "prefix": "StripeReportingReportTypeRetrieve",
    "description": "Retrieve Reporting Report Type",
    "body": "ReportType reportType =\n  ReportType.retrieve(\"${1:balance.summary.1}\");"
  },
  "Approve Review": {
    "prefix": "StripeReviewApprove",
    "description": "Approve Review",
    "body": "Review review =\n  Review.retrieve(\"${1:prv_xxxxxxxxxxxxx}\");\n\nReview updatedReview = review.approve();"
  },
  "List Review": {
    "prefix": "StripeReviewList",
    "description": "List Review",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nReviewCollection reviews = Review.list(params);"
  },
  "Retrieve Review": {
    "prefix": "StripeReviewRetrieve",
    "description": "Retrieve Review",
    "body": "Review review =\n  Review.retrieve(\"${1:prv_xxxxxxxxxxxxx}\");"
  },
  "List Setup Attempt": {
    "prefix": "StripeSetupAttemptList",
    "description": "List Setup Attempt",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nSetupAttemptCollection setupAttempts =\n  SetupAttempt.list(params);"
  },
  "Cancel Setup Intent": {
    "prefix": "StripeSetupIntentCancel",
    "description": "Cancel Setup Intent",
    "body": "SetupIntent setupIntent =\n  SetupIntent.retrieve(\"${1:seti_xxxxxxxxxxxxx}\");\n\nSetupIntent updatedSetupIntent =\n  setupIntent.cancel();"
  },
  "Confirm Setup Intent": {
    "prefix": "StripeSetupIntentConfirm",
    "description": "Confirm Setup Intent",
    "body": "SetupIntent setupIntent =\n  SetupIntent.retrieve(\"${1:seti_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"payment_method\", \"${2:pm_card_visa}\");\n\nSetupIntent updatedSetupIntent =\n  setupIntent.confirm(params);"
  },
  "Create Setup Intent": {
    "prefix": "StripeSetupIntentCreate",
    "description": "Create Setup Intent",
    "body": "List<Object> paymentMethodTypes =\n  new ArrayList<>();\npaymentMethodTypes.add(\"card\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\n  \"payment_method_types\",\n  paymentMethodTypes\n);\n\nSetupIntent setupIntent =\n  SetupIntent.create(params);"
  },
  "List Setup Intent": {
    "prefix": "StripeSetupIntentList",
    "description": "List Setup Intent",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nSetupIntentCollection setupIntents =\n  SetupIntent.list(params);"
  },
  "Retrieve Setup Intent": {
    "prefix": "StripeSetupIntentRetrieve",
    "description": "Retrieve Setup Intent",
    "body": "SetupIntent setupIntent =\n  SetupIntent.retrieve(\"${1:seti_xxxxxxxxxxxxx}\");"
  },
  "Update Setup Intent": {
    "prefix": "StripeSetupIntentUpdate",
    "description": "Update Setup Intent",
    "body": "SetupIntent setupIntent =\n  SetupIntent.retrieve(\"${1:seti_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"user_id\", \"${2:3435453}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nSetupIntent updatedSetupIntent =\n  setupIntent.update(params);"
  },
  "List Sigma Scheduled Query Run": {
    "prefix": "StripeSigmaScheduledQueryRunList",
    "description": "List Sigma Scheduled Query Run",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nScheduledQueryRunCollection scheduledQueryRuns =\n  ScheduledQueryRun.list(params);"
  },
  "Retrieve Sigma Scheduled Query Run": {
    "prefix": "StripeSigmaScheduledQueryRunRetrieve",
    "description": "Retrieve Sigma Scheduled Query Run",
    "body": "ScheduledQueryRun scheduledQueryRun =\n  ScheduledQueryRun.retrieve(\"${1:sqr_xxxxxxxxxxxxx}\");"
  },
  "Create Sku": {
    "prefix": "StripeSkuCreate",
    "description": "Create Sku",
    "body": "Map<String, Object> attributes = new HashMap<>();\nattributes.put(\"size\", \"${1:Medium}\");\nattributes.put(\"gender\", \"${2:Unisex}\");\nMap<String, Object> inventory = new HashMap<>();\ninventory.put(\"type\", \"${5:finite}\");\ninventory.put(\"quantity\", ${6:500});\nMap<String, Object> params = new HashMap<>();\nparams.put(\"attributes\", attributes);\nparams.put(\"price\", ${3:1500});\nparams.put(\"currency\", \"${4:usd}\");\nparams.put(\"inventory\", inventory);\nparams.put(\"product\", \"${7:prod_xxxxxxxxxxxxx}\");\n\nSku sku = Sku.create(params);"
  },
  "Delete Sku": {
    "prefix": "StripeSkuDelete",
    "description": "Delete Sku",
    "body": "Sku sku = Sku.retrieve(\"${1:sku_xxxxxxxxxxxxx}\");\n\nSku deletedSku = sku.delete();"
  },
  "List Sku": {
    "prefix": "StripeSkuList",
    "description": "List Sku",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nSkuCollection skus = Sku.list(params);"
  },
  "Retrieve Sku": {
    "prefix": "StripeSkuRetrieve",
    "description": "Retrieve Sku",
    "body": "Sku sku = Sku.retrieve(\"${1:sku_xxxxxxxxxxxxx}\");"
  },
  "Update Sku": {
    "prefix": "StripeSkuUpdate",
    "description": "Update Sku",
    "body": "Sku sku = Sku.retrieve(\"${1:sku_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nSku updatedSku = sku.update(params);"
  },
  "Attach Source": {
    "prefix": "StripeSourceAttach",
    "description": "Attach Source",
    "body": "List<String> expandList = new ArrayList<>();\nexpandList.add(\"sources\");\n\nMap<String, Object> retrieveParams = new HashMap<>();\nretrieveParams.put(\"expand\", expandList);\n\nCustomer customer =\n  Customer.retrieve(\n    \"${1:cus_xxxxxxxxxxxxx}\",\n    retrieveParams,\n    null\n  );\nMap<String, Object> params = new HashMap<>();\nparams.put(\"source\", \"${2:src_xxxxxxxxxxxxx}\");\ncustomer.getSources().create(params);\n\n"
  },
  "Create Source": {
    "prefix": "StripeSourceCreate",
    "description": "Create Source",
    "body": "Map<String, Object> sourceParams = new HashMap<>();\nsourceParams.put(\"type\", \"ach_credit_transfer\");\nsourceParams.put(\"currency\", \"${1:usd}\");\nMap<String, Object> ownerParams = new HashMap<>();\nownerParams.put(\"email\", \"${2:jenny.rosen@example.com}\");\nsourceParams.put(\"owner\", ownerParams);\n\nSource.create(sourceParams);\n"
  },
  "Detach Source": {
    "prefix": "StripeSourceDetach",
    "description": "Detach Source",
    "body": "Source source = Source.retrieve(\"${1:src_xxxxxxxxxxxxx}\");\nsource.detach();\n\n"
  },
  "Retrieve Source": {
    "prefix": "StripeSourceRetrieve",
    "description": "Retrieve Source",
    "body": "Source source =\n  Source.retrieve(\"${1:src_xxxxxxxxxxxxx}\");"
  },
  "Update Source": {
    "prefix": "StripeSourceUpdate",
    "description": "Update Source",
    "body": "Source source =\n  Source.retrieve(\"${1:src_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nSource updatedSource = source.update(params);"
  },
  "Create Subscription": {
    "prefix": "StripeSubscriptionCreate",
    "description": "Create Subscription",
    "body": "List<Object> items = new ArrayList<>();\nMap<String, Object> item1 = new HashMap<>();\nitem1.put(\"price\", \"${2:price_xxxxxxxxxxxxx}\");\nitems.add(item1);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"customer\", \"${1:cus_xxxxxxxxxxxxx}\");\nparams.put(\"items\", items);\n\nSubscription subscription =\n  Subscription.create(params);"
  },
  "Delete Subscription": {
    "prefix": "StripeSubscriptionDelete",
    "description": "Delete Subscription",
    "body": "Subscription subscription =\n  Subscription.retrieve(\"${1:sub_xxxxxxxxxxxxx}\");\n\nSubscription deletedSubscription =\n  subscription.cancel();"
  },
  "Delete Subscription Discount": {
    "prefix": "StripeSubscriptionDiscountDelete",
    "description": "Delete Subscription Discount",
    "body": "Subscription sub = Subscription.retrieve('${1:sub_xxxxxxxxxxxxx}')\nsub.deleteDiscount();\n\n"
  },
  "Create Subscription Item": {
    "prefix": "StripeSubscriptionItemCreate",
    "description": "Create Subscription Item",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"subscription\", \"${1:sub_xxxxxxxxxxxxx}\");\nparams.put(\"price\", \"${2:price_xxxxxxxxxxxxx}\");\nparams.put(\"quantity\", ${3:2});\n\nSubscriptionItem subscriptionItem =\n  SubscriptionItem.create(params);"
  },
  "Delete Subscription Item": {
    "prefix": "StripeSubscriptionItemDelete",
    "description": "Delete Subscription Item",
    "body": "SubscriptionItem subscriptionItem =\n  SubscriptionItem.retrieve(\"${1:si_xxxxxxxxxxxxx}\");\n\nSubscriptionItem deletedSubscriptionItem =\n  subscriptionItem.delete();"
  },
  "List Subscription Item": {
    "prefix": "StripeSubscriptionItemList",
    "description": "List Subscription Item",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"subscription\", \"${1:sub_xxxxxxxxxxxxx}\");\n\nSubscriptionItemCollection subscriptionItems =\n  SubscriptionItem.list(params);"
  },
  "Retrieve Subscription Item": {
    "prefix": "StripeSubscriptionItemRetrieve",
    "description": "Retrieve Subscription Item",
    "body": "SubscriptionItem subscriptionItem =\n  SubscriptionItem.retrieve(\"${1:si_xxxxxxxxxxxxx}\");"
  },
  "Update Subscription Item": {
    "prefix": "StripeSubscriptionItemUpdate",
    "description": "Update Subscription Item",
    "body": "SubscriptionItem subscriptionItem =\n  SubscriptionItem.retrieve(\"${1:si_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nSubscriptionItem updatedSubscriptionItem =\n  subscriptionItem.update(params);"
  },
  "List Subscription Item Usage Record Summary": {
    "prefix": "StripeSubscriptionItemUsageRecordSummaryList",
    "description": "List Subscription Item Usage Record Summary",
    "body": "SubscriptionItem subscriptionItem =\n  SubscriptionItem.retrieve(\"${1:si_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:3});\n\nUsageRecordSummaryCollection usageRecordSummaries =\n  subscriptionItem.usageRecordSummaries(params);"
  },
  "List Subscription": {
    "prefix": "StripeSubscriptionList",
    "description": "List Subscription",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nSubscriptionCollection subscriptions =\n  Subscription.list(params);"
  },
  "Retrieve Subscription": {
    "prefix": "StripeSubscriptionRetrieve",
    "description": "Retrieve Subscription",
    "body": "Subscription subscription =\n  Subscription.retrieve(\"${1:sub_xxxxxxxxxxxxx}\");"
  },
  "Cancel Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleCancel",
    "description": "Cancel Subscription Schedule",
    "body": "SubscriptionSchedule subscriptionSchedule =\n  SubscriptionSchedule.retrieve(\n    \"${1:sub_sched_xxxxxxxxxxxxx}\"\n  );\n\nSubscriptionSchedule updatedSubscriptionSchedule =\n  subscriptionSchedule.cancel();"
  },
  "Create Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleCreate",
    "description": "Create Subscription Schedule",
    "body": "List<Object> phases = new ArrayList<>();\nList<Object> items = new ArrayList<>();\nMap<String, Object> item1 = new HashMap<>();\nitem1.put(\"price\", \"${4:price_xxxxxxxxxxxxx}\");\nitem1.put(\"quantity\", ${5:1});\nitems.add(item1);\nMap<String, Object> phase1 = new HashMap<>();\nphase1.put(\"items\", items);\nphase1.put(\"iterations\", ${6:12});\nphases.add(phase1);\nMap<String, Object> params = new HashMap<>();\nparams.put(\"customer\", \"${1:cus_xxxxxxxxxxxxx}\");\nparams.put(\"start_date\", ${2:1620753115});\nparams.put(\"end_behavior\", \"${3:release}\");\nparams.put(\"phases\", phases);\n\nSubscriptionSchedule subscriptionSchedule =\n  SubscriptionSchedule.create(params);"
  },
  "List Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleList",
    "description": "List Subscription Schedule",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nSubscriptionScheduleCollection subscriptionSchedules =\n  SubscriptionSchedule.list(params);"
  },
  "Release Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleRelease",
    "description": "Release Subscription Schedule",
    "body": "SubscriptionSchedule subscriptionSchedule =\n  SubscriptionSchedule.retrieve(\n    \"${1:sub_sched_xxxxxxxxxxxxx}\"\n  );\n\nSubscriptionSchedule updatedSubscriptionSchedule =\n  subscriptionSchedule.release();"
  },
  "Retrieve Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleRetrieve",
    "description": "Retrieve Subscription Schedule",
    "body": "SubscriptionSchedule subscriptionSchedule =\n  SubscriptionSchedule.retrieve(\n    \"${1:sub_sched_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleUpdate",
    "description": "Update Subscription Schedule",
    "body": "SubscriptionSchedule subscriptionSchedule =\n  SubscriptionSchedule.retrieve(\n    \"${1:sub_sched_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"end_behavior\", \"${2:release}\");\n\nSubscriptionSchedule updatedSubscriptionSchedule =\n  subscriptionSchedule.update(params);"
  },
  "Update Subscription": {
    "prefix": "StripeSubscriptionUpdate",
    "description": "Update Subscription",
    "body": "Subscription subscription =\n  Subscription.retrieve(\"${1:sub_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nSubscription updatedSubscription =\n  subscription.update(params);"
  },
  "Create Tax Rate": {
    "prefix": "StripeTaxRateCreate",
    "description": "Create Tax Rate",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"display_name\", \"${1:VAT}\");\nparams.put(\"description\", \"${2:VAT Germany}\");\nparams.put(\"jurisdiction\", \"${3:DE}\");\nparams.put(\"percentage\", ${4:16});\nparams.put(\"inclusive\", ${5:false});\n\nTaxRate taxRate = TaxRate.create(params);"
  },
  "List Tax Rate": {
    "prefix": "StripeTaxRateList",
    "description": "List Tax Rate",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nTaxRateCollection taxRates = TaxRate.list(params);"
  },
  "Retrieve Tax Rate": {
    "prefix": "StripeTaxRateRetrieve",
    "description": "Retrieve Tax Rate",
    "body": "TaxRate taxRate =\n  TaxRate.retrieve(\"${1:txr_xxxxxxxxxxxxx}\");"
  },
  "Update Tax Rate": {
    "prefix": "StripeTaxRateUpdate",
    "description": "Update Tax Rate",
    "body": "TaxRate taxRate =\n  TaxRate.retrieve(\"${1:txr_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"active\", ${2:false});\n\nTaxRate updatedTaxRate = taxRate.update(params);"
  },
  "Create Terminal Connection Token": {
    "prefix": "StripeTerminalConnectionTokenCreate",
    "description": "Create Terminal Connection Token",
    "body": "ConnectionToken connectionToken =\n  ConnectionToken.create();"
  },
  "Create Terminal Location": {
    "prefix": "StripeTerminalLocationCreate",
    "description": "Create Terminal Location",
    "body": "Map<String, Object> address = new HashMap<>();\naddress.put(\"line1\", \"${2:1234 Main Street}\");\naddress.put(\"city\", \"${3:San Francisco}\");\naddress.put(\"country\", \"${4:US}\");\naddress.put(\"postal_code\", \"${5:94111}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"display_name\", \"${1:My First Store}\");\nparams.put(\"address\", address);\n\nLocation location = Location.create(params);"
  },
  "Delete Terminal Location": {
    "prefix": "StripeTerminalLocationDelete",
    "description": "Delete Terminal Location",
    "body": "Location location =\n  Location.retrieve(\"${1:tml_xxxxxxxxxxxxx}\");\n\nLocation deletedLocation = location.delete();"
  },
  "List Terminal Location": {
    "prefix": "StripeTerminalLocationList",
    "description": "List Terminal Location",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nLocationCollection locations =\n  Location.list(params);"
  },
  "Retrieve Terminal Location": {
    "prefix": "StripeTerminalLocationRetrieve",
    "description": "Retrieve Terminal Location",
    "body": "Location location =\n  Location.retrieve(\"${1:tml_xxxxxxxxxxxxx}\");"
  },
  "Update Terminal Location": {
    "prefix": "StripeTerminalLocationUpdate",
    "description": "Update Terminal Location",
    "body": "Location location =\n  Location.retrieve(\"${1:tml_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"display_name\", \"${2:My First Store}\");\n\nLocation updatedLocation =\n  location.update(params);"
  },
  "Create Terminal Reader": {
    "prefix": "StripeTerminalReaderCreate",
    "description": "Create Terminal Reader",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\n  \"registration_code\",\n  \"puppies-plug-could\"\n);\nparams.put(\"label\", \"${2:Blue Rabbit}\");\nparams.put(\"location\", \"${3:tml_1234}\");\n\nReader reader = Reader.create(params);"
  },
  "Delete Terminal Reader": {
    "prefix": "StripeTerminalReaderDelete",
    "description": "Delete Terminal Reader",
    "body": "Reader reader =\n  Reader.retrieve(\"${1:tmr_P400-123-456-789}\");\n\nReader deletedReader = reader.delete();"
  },
  "List Terminal Reader": {
    "prefix": "StripeTerminalReaderList",
    "description": "List Terminal Reader",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nReaderCollection readers = Reader.list(params);"
  },
  "Retrieve Terminal Reader": {
    "prefix": "StripeTerminalReaderRetrieve",
    "description": "Retrieve Terminal Reader",
    "body": "Reader reader =\n  Reader.retrieve(\"${1:tmr_P400-123-456-789}\");"
  },
  "Update Terminal Reader": {
    "prefix": "StripeTerminalReaderUpdate",
    "description": "Update Terminal Reader",
    "body": "Reader reader =\n  Reader.retrieve(\"${1:tmr_P400-123-456-789}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"label\", \"${2:Blue Rabbit}\");\n\nReader updatedReader = reader.update(params);"
  },
  "Create Token": {
    "prefix": "StripeTokenCreate",
    "description": "Create Token",
    "body": "Map<String, Object> cvcUpdate = new HashMap<>();\ncvcUpdate.put(\"cvc\", \"${1:123}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"cvc_update\", cvcUpdate);\n\nToken token = Token.create(params);"
  },
  "Retrieve Token": {
    "prefix": "StripeTokenRetrieve",
    "description": "Retrieve Token",
    "body": "Token token = Token.retrieve(\"${1:tok_xxxx}\");"
  },
  "Cancel Topup": {
    "prefix": "StripeTopupCancel",
    "description": "Cancel Topup",
    "body": "Topup topup = Topup.retrieve(\"${1:tu_xxxxxxxxxxxxx}\");\n\nTopup updatedTopup = topup.cancel();"
  },
  "Create Topup": {
    "prefix": "StripeTopupCreate",
    "description": "Create Topup",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"amount\", ${1:2000});\nparams.put(\"currency\", \"${2:usd}\");\nparams.put(\n  \"description\",\n  \"Top-up for Jenny Rosen\"\n);\nparams.put(\"statement_descriptor\", \"${4:Top-up}\");\n\nTopup topup = Topup.create(params);"
  },
  "List Topup": {
    "prefix": "StripeTopupList",
    "description": "List Topup",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nTopupCollection topups = Topup.list(params);"
  },
  "Retrieve Topup": {
    "prefix": "StripeTopupRetrieve",
    "description": "Retrieve Topup",
    "body": "Topup topup = Topup.retrieve(\"${1:tu_xxxxxxxxxxxxx}\");"
  },
  "Update Topup": {
    "prefix": "StripeTopupUpdate",
    "description": "Update Topup",
    "body": "Topup topup = Topup.retrieve(\"${1:tu_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nTopup updatedTopup = topup.update(params);"
  },
  "Create Transfer": {
    "prefix": "StripeTransferCreate",
    "description": "Create Transfer",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"amount\", ${1:400});\nparams.put(\"currency\", \"${2:usd}\");\nparams.put(\"destination\", \"${3:acct_xxxxxxxxxxxxx}\");\nparams.put(\"transfer_group\", \"${4:ORDER_95}\");\n\nTransfer transfer = Transfer.create(params);"
  },
  "List Transfer": {
    "prefix": "StripeTransferList",
    "description": "List Transfer",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nTransferCollection transfers =\n  Transfer.list(params);"
  },
  "Retrieve Transfer": {
    "prefix": "StripeTransferRetrieve",
    "description": "Retrieve Transfer",
    "body": "Transfer transfer =\n  Transfer.retrieve(\"${1:tr_xxxxxxxxxxxxx}\");"
  },
  "Create Transfer Reversal": {
    "prefix": "StripeTransferReversalCreate",
    "description": "Create Transfer Reversal",
    "body": "Transfer transfer =\n  Transfer.retrieve(\"${1:tr_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"amount\", ${2:100});\n\nTransferReversal transferReversal =\n  transfer.getReversals().create(params);"
  },
  "List Transfer Reversal": {
    "prefix": "StripeTransferReversalList",
    "description": "List Transfer Reversal",
    "body": "Transfer transfer =\n  Transfer.retrieve(\"${1:tr_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${2:3});\n\nTransferReversalCollection transferReversals =\n  transfer.getReversals().list(params);"
  },
  "Retrieve Transfer Reversal": {
    "prefix": "StripeTransferReversalRetrieve",
    "description": "Retrieve Transfer Reversal",
    "body": "Transfer transfer =\n  Transfer.retrieve(\"${2:tr_xxxxxxxxxxxxx}\");\n\nTransferReversal transferReversal =\n  transfer.getReversals().retrieve(\n    \"${1:trr_xxxxxxxxxxxxx}\"\n  );"
  },
  "Update Transfer Reversal": {
    "prefix": "StripeTransferReversalUpdate",
    "description": "Update Transfer Reversal",
    "body": "Transfer transfer =\n  Transfer.retrieve(\"${2:tr_xxxxxxxxxxxxx}\");\n\nTransferReversal transferReversal =\n  transfer.getReversals().retrieve(\n    \"${1:trr_xxxxxxxxxxxxx}\"\n  );\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${3:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nTransferReversal updatedReversal =\n  transferReversal.update(params);"
  },
  "Update Transfer": {
    "prefix": "StripeTransferUpdate",
    "description": "Update Transfer",
    "body": "Transfer transfer =\n  Transfer.retrieve(\"${1:tr_xxxxxxxxxxxxx}\");\n\nMap<String, Object> metadata = new HashMap<>();\nmetadata.put(\"order_id\", \"${2:6735}\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\"metadata\", metadata);\n\nTransfer updatedTransfer =\n  transfer.update(params);"
  },
  "Create Usage Record": {
    "prefix": "StripeUsageRecordCreate",
    "description": "Create Usage Record",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"quantity\", ${1:100});\nparams.put(\"timestamp\", ${2:1571252444});\n\nUsageRecord usageRecord =\n  UsageRecord.createOnSubscriptionItem(\n    \"${3:si_xxxxxxxxxxxxx}\",\n    params,\n    null\n  );\n\n"
  },
  "Create Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointCreate",
    "description": "Create Webhook Endpoint",
    "body": "List<Object> enabledEvents = new ArrayList<>();\nenabledEvents.add(\"charge.failed\");\nenabledEvents.add(\"charge.succeeded\");\nMap<String, Object> params = new HashMap<>();\nparams.put(\n  \"url\",\n  \"https://example.com/my/webhook/endpoint\"\n);\nparams.put(\"enabled_events\", enabledEvents);\n\nWebhookEndpoint webhookEndpoint =\n  WebhookEndpoint.create(params);"
  },
  "Delete Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointDelete",
    "description": "Delete Webhook Endpoint",
    "body": "WebhookEndpoint webhookEndpoint =\n  WebhookEndpoint.retrieve(\"${1:we_xxxxxxxxxxxxx}\");\n\nWebhookEndpoint deletedWebhookEndpoint =\n  webhookEndpoint.delete();"
  },
  "List Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointList",
    "description": "List Webhook Endpoint",
    "body": "Map<String, Object> params = new HashMap<>();\nparams.put(\"limit\", ${1:3});\n\nWebhookEndpointCollection webhookEndpoints =\n  WebhookEndpoint.list(params);"
  },
  "Retrieve Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointRetrieve",
    "description": "Retrieve Webhook Endpoint",
    "body": "WebhookEndpoint webhookEndpoint =\n  WebhookEndpoint.retrieve(\"${1:we_xxxxxxxxxxxxx}\");"
  },
  "Update Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointUpdate",
    "description": "Update Webhook Endpoint",
    "body": "WebhookEndpoint webhookEndpoint =\n  WebhookEndpoint.retrieve(\"${1:we_xxxxxxxxxxxxx}\");\n\nMap<String, Object> params = new HashMap<>();\nparams.put(\n  \"url\",\n  \"https://example.com/new_endpoint\"\n);\n\nWebhookEndpoint updatedWebhookEndpoint =\n  webhookEndpoint.update(params);"
  }
}
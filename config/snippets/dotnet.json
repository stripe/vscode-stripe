{
  "Create Bank Account": {
    "prefix": "StripeBankAccountCreate",
    "description": "Create Bank Account",
    "body": "var options = new ExternalAccountCreateOptions\n{\n  ExternalAccount = \"${2:btok_xxxxxxxxxxxxx}\",\n};\nvar service = new ExternalAccountService();\nservice.Create(\"${1:acct_xxxxxxxxxxxxx}\", options);"
  },
  "Delete Bank Account": {
    "prefix": "StripeBankAccountDelete",
    "description": "Delete Bank Account",
    "body": "var service = new ExternalAccountService();\nservice.Delete(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:ba_xxxxxxxxxxxxx}\"\n);"
  },
  "Retrieve Bank Account": {
    "prefix": "StripeBankAccountRetrieve",
    "description": "Retrieve Bank Account",
    "body": "var service = new ExternalAccountService();\nservice.Get(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:ba_xxxxxxxxxxxxx}\"\n);"
  },
  "Update Bank Account": {
    "prefix": "StripeBankAccountUpdate",
    "description": "Update Bank Account",
    "body": "var options = new ExternalAccountUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${3:6735}\" },\n  },\n};\nvar service = new ExternalAccountService();\nservice.Update(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:ba_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Create Account Account Card": {
    "prefix": "StripeAccountAccountCardCreate",
    "description": "Create Account Account Card",
    "body": "var options = new ExternalAccountCreateOptions\n{\n  ExternalAccount = \"${2:tok_xxxx_debit}\",\n};\nvar service = new ExternalAccountService();\nservice.Create(\"${1:acct_xxxxxxxxxxxxx}\", options);"
  },
  "Delete Account Account Card": {
    "prefix": "StripeAccountAccountCardDelete",
    "description": "Delete Account Account Card",
    "body": "var service = new ExternalAccountService();\nservice.Delete(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:card_xxxxxxxxxxxxx}\"\n);"
  },
  "Retrieve Account Account Card": {
    "prefix": "StripeAccountAccountCardRetrieve",
    "description": "Retrieve Account Account Card",
    "body": "var service = new ExternalAccountService();\nservice.Get(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:card_xxxxxxxxxxxxx}\"\n);"
  },
  "Update Account Account Card": {
    "prefix": "StripeAccountAccountCardUpdate",
    "description": "Update Account Account Card",
    "body": "var options = new ExternalAccountUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${3:6735}\" },\n  },\n};\nvar service = new ExternalAccountService();\nservice.Update(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:card_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "List Account Bank Accounts": {
    "prefix": "StripeAccountBankAccountsList",
    "description": "List Account Bank Accounts",
    "body": "var options = new ExternalAccountListOptions {\n    Limit = ${1:3},\n};\n\nvar service = new ExternalAccountService();\nvar bankAccounts = service.List(\"${2:acct_xxxxxxxxxxxxx}\", options);\n\n"
  },
  "List Account Capability": {
    "prefix": "StripeAccountCapabilityList",
    "description": "List Account Capability",
    "body": "var service = new CapabilityService();\nStripeList<Capability> capabilities = service.List(\n  \"${1:acct_xxxxxxxxxxxxx}\"\n);"
  },
  "Retrieve Account Capability": {
    "prefix": "StripeAccountCapabilityRetrieve",
    "description": "Retrieve Account Capability",
    "body": "var service = new CapabilityService();\nservice.Get(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:card_payments}\"\n);"
  },
  "Update Account Capability": {
    "prefix": "StripeAccountCapabilityUpdate",
    "description": "Update Account Capability",
    "body": "var options = new CapabilityUpdateOptions\n{\n  Requested = ${3:true},\n};\nvar service = new CapabilityService();\nservice.Update(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:card_payments}\",\n  options\n);"
  },
  "List Account Cards": {
    "prefix": "StripeAccountCardsList",
    "description": "List Account Cards",
    "body": "var options = new ExternalAccountListOptions {\n    Limit = ${1:3},\n};\n\nvar service = new ExternalAccountService();\nvar cards = service.List(\"${2:acct_xxxxxxxxxxxxx}\", options);\n\n"
  },
  "Create Account": {
    "prefix": "StripeAccountCreate",
    "description": "Create Account",
    "body": "var options = new AccountCreateOptions\n{\n  Type = \"${1:custom}\",\n  Country = \"${2:US}\",\n  Email = \"${3:jenny.rosen@example.com}\",\n  Capabilities = new AccountCapabilitiesOptions\n  {\n    CardPayments = new AccountCapabilitiesCardPaymentsOptions\n    {\n      Requested = ${4:${5:true}},\n    },\n    Transfers = new AccountCapabilitiesTransfersOptions\n    {\n      Requested = true,\n    },\n  },\n};\nvar service = new AccountService();\nservice.Create(options);"
  },
  "Delete Account": {
    "prefix": "StripeAccountDelete",
    "description": "Delete Account",
    "body": "var service = new AccountService();\nservice.Delete(\"${1:acct_xxxxxxxxxxxxx}\");"
  },
  "Create Account Link": {
    "prefix": "StripeAccountLinkCreate",
    "description": "Create Account Link",
    "body": "var options = new AccountLinkCreateOptions\n{\n  Account = \"${1:acct_xxxxxxxxxxxxx}\",\n  RefreshUrl = \"${2:https://example.com/reauth}\",\n  ReturnUrl = \"${3:https://example.com/return}\",\n  Type = \"${4:account_onboarding}\",\n};\nvar service = new AccountLinkService();\nservice.Create(options);"
  },
  "List Account": {
    "prefix": "StripeAccountList",
    "description": "List Account",
    "body": "var options = new AccountListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new AccountService();\nStripeList<Account> accounts = service.List(\n  options\n);"
  },
  "Create Account Login Link": {
    "prefix": "StripeAccountLoginLinkCreate",
    "description": "Create Account Login Link",
    "body": "var service = new LoginLinkService();\nservice.Create(\"${1:acct_xxxxxxxxxxxxx}\");"
  },
  "Create Account Person": {
    "prefix": "StripeAccountPersonCreate",
    "description": "Create Account Person",
    "body": "var options = new PersonCreateOptions\n{\n  FirstName = \"${2:Jane}\",\n  LastName = \"${3:Diaz}\",\n};\nvar service = new PersonService();\nservice.Create(\"${1:acct_xxxxxxxxxxxxx}\", options);"
  },
  "Delete Account Person": {
    "prefix": "StripeAccountPersonDelete",
    "description": "Delete Account Person",
    "body": "var service = new PersonService();\nservice.Delete(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:person_xxxxxxxxxxxxx}\"\n);"
  },
  "List Account Person": {
    "prefix": "StripeAccountPersonList",
    "description": "List Account Person",
    "body": "var options = new PersonListOptions { Limit = ${2:3} };\nvar service = new PersonService();\nStripeList<Person> persons = service.List(\n  \"${1:acct_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Retrieve Account Person": {
    "prefix": "StripeAccountPersonRetrieve",
    "description": "Retrieve Account Person",
    "body": "var service = new PersonService();\nservice.Get(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:person_xxxxxxxxxxxxx}\"\n);"
  },
  "Update Account Person": {
    "prefix": "StripeAccountPersonUpdate",
    "description": "Update Account Person",
    "body": "var options = new PersonUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${3:6735}\" },\n  },\n};\nvar service = new PersonService();\nservice.Update(\n  \"${2:acct_xxxxxxxxxxxxx}\",\n  \"${1:person_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Reject Account": {
    "prefix": "StripeAccountReject",
    "description": "Reject Account",
    "body": "var options = new AccountRejectOptions\n{\n  Reason = \"${2:fraud}\",\n};\nvar service = new AccountService();\nservice.Reject(\"${1:acct_xxxxxxxxxxxxx}\", options);"
  },
  "Retrieve Account": {
    "prefix": "StripeAccountRetrieve",
    "description": "Retrieve Account",
    "body": "var service = new AccountService();\nservice.Get(\"${1:acct_xxxxxxxxxxxxx}\");"
  },
  "Update Account": {
    "prefix": "StripeAccountUpdate",
    "description": "Update Account",
    "body": "var options = new AccountUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new AccountService();\nservice.Update(\"${1:acct_xxxxxxxxxxxxx}\", options);"
  },
  "Create Application Fee Fee Refund": {
    "prefix": "StripeApplicationFeeFeeRefundCreate",
    "description": "Create Application Fee Fee Refund",
    "body": "var service = new ApplicationFeeRefundService();\nservice.Create(\"${1:fee_xxxxxxxxxxxxx}\");"
  },
  "List Application Fee Fee Refund": {
    "prefix": "StripeApplicationFeeFeeRefundList",
    "description": "List Application Fee Fee Refund",
    "body": "var options = new ApplicationFeeRefundListOptions\n{\n  Limit = ${2:3},\n};\nvar service = new ApplicationFeeRefundService();\nStripeList<ApplicationFeeRefund> applicationFeeRefunds = service.List(\n  \"${1:fee_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Retrieve Application Fee Fee Refund": {
    "prefix": "StripeApplicationFeeFeeRefundRetrieve",
    "description": "Retrieve Application Fee Fee Refund",
    "body": "var service = new ApplicationFeeRefundService();\nservice.Get(\n  \"${2:fee_xxxxxxxxxxxxx}\",\n  \"${1:fr_xxxxxxxxxxxxx}\"\n);"
  },
  "Update Application Fee Fee Refund": {
    "prefix": "StripeApplicationFeeFeeRefundUpdate",
    "description": "Update Application Fee Fee Refund",
    "body": "var options = new ApplicationFeeRefundUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${3:6735}\" },\n  },\n};\nvar service = new ApplicationFeeRefundService();\nservice.Update(\n  \"${2:fee_xxxxxxxxxxxxx}\",\n  \"${1:fr_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "List Application Fee": {
    "prefix": "StripeApplicationFeeList",
    "description": "List Application Fee",
    "body": "var options = new ApplicationFeeListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new ApplicationFeeService();\nStripeList<ApplicationFee> applicationFees = service.List(\n  options\n);"
  },
  "Retrieve Application Fee": {
    "prefix": "StripeApplicationFeeRetrieve",
    "description": "Retrieve Application Fee",
    "body": "var service = new ApplicationFeeService();\nservice.Get(\"${1:fee_xxxxxxxxxxxxx}\");"
  },
  "Retrieve Balance": {
    "prefix": "StripeBalanceRetrieve",
    "description": "Retrieve Balance",
    "body": "var service = new BalanceService();\nBalance balance = service.Get();\n\n"
  },
  "List Balance Transaction": {
    "prefix": "StripeBalanceTransactionList",
    "description": "List Balance Transaction",
    "body": "var options = new BalanceTransactionListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new BalanceTransactionService();\nStripeList<BalanceTransaction> balanceTransactions = service.List(\n  options\n);"
  },
  "Retrieve Balance Transaction": {
    "prefix": "StripeBalanceTransactionRetrieve",
    "description": "Retrieve Balance Transaction",
    "body": "var service = new BalanceTransactionService();\nservice.Get(\"${1:txn_xxxxxxxxxxxxx}\");"
  },
  "Create Billing Portal Configuration": {
    "prefix": "StripeBillingPortalConfigurationCreate",
    "description": "Create Billing Portal Configuration",
    "body": "var options = new ConfigurationCreateOptions\n{\n  Features = new ConfigurationFeaturesOptions\n  {\n    CustomerUpdate = new ConfigurationFeaturesCustomerUpdateOptions\n    {\n      AllowedUpdates = new List<string>\n      {\n        \"email\",\n        \"tax_id\",\n      },\n      Enabled = ${3:${4:true}},\n    },\n    InvoiceHistory = new ConfigurationFeaturesInvoiceHistoryOptions\n    {\n      Enabled = true,\n    },\n  },\n  BusinessProfile = new ConfigurationBusinessProfileOptions\n  {\n    PrivacyPolicyUrl = \"${5:https://example.com/privacy}\",\n    TermsOfServiceUrl = \"${6:https://example.com/terms}\",\n  },\n};\nvar service = new ConfigurationService();\nservice.Create(options);"
  },
  "List Billing Portal Configuration": {
    "prefix": "StripeBillingPortalConfigurationList",
    "description": "List Billing Portal Configuration",
    "body": "var options = new ConfigurationListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new ConfigurationService();\nStripeList<Configuration> configurations = service.List(\n  options\n);"
  },
  "Retrieve Billing Portal Configuration": {
    "prefix": "StripeBillingPortalConfigurationRetrieve",
    "description": "Retrieve Billing Portal Configuration",
    "body": "var service = new ConfigurationService();\nservice.Get(\"${1:bpc_xxxxxxxxxxxxx}\");"
  },
  "Update Billing Portal Configuration": {
    "prefix": "StripeBillingPortalConfigurationUpdate",
    "description": "Update Billing Portal Configuration",
    "body": "var options = new ConfigurationUpdateOptions\n{\n  BusinessProfile = new ConfigurationBusinessProfileOptions\n  {\n    PrivacyPolicyUrl = \"${2:https://example.com/privacy}\",\n    TermsOfServiceUrl = \"${3:https://example.com/terms}\",\n  },\n};\nvar service = new ConfigurationService();\nservice.Update(\"${1:bpc_xxxxxxxxxxxxx}\", options);"
  },
  "Create Billing Portal Session": {
    "prefix": "StripeBillingPortalSessionCreate",
    "description": "Create Billing Portal Session",
    "body": "var options = new SessionCreateOptions\n{\n  Customer = \"${1:cus_xxxxxxxxxxxxx}\",\n  ReturnUrl = \"${2:https://example.com/account}\",\n};\nvar service = new SessionService();\nservice.Create(options);"
  },
  "List Cards": {
    "prefix": "StripeCardsList",
    "description": "List Cards",
    "body": "var service = new CardService();\nvar options = new CardListOptions\n{\n  Limit = ${1:3},\n};\nvar cards = service.List(\"${2:cus_xxxxxxxxxxxxx}\", options);\n\n"
  },
  "Capture Charge": {
    "prefix": "StripeChargeCapture",
    "description": "Capture Charge",
    "body": "var service = new ChargeService();\nservice.Capture(\"${1:ch_xxxxxxxxxxxxx}\");"
  },
  "Create Charge": {
    "prefix": "StripeChargeCreate",
    "description": "Create Charge",
    "body": "// `source` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token\nvar options = new ChargeCreateOptions\n{\n  Amount = ${1:2000},\n  Currency = \"${2:usd}\",\n  Source = \"${3:tok_xxxx}\",\n  Description = \"${4:My First Test Charge (created for API docs)}\",\n};\nvar service = new ChargeService();\nservice.Create(options);"
  },
  "List Charge": {
    "prefix": "StripeChargeList",
    "description": "List Charge",
    "body": "var options = new ChargeListOptions { Limit = ${1:3} };\nvar service = new ChargeService();\nStripeList<Charge> charges = service.List(\n  options\n);"
  },
  "Retrieve Charge": {
    "prefix": "StripeChargeRetrieve",
    "description": "Retrieve Charge",
    "body": "var service = new ChargeService();\nservice.Get(\"${1:ch_xxxxxxxxxxxxx}\");"
  },
  "Update Charge": {
    "prefix": "StripeChargeUpdate",
    "description": "Update Charge",
    "body": "var options = new ChargeUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new ChargeService();\nservice.Update(\"${1:ch_xxxxxxxxxxxxx}\", options);"
  },
  "Create Checkout Session": {
    "prefix": "StripeCheckoutSessionCreate",
    "description": "Create Checkout Session",
    "body": "var options = new SessionCreateOptions\n{\n  SuccessUrl = \"${1:https://example.com/success}\",\n  CancelUrl = \"${2:https://example.com/cancel}\",\n  PaymentMethodTypes = new List<string>\n  {\n    \"card\",\n  },\n  LineItems = new List<SessionLineItemOptions>\n  {\n    new SessionLineItemOptions\n    {\n      Price = \"price_xxxxxxxxxxxxx\",\n      Quantity = 2,\n    },\n  },\n  Mode = \"${6:payment}\",\n};\nvar service = new SessionService();\nservice.Create(options);"
  },
  "Retrieve Checkout Session Line Items": {
    "prefix": "StripeCheckoutSessionLineItems",
    "description": "Retrieve Checkout Session Line Items",
    "body": "var options = new SessionListLineItemsOptions\n{\n  Limit = ${1:5},\n};\nvar service = new SessionService();\nStripeList<LineItem> = service.ListLineItems(\"${2:cs_test_xxxxxxxxxxxxx}\", options);\n\n"
  },
  "List Checkout Session": {
    "prefix": "StripeCheckoutSessionList",
    "description": "List Checkout Session",
    "body": "var options = new SessionListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new SessionService();\nStripeList<Session> sessions = service.List(\n  options\n);"
  },
  "Retrieve Checkout Session": {
    "prefix": "StripeCheckoutSessionRetrieve",
    "description": "Retrieve Checkout Session",
    "body": "var service = new SessionService();\nservice.Get(\"${1:cs_test_xxxxxxxxxxxxx}\");"
  },
  "List Country Spec": {
    "prefix": "StripeCountrySpecList",
    "description": "List Country Spec",
    "body": "var options = new CountrySpecListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new CountrySpecService();\nStripeList<CountrySpec> countrySpecs = service.List(\n  options\n);"
  },
  "Retrieve Country Spec": {
    "prefix": "StripeCountrySpecRetrieve",
    "description": "Retrieve Country Spec",
    "body": "var service = new CountrySpecService();\nservice.Get(\"${1:US}\");"
  },
  "Create Coupon": {
    "prefix": "StripeCouponCreate",
    "description": "Create Coupon",
    "body": "var options = new CouponCreateOptions\n{\n  PercentOff = ${1:25},\n  Duration = \"${2:repeating}\",\n  DurationInMonths = ${3:3},\n};\nvar service = new CouponService();\nservice.Create(options);"
  },
  "Delete Coupon": {
    "prefix": "StripeCouponDelete",
    "description": "Delete Coupon",
    "body": "var service = new CouponService();\nservice.Delete(\"${1:co_xxxxxxxxxxxxx}\");"
  },
  "List Coupon": {
    "prefix": "StripeCouponList",
    "description": "List Coupon",
    "body": "var options = new CouponListOptions { Limit = ${1:3} };\nvar service = new CouponService();\nStripeList<Coupon> coupons = service.List(\n  options\n);"
  },
  "Retrieve Coupon": {
    "prefix": "StripeCouponRetrieve",
    "description": "Retrieve Coupon",
    "body": "var service = new CouponService();\nservice.Get(\"${1:25_5OFF}\");"
  },
  "Update Coupon": {
    "prefix": "StripeCouponUpdate",
    "description": "Update Coupon",
    "body": "var options = new CouponUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new CouponService();\nservice.Update(\"${1:co_xxxxxxxxxxxxx}\", options);"
  },
  "Create Credit Note": {
    "prefix": "StripeCreditNoteCreate",
    "description": "Create Credit Note",
    "body": "var options = new CreditNoteCreateOptions\n{\n  Invoice = \"${1:in_xxxxxxxxxxxxx}\",\n  Lines = new List<CreditNoteLineOptions>\n  {\n    new CreditNoteLineOptions\n    {\n      Type = \"invoice_line_item\",\n      InvoiceLineItem = \"il_xxxxxxxxxxxxx\",\n      Quantity = 1,\n    },\n  },\n};\nvar service = new CreditNoteService();\nservice.Create(options);"
  },
  "List Credit Note Line Item": {
    "prefix": "StripeCreditNoteLineItemList",
    "description": "List Credit Note Line Item",
    "body": "var options = new LineItemListOptions\n{\n  Limit = ${2:3},\n};\nvar service = new LineItemService();\nStripeList<LineItem> lineItems = service.List(\n  \"${1:cn_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Preview Credit Note Lines": {
    "prefix": "StripeCreditNoteLinesPreview",
    "description": "Preview Credit Note Lines",
    "body": "var options = new CreditNoteListPreviewLineItemsOptions\n{\n  Invoice = \"${1:in_xxxxxxxxxxxxx}\",\n  Lines = new List<CreditNoteLineItemLineOptions>\n  {\n    new CreditNoteLineItemLineOptions\n    {\n      Type = \"invoice_line_item\",\n      InvoiceLineItem = \"${2: il_xxxxxxxxxxxxx}\",\n      Quantity = ${3:1},\n    },\n  },\n};\nvar service = new CreditNoteService();\nStripeList<CreditNoteLineItem> lines = service.ListPreviewLineItems(options);\n\n"
  },
  "List Credit Note": {
    "prefix": "StripeCreditNoteList",
    "description": "List Credit Note",
    "body": "var options = new CreditNoteListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new CreditNoteService();\nStripeList<CreditNote> creditNotes = service.List(\n  options\n);"
  },
  "Preview Credit Note": {
    "prefix": "StripeCreditNotePreview",
    "description": "Preview Credit Note",
    "body": "var options = new CreditNotePreviewOptions\n{\n  Invoice = \"${1:in_xxxxxxxxxxxxx}\",\n  Lines = new List<CreditNoteLineOptions>\n  {\n    new CreditNoteLineOptions\n    {\n      Type = \"invoice_line_item\",\n      InvoiceLineItem = \"il_xxxxxxxxxxxxx\",\n      Quantity = 1,\n    },\n  },\n};\nvar service = new CreditNoteService();\nservice.Preview(options);"
  },
  "Retrieve Credit Note": {
    "prefix": "StripeCreditNoteRetrieve",
    "description": "Retrieve Credit Note",
    "body": "var service = new CreditNoteService();\nservice.Get(\"${1:cn_xxxxxxxxxxxxx}\");"
  },
  "Update Credit Note": {
    "prefix": "StripeCreditNoteUpdate",
    "description": "Update Credit Note",
    "body": "var options = new CreditNoteUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new CreditNoteService();\nservice.Update(\"${1:cn_xxxxxxxxxxxxx}\", options);"
  },
  "Void Credit Note Credit Note": {
    "prefix": "StripeCreditNoteVoidCreditNote",
    "description": "Void Credit Note Credit Note",
    "body": "var service = new CreditNoteService();\nservice.VoidCreditNote(\"${1:cn_xxxxxxxxxxxxx}\");"
  },
  "Create Customer Balance Transaction": {
    "prefix": "StripeCustomerBalanceTransactionCreate",
    "description": "Create Customer Balance Transaction",
    "body": "var options = new CustomerBalanceTransactionCreateOptions\n{\n  Amount = ${2:-500},\n  Currency = \"${3:usd}\",\n};\nvar service = new CustomerBalanceTransactionService();\nservice.Create(\"${1:cus_xxxxxxxxxxxxx}\", options);"
  },
  "List Customer Balance Transaction": {
    "prefix": "StripeCustomerBalanceTransactionList",
    "description": "List Customer Balance Transaction",
    "body": "var options = new CustomerBalanceTransactionListOptions\n{\n  Limit = ${2:3},\n};\nvar service = new CustomerBalanceTransactionService();\nStripeList<BalanceTransaction> balanceTransactions = service.List(\n  \"${1:cus_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Retrieve Customer Balance Transaction": {
    "prefix": "StripeCustomerBalanceTransactionRetrieve",
    "description": "Retrieve Customer Balance Transaction",
    "body": "var service = new CustomerBalanceTransactionService();\nservice.Get(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:cbtxn_xxxxxxxxxxxxx}\"\n);"
  },
  "Update Customer Balance Transaction": {
    "prefix": "StripeCustomerBalanceTransactionUpdate",
    "description": "Update Customer Balance Transaction",
    "body": "var options = new CustomerBalanceTransactionUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${3:6735}\" },\n  },\n};\nvar service = new CustomerBalanceTransactionService();\nservice.Update(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:cbtxn_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Create Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountCreate",
    "description": "Create Customer Bank Account",
    "body": "var options = new BankAccountCreateOptions\n{\n  Source = \"${2:btok_xxxxxxxxxxxxx}\",\n};\nvar service = new BankAccountService();\nservice.Create(\"${1:cus_xxxxxxxxxxxxx}\", options);"
  },
  "Delete Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountDelete",
    "description": "Delete Customer Bank Account",
    "body": "var service = new BankAccountService();\nservice.Delete(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:ba_xxxxxxxxxxxxx}\"\n);"
  },
  "Retrieve Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountRetrieve",
    "description": "Retrieve Customer Bank Account",
    "body": "var service = new BankAccountService();\nservice.Get(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:ba_xxxxxxxxxxxxx}\"\n);"
  },
  "List Customer Bank Accounts": {
    "prefix": "StripeCustomerBankAccountsList",
    "description": "List Customer Bank Accounts",
    "body": "var options = new BankAccountListOptions\n{\n  Limit = ${1:3},\n};\n\nvar service = new BankAccountService();\nvar bankAccounts = service.List(\"${2:cus_xxxxxxxxxxxxx}\", options);\n\n"
  },
  "Update Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountUpdate",
    "description": "Update Customer Bank Account",
    "body": "var options = new BankAccountUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${3:6735}\" },\n  },\n};\nvar service = new BankAccountService();\nservice.Update(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:ba_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Verify Customer Bank Account": {
    "prefix": "StripeCustomerBankAccountVerify",
    "description": "Verify Customer Bank Account",
    "body": "var options = new BankAccountVerifyOptions\n{\n  Amounts = new List<long> { ${3:32}, ${4:45} },\n};\nvar service = new BankAccountService();\nservice.Verify(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:ba_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Create Customer Card": {
    "prefix": "StripeCustomerCardCreate",
    "description": "Create Customer Card",
    "body": "var options = new CardCreateOptions\n{\n  Source = \"${2:tok_xxxx}\",\n};\nvar service = new CardService();\nservice.Create(\"${1:cus_xxxxxxxxxxxxx}\", options);"
  },
  "Delete Customer Card": {
    "prefix": "StripeCustomerCardDelete",
    "description": "Delete Customer Card",
    "body": "var service = new CardService();\nservice.Delete(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:card_xxxxxxxxxxxxx}\"\n);"
  },
  "Retrieve Customer Card": {
    "prefix": "StripeCustomerCardRetrieve",
    "description": "Retrieve Customer Card",
    "body": "var service = new CardService();\nservice.Get(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:card_xxxxxxxxxxxxx}\"\n);"
  },
  "Update Customer Card": {
    "prefix": "StripeCustomerCardUpdate",
    "description": "Update Customer Card",
    "body": "var options = new CardUpdateOptions\n{\n  Name = \"${3:Jenny Rosen}\",\n};\nvar service = new CardService();\nservice.Update(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:card_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Create Customer": {
    "prefix": "StripeCustomerCreate",
    "description": "Create Customer",
    "body": "var options = new CustomerCreateOptions\n{\n  Description = \"${1:My First Test Customer (created for API docs)}\",\n};\nvar service = new CustomerService();\nservice.Create(options);"
  },
  "Delete Customer": {
    "prefix": "StripeCustomerDelete",
    "description": "Delete Customer",
    "body": "var service = new CustomerService();\nservice.Delete(\"${1:cus_xxxxxxxxxxxxx}\");"
  },
  "List Customer": {
    "prefix": "StripeCustomerList",
    "description": "List Customer",
    "body": "var options = new CustomerListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new CustomerService();\nStripeList<Customer> customers = service.List(\n  options\n);"
  },
  "Retrieve Customer": {
    "prefix": "StripeCustomerRetrieve",
    "description": "Retrieve Customer",
    "body": "var service = new CustomerService();\nservice.Get(\"${1:cus_xxxxxxxxxxxxx}\");"
  },
  "Create Customer Tax Id": {
    "prefix": "StripeCustomerTaxIdCreate",
    "description": "Create Customer Tax Id",
    "body": "var options = new TaxIdCreateOptions\n{\n  Type = \"${2:eu_vat}\",\n  Value = \"${3:DE123456789}\",\n};\nvar service = new TaxIdService();\nservice.Create(\"${1:cus_xxxxxxxxxxxxx}\", options);"
  },
  "Delete Customer Tax Id": {
    "prefix": "StripeCustomerTaxIdDelete",
    "description": "Delete Customer Tax Id",
    "body": "var service = new TaxIdService();\nservice.Delete(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:txi_xxxxxxxxxxxxx}\"\n);"
  },
  "List Customer Tax Id": {
    "prefix": "StripeCustomerTaxIdList",
    "description": "List Customer Tax Id",
    "body": "var options = new TaxIdListOptions { Limit = ${2:3} };\nvar service = new TaxIdService();\nStripeList<TaxId> taxIds = service.List(\n  \"${1:cus_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Retrieve Customer Tax Id": {
    "prefix": "StripeCustomerTaxIdRetrieve",
    "description": "Retrieve Customer Tax Id",
    "body": "var service = new TaxIdService();\nservice.Get(\n  \"${2:cus_xxxxxxxxxxxxx}\",\n  \"${1:txi_xxxxxxxxxxxxx}\"\n);"
  },
  "Update Customer": {
    "prefix": "StripeCustomerUpdate",
    "description": "Update Customer",
    "body": "var options = new CustomerUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new CustomerService();\nservice.Update(\"${1:cus_xxxxxxxxxxxxx}\", options);"
  },
  "Delete Discount": {
    "prefix": "StripeDiscountDelete",
    "description": "Delete Discount",
    "body": "var service = new DiscountService();\nservice.DeleteCustomerDiscount(\"${1:cus_xxxxxxxxxxxxx}\");\n\n"
  },
  "Close Dispute": {
    "prefix": "StripeDisputeClose",
    "description": "Close Dispute",
    "body": "var service = new DisputeService();\nservice.Close(\"${1:dp_xxxxxxxxxxxxx}\");"
  },
  "List Dispute": {
    "prefix": "StripeDisputeList",
    "description": "List Dispute",
    "body": "var options = new DisputeListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new DisputeService();\nStripeList<Dispute> disputes = service.List(\n  options\n);"
  },
  "Retrieve Dispute": {
    "prefix": "StripeDisputeRetrieve",
    "description": "Retrieve Dispute",
    "body": "var service = new DisputeService();\nservice.Get(\"${1:dp_xxxxxxxxxxxxx}\");"
  },
  "Update Dispute": {
    "prefix": "StripeDisputeUpdate",
    "description": "Update Dispute",
    "body": "var options = new DisputeUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new DisputeService();\nservice.Update(\"${1:dp_xxxxxxxxxxxxx}\", options);"
  },
  "List Event": {
    "prefix": "StripeEventList",
    "description": "List Event",
    "body": "var options = new EventListOptions { Limit = ${1:3} };\nvar service = new EventService();\nStripeList<Event> events = service.List(options);"
  },
  "Retrieve Event": {
    "prefix": "StripeEventRetrieve",
    "description": "Retrieve Event",
    "body": "var service = new EventService();\nservice.Get(\"${1:evt_xxxxxxxxxxxxx}\");"
  },
  "Create File": {
    "prefix": "StripeFileCreate",
    "description": "Create File",
    "body": "var filename = \"${1:/path/to/a/file.jpg}\";\nusing (FileStream stream = System.IO.File.Open(filename, FileMode.Open))\n{\n  var options = new FileCreateOptions\n  {\n      File = stream,\n      Purpose = FilePurpose.DisputeEvidence\n  };\n  var service = new FileService();\n  var file = service.Create(options);\n}\n\n"
  },
  "Create File Link": {
    "prefix": "StripeFileLinkCreate",
    "description": "Create File Link",
    "body": "var options = new FileLinkCreateOptions\n{\n  File = \"${1:file_xxxxxxxxxxxxx}\",\n};\nvar service = new FileLinkService();\nservice.Create(options);"
  },
  "List File Link": {
    "prefix": "StripeFileLinkList",
    "description": "List File Link",
    "body": "var options = new FileLinkListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new FileLinkService();\nStripeList<FileLink> fileLinks = service.List(\n  options\n);"
  },
  "Retrieve File Link": {
    "prefix": "StripeFileLinkRetrieve",
    "description": "Retrieve File Link",
    "body": "var service = new FileLinkService();\nservice.Get(\"${1:link_xxxxxxxxxxxxx}\");"
  },
  "Update File Link": {
    "prefix": "StripeFileLinkUpdate",
    "description": "Update File Link",
    "body": "var options = new FileLinkUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new FileLinkService();\nservice.Update(\"${1:link_xxxxxxxxxxxxx}\", options);"
  },
  "List File": {
    "prefix": "StripeFileList",
    "description": "List File",
    "body": "var options = new FileListOptions { Limit = ${1:3} };\nvar service = new FileService();\nStripeList<File> files = service.List(options);"
  },
  "Retrieve File": {
    "prefix": "StripeFileRetrieve",
    "description": "Retrieve File",
    "body": "var service = new FileService();\nservice.Get(\"${1:file_xxxxxxxxxxxxx}\");"
  },
  "Create Funding Instruction": {
    "prefix": "StripeFundingInstructionCreate",
    "description": "Create Funding Instruction",
    "body": "var options = new FundingInstructionCreateOptions\n{\n  FundingType = \"${1:bank_xxxxxxxxxxxxx}\",\n  Currency = \"${2:eur}\",\n  DestinationBalance = \"${3:issuing}\",\n  BankTransfer = new FundingInstructionBankTransferOptions\n  {\n    Type = \"${4:iban}\",\n    Country = \"${5:DE}\",\n  },\n};\nvar service = new FundingInstructionService();\nservice.Create(options);"
  },
  "List Funding Instruction": {
    "prefix": "StripeFundingInstructionList",
    "description": "List Funding Instruction",
    "body": "var options = new FundingInstructionListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new FundingInstructionService();\nStripeList<FundingInstruction> fundingInstructions = service.List(\n  options\n);"
  },
  "Retrieve Funding Instruction": {
    "prefix": "StripeFundingInstructionRetrieve",
    "description": "Retrieve Funding Instruction",
    "body": "var service = new FundingInstructionService();\nservice.Get(\"${1:fi_xxxxxxxxxxxxx}\");"
  },
  "Update Funding Instruction": {
    "prefix": "StripeFundingInstructionUpdate",
    "description": "Update Funding Instruction",
    "body": "var options = new FundingInstructionUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new FundingInstructionService();\nservice.Update(\"${1:fi_xxxxxxxxxxxxx}\", options);"
  },
  "Create Invoice": {
    "prefix": "StripeInvoiceCreate",
    "description": "Create Invoice",
    "body": "var options = new InvoiceCreateOptions\n{\n  Customer = \"${1:cus_xxxxxxxxxxxxx}\",\n};\nvar service = new InvoiceService();\nservice.Create(options);"
  },
  "Delete Invoice": {
    "prefix": "StripeInvoiceDelete",
    "description": "Delete Invoice",
    "body": "var service = new InvoiceService();\nservice.Delete(\"${1:in_xxxxxxxxxxxxx}\");"
  },
  "Finalize Invoice Invoice": {
    "prefix": "StripeInvoiceFinalizeInvoice",
    "description": "Finalize Invoice Invoice",
    "body": "var service = new InvoiceService();\nservice.FinalizeInvoice(\"${1:in_xxxxxxxxxxxxx}\");"
  },
  "Create Invoice Item": {
    "prefix": "StripeInvoiceItemCreate",
    "description": "Create Invoice Item",
    "body": "var options = new InvoiceItemCreateOptions\n{\n  Customer = \"${1:cus_xxxxxxxxxxxxx}\",\n  Price = \"${2:price_xxxxxxxxxxxxx}\",\n};\nvar service = new InvoiceItemService();\nservice.Create(options);"
  },
  "Delete Invoice Item": {
    "prefix": "StripeInvoiceItemDelete",
    "description": "Delete Invoice Item",
    "body": "var service = new InvoiceItemService();\nservice.Delete(\"${1:ii_xxxxxxxxxxxxx}\");"
  },
  "List Invoice Item": {
    "prefix": "StripeInvoiceItemList",
    "description": "List Invoice Item",
    "body": "var options = new InvoiceItemListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new InvoiceItemService();\nStripeList<InvoiceItem> invoiceItems = service.List(\n  options\n);"
  },
  "Retrieve Invoice Item": {
    "prefix": "StripeInvoiceItemRetrieve",
    "description": "Retrieve Invoice Item",
    "body": "var service = new InvoiceItemService();\nservice.Get(\"${1:ii_xxxxxxxxxxxxx}\");"
  },
  "Update Invoice Item": {
    "prefix": "StripeInvoiceItemUpdate",
    "description": "Update Invoice Item",
    "body": "var options = new InvoiceItemUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new InvoiceItemService();\nservice.Update(\"${1:ii_xxxxxxxxxxxxx}\", options);"
  },
  "Invoice Lines": {
    "prefix": "StripeInvoiceLines",
    "description": "Invoice Lines",
    "body": "var options = new InvoiceListLineItemsOptions\n{\n  Limit = ${1:5},\n};\nvar service = new InvoiceService();\nvar lines = service.ListLineItems(\"${2:in_xxxxxxxxxxxxx}\", options);\n\n"
  },
  "Upcoming Invoice Lines": {
    "prefix": "StripeInvoiceLinesUpcoming",
    "description": "Upcoming Invoice Lines",
    "body": "var options = new UpcomingInvoiceListLineItemsOptions\n{\n  Customer = \"${1:cus_xxxxxxxxxxxxx}\",\n  Limit = ${2:5},\n};\nvar service = new InvoiceService();\nStripeList<InvoiceLineItem> lines = service.ListUpcomingLineItems(options);\n\n"
  },
  "List Invoice": {
    "prefix": "StripeInvoiceList",
    "description": "List Invoice",
    "body": "var options = new InvoiceListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new InvoiceService();\nStripeList<Invoice> invoices = service.List(\n  options\n);"
  },
  "Mark Uncollectible Invoice": {
    "prefix": "StripeInvoiceMarkUncollectible",
    "description": "Mark Uncollectible Invoice",
    "body": "var service = new InvoiceService();\nservice.MarkUncollectible(\"${1:in_xxxxxxxxxxxxx}\");"
  },
  "Pay Invoice": {
    "prefix": "StripeInvoicePay",
    "description": "Pay Invoice",
    "body": "var service = new InvoiceService();\nservice.Pay(\"${1:in_xxxxxxxxxxxxx}\");"
  },
  "Retrieve Invoice": {
    "prefix": "StripeInvoiceRetrieve",
    "description": "Retrieve Invoice",
    "body": "var service = new InvoiceService();\nservice.Get(\"${1:in_xxxxxxxxxxxxx}\");"
  },
  "Send Invoice Invoice": {
    "prefix": "StripeInvoiceSendInvoice",
    "description": "Send Invoice Invoice",
    "body": "var service = new InvoiceService();\nservice.SendInvoice(\"${1:in_xxxxxxxxxxxxx}\");"
  },
  "Upcoming Invoice": {
    "prefix": "StripeInvoiceUpcoming",
    "description": "Upcoming Invoice",
    "body": "var options = new UpcomingInvoiceOptions\n{\n  Customer = \"${1:cus_xxxxxxxxxxxxx}\",\n};\nvar service = new InvoiceService();\nInvoice upcoming = service.Upcoming(options);\n\n"
  },
  "Update Invoice": {
    "prefix": "StripeInvoiceUpdate",
    "description": "Update Invoice",
    "body": "var options = new InvoiceUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new InvoiceService();\nservice.Update(\"${1:in_xxxxxxxxxxxxx}\", options);"
  },
  "Void Invoice Invoice": {
    "prefix": "StripeInvoiceVoidInvoice",
    "description": "Void Invoice Invoice",
    "body": "var service = new InvoiceService();\nservice.VoidInvoice(\"${1:in_xxxxxxxxxxxxx}\");"
  },
  "Approve Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationApprove",
    "description": "Approve Issuing Authorization",
    "body": "var service = new AuthorizationService();\nservice.Approve(\"${1:iauth_xxxxxxxxxxxxx}\");"
  },
  "Decline Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationDecline",
    "description": "Decline Issuing Authorization",
    "body": "var service = new AuthorizationService();\nservice.Decline(\"${1:iauth_xxxxxxxxxxxxx}\");"
  },
  "List Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationList",
    "description": "List Issuing Authorization",
    "body": "var options = new AuthorizationListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new AuthorizationService();\nStripeList<Authorization> authorizations = service.List(\n  options\n);"
  },
  "Retrieve Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationRetrieve",
    "description": "Retrieve Issuing Authorization",
    "body": "var service = new AuthorizationService();\nservice.Get(\"${1:iauth_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Authorization": {
    "prefix": "StripeIssuingAuthorizationUpdate",
    "description": "Update Issuing Authorization",
    "body": "var options = new AuthorizationUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new AuthorizationService();\nservice.Update(\"${1:iauth_xxxxxxxxxxxxx}\", options);"
  },
  "Create Issuing Card": {
    "prefix": "StripeIssuingCardCreate",
    "description": "Create Issuing Card",
    "body": "var options = new CardCreateOptions\n{\n  Cardholder = \"${1:ich_xxxxxxxxxxxxx}\",\n  Currency = \"${2:usd}\",\n  Type = \"${3:virtual}\",\n};\nvar service = new CardService();\nservice.Create(options);"
  },
  "Create Issuing Cardholder": {
    "prefix": "StripeIssuingCardholderCreate",
    "description": "Create Issuing Cardholder",
    "body": "var options = new CardholderCreateOptions\n{\n  Type = \"${1:individual}\",\n  Name = \"${2:Jenny Rosen}\",\n  Email = \"${3:jenny.rosen@example.com}\",\n  PhoneNumber = \"${4:+18888675309}\",\n  Billing = new BillingOptions\n  {\n    Address = new AddressOptions\n    {\n      Line1 = \"${5:1234 Main Street}\",\n      City = \"${6:San Francisco}\",\n      State = \"${7:CA}\",\n      Country = \"${8:US}\",\n      PostalCode = \"${9:94111}\",\n    },\n  },\n};\nvar service = new CardholderService();\nservice.Create(options);"
  },
  "List Issuing Cardholder": {
    "prefix": "StripeIssuingCardholderList",
    "description": "List Issuing Cardholder",
    "body": "var options = new CardholderListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new CardholderService();\nStripeList<Cardholder> cardholders = service.List(\n  options\n);"
  },
  "Retrieve Issuing Cardholder": {
    "prefix": "StripeIssuingCardholderRetrieve",
    "description": "Retrieve Issuing Cardholder",
    "body": "var service = new CardholderService();\nservice.Get(\"${1:ich_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Cardholder": {
    "prefix": "StripeIssuingCardholderUpdate",
    "description": "Update Issuing Cardholder",
    "body": "var options = new CardholderUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new CardholderService();\nservice.Update(\"${1:ich_xxxxxxxxxxxxx}\", options);"
  },
  "List Issuing Card": {
    "prefix": "StripeIssuingCardList",
    "description": "List Issuing Card",
    "body": "var options = new CardListOptions { Limit = ${1:3} };\nvar service = new CardService();\nStripeList<Card> cards = service.List(options);"
  },
  "Retrieve Issuing Card": {
    "prefix": "StripeIssuingCardRetrieve",
    "description": "Retrieve Issuing Card",
    "body": "var service = new CardService();\nservice.Get(\"${1:ic_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Card": {
    "prefix": "StripeIssuingCardUpdate",
    "description": "Update Issuing Card",
    "body": "var options = new CardUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new CardService();\nservice.Update(\"${1:ic_xxxxxxxxxxxxx}\", options);"
  },
  "Create Issuing Dispute": {
    "prefix": "StripeIssuingDisputeCreate",
    "description": "Create Issuing Dispute",
    "body": "var options = new DisputeCreateOptions\n{\n  Transaction = \"${1:ipi_xxxxxxxxxxxxx}\",\n  Evidence = new DisputeEvidenceOptions\n  {\n    Reason = \"${2:fraudulent}\",\n    Fraudulent = new DisputeEvidenceFraudulentOptions\n    {\n      Explanation = \"${3:Purchase was unrecognized.}\",\n    },\n  },\n};\nvar service = new DisputeService();\nservice.Create(options);"
  },
  "List Issuing Dispute": {
    "prefix": "StripeIssuingDisputeList",
    "description": "List Issuing Dispute",
    "body": "var options = new DisputeListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new DisputeService();\nStripeList<Dispute> disputes = service.List(\n  options\n);"
  },
  "Retrieve Issuing Dispute": {
    "prefix": "StripeIssuingDisputeRetrieve",
    "description": "Retrieve Issuing Dispute",
    "body": "var service = new DisputeService();\nservice.Get(\"${1:idp_xxxxxxxxxxxxx}\");"
  },
  "Submit Issuing Dispute": {
    "prefix": "StripeIssuingDisputeSubmit",
    "description": "Submit Issuing Dispute",
    "body": "var service = new DisputeService();\nservice.Submit(\"${1:idp_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Dispute": {
    "prefix": "StripeIssuingDisputeUpdate",
    "description": "Update Issuing Dispute",
    "body": "var options = new DisputeUpdateOptions\n{\n  Evidence = new DisputeEvidenceOptions\n  {\n    Reason = \"${2:not_xxxxxxxxxxxxx}\",\n    NotReceived = new DisputeEvidenceNotReceivedOptions\n    {\n      ExpectedAt = ${3:1590000000},\n      Explanation${4:} = \"\",\n      ProductDescription = \"${5:Baseball cap}\",\n      ProductType = \"${6:merchandise}\",\n    },\n  },\n};\nvar service = new DisputeService();\nservice.Update(\"${1:idp_xxxxxxxxxxxxx}\", options);"
  },
  "List Issuing Transaction": {
    "prefix": "StripeIssuingTransactionList",
    "description": "List Issuing Transaction",
    "body": "var options = new TransactionListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new TransactionService();\nStripeList<Transaction> transactions = service.List(\n  options\n);"
  },
  "Retrieve Issuing Transaction": {
    "prefix": "StripeIssuingTransactionRetrieve",
    "description": "Retrieve Issuing Transaction",
    "body": "var service = new TransactionService();\nservice.Get(\"${1:ipi_xxxxxxxxxxxxx}\");"
  },
  "Update Issuing Transaction": {
    "prefix": "StripeIssuingTransactionUpdate",
    "description": "Update Issuing Transaction",
    "body": "var options = new TransactionUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new TransactionService();\nservice.Update(\"${1:ipi_xxxxxxxxxxxxx}\", options);"
  },
  "Retrieve Mandate": {
    "prefix": "StripeMandateRetrieve",
    "description": "Retrieve Mandate",
    "body": "var service = new MandateService();\nservice.Get(\"${1:mandate_xxxxxxxxxxxxx}\");"
  },
  "Create Order": {
    "prefix": "StripeOrderCreate",
    "description": "Create Order",
    "body": "var service = new OrderService();\nvar options = new OrderCreateOptions\n{\n  Currency = \"${1:usd}\",\n  Email = \"${2:jenny.rosen@example.com}\",\n  Items = new List<OrderItemOptions>\n  {\n    new OrderItemOptions\n    {\n      Type = \"${3:sku}\",\n      Parent = \"${4:sku_xxxxxxxxxxxxx}\",\n    },\n  },\n  Shipping = new ShippingOptions\n  {\n    Name = \"${5:Jenny Rosen}\",\n    Address = new AddressOptions\n    {\n      Line1 = \"${6:1234 Main Street}\",\n      City = \"${7:San Francisco}\",\n      State = \"${8:CA}\",\n      Country = \"${9:US}\",\n      PostalCode = \"${10:94111}\",\n    },\n  },\n}\nOrder order = service.Create(options);\n\n"
  },
  "List Order": {
    "prefix": "StripeOrderList",
    "description": "List Order",
    "body": "var options = new OrderListOptions { Limit = ${1:3} };\nvar service = new OrderService();\nStripeList<Order> orders = service.List(options);"
  },
  "Pay Order": {
    "prefix": "StripeOrderPay",
    "description": "Pay Order",
    "body": "var options = new OrderPayOptions\n{\n  Source = \"${2:tok_xxxx}\",\n};\nvar service = new OrderService();\nservice.Pay(\"${1:or_xxxxxxxxxxxxx}\", options);"
  },
  "Retrieve Order": {
    "prefix": "StripeOrderRetrieve",
    "description": "Retrieve Order",
    "body": "var service = new OrderService();\nservice.Get(\"${1:or_xxxxxxxxxxxxx}\");"
  },
  "List Order Return": {
    "prefix": "StripeOrderReturnList",
    "description": "List Order Return",
    "body": "var options = new OrderReturnListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new OrderReturnService();\nStripeList<OrderReturn> orderReturns = service.List(\n  options\n);"
  },
  "Retrieve Order Return": {
    "prefix": "StripeOrderReturnRetrieve",
    "description": "Retrieve Order Return",
    "body": "var service = new OrderReturnService();\nservice.Get(\"${1:orret_xxxxxxxxxxxxx}\");"
  },
  "Update Order": {
    "prefix": "StripeOrderUpdate",
    "description": "Update Order",
    "body": "var options = new OrderUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new OrderService();\nservice.Update(\"${1:or_xxxxxxxxxxxxx}\", options);"
  },
  "Cancel Payment Intent": {
    "prefix": "StripePaymentIntentCancel",
    "description": "Cancel Payment Intent",
    "body": "// To create a PaymentIntent, see our guide at: https://mock.stripe.com/docs/payments/payment-intents/creating-payment-intents#creating-for-automatic\nvar service = new PaymentIntentService();\nservice.Cancel(\"${1:pi_xxxxxxxxxxxxx}\");"
  },
  "Capture Payment Intent": {
    "prefix": "StripePaymentIntentCapture",
    "description": "Capture Payment Intent",
    "body": "// To create a requires_capture PaymentIntent, see our guide at: https://mock.stripe.com/docs/payments/capture-later\nvar service = new PaymentIntentService();\nservice.Capture(\"${1:pi_xxxxxxxxxxxxx}\");"
  },
  "Confirm Payment Intent": {
    "prefix": "StripePaymentIntentConfirm",
    "description": "Confirm Payment Intent",
    "body": "// To create a PaymentIntent for confirmation, see our guide at: https://mock.stripe.com/docs/payments/payment-intents/creating-payment-intents#creating-for-automatic\nvar options = new PaymentIntentConfirmOptions\n{\n  PaymentMethod = \"${2:pm_card_visa}\",\n};\nvar service = new PaymentIntentService();\nservice.Confirm(\"${1:pi_xxxxxxxxxxxxx}\", options);"
  },
  "Create Payment Intent": {
    "prefix": "StripePaymentIntentCreate",
    "description": "Create Payment Intent",
    "body": "var options = new PaymentIntentCreateOptions\n{\n  Amount = ${1:2000},\n  Currency = \"${2:usd}\",\n  PaymentMethodTypes = new List<string>\n  {\n    \"card\",\n  },\n};\nvar service = new PaymentIntentService();\nservice.Create(options);"
  },
  "List Payment Intent": {
    "prefix": "StripePaymentIntentList",
    "description": "List Payment Intent",
    "body": "var options = new PaymentIntentListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new PaymentIntentService();\nStripeList<PaymentIntent> paymentIntents = service.List(\n  options\n);"
  },
  "Retrieve Payment Intent": {
    "prefix": "StripePaymentIntentRetrieve",
    "description": "Retrieve Payment Intent",
    "body": "var service = new PaymentIntentService();\nservice.Get(\"${1:pi_xxxxxxxxxxxxx}\");"
  },
  "Update Payment Intent": {
    "prefix": "StripePaymentIntentUpdate",
    "description": "Update Payment Intent",
    "body": "var options = new PaymentIntentUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new PaymentIntentService();\nservice.Update(\"${1:pi_xxxxxxxxxxxxx}\", options);"
  },
  "Attach Payment Method": {
    "prefix": "StripePaymentMethodAttach",
    "description": "Attach Payment Method",
    "body": "var options = new PaymentMethodAttachOptions\n{\n  Customer = \"${2:cus_xxxxxxxxxxxxx}\",\n};\nvar service = new PaymentMethodService();\nservice.Attach(\"${1:pm_xxxxxxxxxxxxx}\", options);"
  },
  "Create Payment Method": {
    "prefix": "StripePaymentMethodCreate",
    "description": "Create Payment Method",
    "body": "var options = new PaymentMethodCreateOptions\n{\n  Type = \"${1:card}\",\n  Card = new PaymentMethodCardOptions\n  {\n    Number = \"${2:4242424242424242}\",\n    ExpMonth = ${3:5},\n    ExpYear = ${4:2022},\n    Cvc = \"${5:314}\",\n  },\n};\nvar service = new PaymentMethodService();\nservice.Create(options);"
  },
  "Detach Payment Method": {
    "prefix": "StripePaymentMethodDetach",
    "description": "Detach Payment Method",
    "body": "var service = new PaymentMethodService();\nservice.Detach(\"${1:pm_xxxxxxxxxxxxx}\");"
  },
  "List Payment Method": {
    "prefix": "StripePaymentMethodList",
    "description": "List Payment Method",
    "body": "var options = new PaymentMethodListOptions\n{\n  Customer = \"${1:cus_xxxxxxxxxxxxx}\",\n  Type = \"${2:card}\",\n};\nvar service = new PaymentMethodService();\nStripeList<PaymentMethod> paymentMethods = service.List(\n  options\n);"
  },
  "Retrieve Payment Method": {
    "prefix": "StripePaymentMethodRetrieve",
    "description": "Retrieve Payment Method",
    "body": "var service = new PaymentMethodService();\nservice.Get(\"${1:pm_xxxxxxxxxxxxx}\");"
  },
  "Update Payment Method": {
    "prefix": "StripePaymentMethodUpdate",
    "description": "Update Payment Method",
    "body": "var options = new PaymentMethodUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new PaymentMethodService();\nservice.Update(\"${1:pm_xxxxxxxxxxxxx}\", options);"
  },
  "Cancel Payout": {
    "prefix": "StripePayoutCancel",
    "description": "Cancel Payout",
    "body": "var service = new PayoutService();\nservice.Cancel(\"${1:po_xxxxxxxxxxxxx}\");"
  },
  "Create Payout": {
    "prefix": "StripePayoutCreate",
    "description": "Create Payout",
    "body": "var options = new PayoutCreateOptions\n{\n  Amount = ${1:1100},\n  Currency = \"${2:usd}\",\n};\nvar service = new PayoutService();\nservice.Create(options);"
  },
  "List Payout": {
    "prefix": "StripePayoutList",
    "description": "List Payout",
    "body": "var options = new PayoutListOptions { Limit = ${1:3} };\nvar service = new PayoutService();\nStripeList<Payout> payouts = service.List(\n  options\n);"
  },
  "Retrieve Payout": {
    "prefix": "StripePayoutRetrieve",
    "description": "Retrieve Payout",
    "body": "var service = new PayoutService();\nservice.Get(\"${1:po_xxxxxxxxxxxxx}\");"
  },
  "Reverse Payout": {
    "prefix": "StripePayoutReverse",
    "description": "Reverse Payout",
    "body": "var service = new PayoutService();\nservice.Reverse(\"${1:po_xxxxxxxxxxxxx}\");"
  },
  "Update Payout": {
    "prefix": "StripePayoutUpdate",
    "description": "Update Payout",
    "body": "var options = new PayoutUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new PayoutService();\nservice.Update(\"${1:po_xxxxxxxxxxxxx}\", options);"
  },
  "Create Plan": {
    "prefix": "StripePlanCreate",
    "description": "Create Plan",
    "body": "var options = new PlanCreateOptions\n{\n  Amount = ${1:2000},\n  Currency = \"${2:usd}\",\n  Interval = \"${3:month}\",\n  Product = \"${4:prod_xxxxxxxxxxxxx}\",\n};\nvar service = new PlanService();\nservice.Create(options);"
  },
  "Delete Plan": {
    "prefix": "StripePlanDelete",
    "description": "Delete Plan",
    "body": "var service = new PlanService();\nservice.Delete(\"${1:price_xxxxxxxxxxxxx}\");"
  },
  "List Plan": {
    "prefix": "StripePlanList",
    "description": "List Plan",
    "body": "var options = new PlanListOptions { Limit = ${1:3} };\nvar service = new PlanService();\nStripeList<Plan> plans = service.List(options);"
  },
  "Retrieve Plan": {
    "prefix": "StripePlanRetrieve",
    "description": "Retrieve Plan",
    "body": "var service = new PlanService();\nservice.Get(\"${1:price_xxxxxxxxxxxxx}\");"
  },
  "Update Plan": {
    "prefix": "StripePlanUpdate",
    "description": "Update Plan",
    "body": "var options = new PlanUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new PlanService();\nservice.Update(\"${1:price_xxxxxxxxxxxxx}\", options);"
  },
  "Create Price": {
    "prefix": "StripePriceCreate",
    "description": "Create Price",
    "body": "var options = new PriceCreateOptions\n{\n  UnitAmount = ${1:2000},\n  Currency = \"${2:usd}\",\n  Recurring = new PriceRecurringOptions\n  {\n    Interval = \"${3:month}\",\n  },\n  Product = \"${4:prod_xxxxxxxxxxxxx}\",\n};\nvar service = new PriceService();\nservice.Create(options);"
  },
  "List Price": {
    "prefix": "StripePriceList",
    "description": "List Price",
    "body": "var options = new PriceListOptions { Limit = ${1:3} };\nvar service = new PriceService();\nStripeList<Price> prices = service.List(options);"
  },
  "Retrieve Price": {
    "prefix": "StripePriceRetrieve",
    "description": "Retrieve Price",
    "body": "var service = new PriceService();\nservice.Get(\"${1:price_xxxxxxxxxxxxx}\");"
  },
  "Update Price": {
    "prefix": "StripePriceUpdate",
    "description": "Update Price",
    "body": "var options = new PriceUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new PriceService();\nservice.Update(\"${1:price_xxxxxxxxxxxxx}\", options);"
  },
  "Create Product": {
    "prefix": "StripeProductCreate",
    "description": "Create Product",
    "body": "var options = new ProductCreateOptions\n{\n  Name = \"${1:Gold Special}\",\n};\nvar service = new ProductService();\nservice.Create(options);"
  },
  "Delete Product": {
    "prefix": "StripeProductDelete",
    "description": "Delete Product",
    "body": "var service = new ProductService();\nservice.Delete(\"${1:prod_xxxxxxxxxxxxx}\");"
  },
  "List Product": {
    "prefix": "StripeProductList",
    "description": "List Product",
    "body": "var options = new ProductListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new ProductService();\nStripeList<Product> products = service.List(\n  options\n);"
  },
  "Retrieve Product": {
    "prefix": "StripeProductRetrieve",
    "description": "Retrieve Product",
    "body": "var service = new ProductService();\nservice.Get(\"${1:prod_xxxxxxxxxxxxx}\");"
  },
  "Update Product": {
    "prefix": "StripeProductUpdate",
    "description": "Update Product",
    "body": "var options = new ProductUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new ProductService();\nservice.Update(\"${1:prod_xxxxxxxxxxxxx}\", options);"
  },
  "Create Promotion Code": {
    "prefix": "StripePromotionCodeCreate",
    "description": "Create Promotion Code",
    "body": "var options = new PromotionCodeCreateOptions\n{\n  Coupon = \"${1:25_5OFF}\",\n};\nvar service = new PromotionCodeService();\nservice.Create(options);"
  },
  "List Promotion Code": {
    "prefix": "StripePromotionCodeList",
    "description": "List Promotion Code",
    "body": "var options = new PromotionCodeListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new PromotionCodeService();\nStripeList<PromotionCode> promotionCodes = service.List(\n  options\n);"
  },
  "Retrieve Promotion Code": {
    "prefix": "StripePromotionCodeRetrieve",
    "description": "Retrieve Promotion Code",
    "body": "var service = new PromotionCodeService();\nservice.Get(\"${1:promo_xxxxxxxxxxxxx}\");"
  },
  "Update Promotion Code": {
    "prefix": "StripePromotionCodeUpdate",
    "description": "Update Promotion Code",
    "body": "var options = new PromotionCodeUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new PromotionCodeService();\nservice.Update(\"${1:promo_xxxxxxxxxxxxx}\", options);"
  },
  "List Radar Early Fraud Warning": {
    "prefix": "StripeRadarEarlyFraudWarningList",
    "description": "List Radar Early Fraud Warning",
    "body": "var options = new EarlyFraudWarningListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new EarlyFraudWarningService();\nStripeList<EarlyFraudWarning> earlyFraudWarnings = service.List(\n  options\n);"
  },
  "Retrieve Radar Early Fraud Warning": {
    "prefix": "StripeRadarEarlyFraudWarningRetrieve",
    "description": "Retrieve Radar Early Fraud Warning",
    "body": "var service = new EarlyFraudWarningService();\nservice.Get(\"${1:issfr_xxxxxxxxxxxxx}\");"
  },
  "Create Radar Value List": {
    "prefix": "StripeRadarValueListCreate",
    "description": "Create Radar Value List",
    "body": "var options = new ValueListCreateOptions\n{\n  Alias = \"${1:custom_ip_xxxxxxxxxxxxx}\",\n  Name = \"${2:Custom IP Blocklist}\",\n  ItemType = \"${3:ip_address}\",\n};\nvar service = new ValueListService();\nservice.Create(options);"
  },
  "Delete Radar Value List": {
    "prefix": "StripeRadarValueListDelete",
    "description": "Delete Radar Value List",
    "body": "var service = new ValueListService();\nservice.Delete(\"${1:rsl_xxxxxxxxxxxxx}\");"
  },
  "Create Radar Value List Item": {
    "prefix": "StripeRadarValueListItemCreate",
    "description": "Create Radar Value List Item",
    "body": "var options = new ValueListItemCreateOptions\n{\n  ValueList = \"${1:rsl_xxxxxxxxxxxxx}\",\n  Value = \"${2:1.2.3.4}\",\n};\nvar service = new ValueListItemService();\nservice.Create(options);"
  },
  "Delete Radar Value List Item": {
    "prefix": "StripeRadarValueListItemDelete",
    "description": "Delete Radar Value List Item",
    "body": "var service = new ValueListItemService();\nservice.Delete(\"${1:rsli_xxxxxxxxxxxxx}\");"
  },
  "List Radar Value List Item": {
    "prefix": "StripeRadarValueListItemList",
    "description": "List Radar Value List Item",
    "body": "var options = new ValueListItemListOptions\n{\n  Limit = ${1:3},\n  ValueList = \"${2:rsl_xxxxxxxxxxxxx}\",\n};\nvar service = new ValueListItemService();\nStripeList<ValueListItem> valueListItems = service.List(\n  options\n);"
  },
  "Retrieve Radar Value List Item": {
    "prefix": "StripeRadarValueListItemRetrieve",
    "description": "Retrieve Radar Value List Item",
    "body": "var service = new ValueListItemService();\nservice.Get(\"${1:rsli_xxxxxxxxxxxxx}\");"
  },
  "List Radar Value List": {
    "prefix": "StripeRadarValueListList",
    "description": "List Radar Value List",
    "body": "var options = new ValueListListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new ValueListService();\nStripeList<ValueList> valueLists = service.List(\n  options\n);"
  },
  "Retrieve Radar Value List": {
    "prefix": "StripeRadarValueListRetrieve",
    "description": "Retrieve Radar Value List",
    "body": "var service = new ValueListService();\nservice.Get(\"${1:rsl_xxxxxxxxxxxxx}\");"
  },
  "Update Radar Value List": {
    "prefix": "StripeRadarValueListUpdate",
    "description": "Update Radar Value List",
    "body": "var options = new ValueListUpdateOptions\n{\n  Name = \"${2:Updated IP Block List}\",\n};\nvar service = new ValueListService();\nservice.Update(\"${1:rsl_xxxxxxxxxxxxx}\", options);"
  },
  "Create Refund": {
    "prefix": "StripeRefundCreate",
    "description": "Create Refund",
    "body": "var options = new RefundCreateOptions\n{\n  Charge = \"${1:ch_xxxxxxxxxxxxx}\",\n};\nvar service = new RefundService();\nservice.Create(options);"
  },
  "List Refund": {
    "prefix": "StripeRefundList",
    "description": "List Refund",
    "body": "var options = new RefundListOptions { Limit = ${1:3} };\nvar service = new RefundService();\nStripeList<Refund> refunds = service.List(\n  options\n);"
  },
  "Retrieve Refund": {
    "prefix": "StripeRefundRetrieve",
    "description": "Retrieve Refund",
    "body": "var service = new RefundService();\nservice.Get(\"${1:re_xxxxxxxxxxxxx}\");"
  },
  "Update Refund": {
    "prefix": "StripeRefundUpdate",
    "description": "Update Refund",
    "body": "var options = new RefundUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new RefundService();\nservice.Update(\"${1:re_xxxxxxxxxxxxx}\", options);"
  },
  "Create Reporting Report Run": {
    "prefix": "StripeReportingReportRunCreate",
    "description": "Create Reporting Report Run",
    "body": "var options = new ReportRunCreateOptions\n{\n  ReportType = \"${1:balance.summary.1}\",\n  Parameters = new ReportRunParametersOptions\n  {\n    IntervalStart = ${2:1522540800},\n    IntervalEnd = ${3:1525132800},\n  },\n};\nvar service = new ReportRunService();\nservice.Create(options);"
  },
  "List Reporting Report Run": {
    "prefix": "StripeReportingReportRunList",
    "description": "List Reporting Report Run",
    "body": "var options = new ReportRunListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new ReportRunService();\nStripeList<ReportRun> reportRuns = service.List(\n  options\n);"
  },
  "Retrieve Reporting Report Run": {
    "prefix": "StripeReportingReportRunRetrieve",
    "description": "Retrieve Reporting Report Run",
    "body": "var service = new ReportRunService();\nservice.Get(\"${1:frr_xxxxxxxxxxxxx}\");"
  },
  "List Reporting Report Type": {
    "prefix": "StripeReportingReportTypeList",
    "description": "List Reporting Report Type",
    "body": "var service = new ReportTypeService();\nStripeList<ReportType> reportTypes = service.List();"
  },
  "Retrieve Reporting Report Type": {
    "prefix": "StripeReportingReportTypeRetrieve",
    "description": "Retrieve Reporting Report Type",
    "body": "var service = new ReportTypeService();\nservice.Get(\"${1:balance.summary.1}\");"
  },
  "Approve Review": {
    "prefix": "StripeReviewApprove",
    "description": "Approve Review",
    "body": "var service = new ReviewService();\nservice.Approve(\"${1:prv_xxxxxxxxxxxxx}\");"
  },
  "List Review": {
    "prefix": "StripeReviewList",
    "description": "List Review",
    "body": "var options = new ReviewListOptions { Limit = ${1:3} };\nvar service = new ReviewService();\nStripeList<Review> reviews = service.List(\n  options\n);"
  },
  "Retrieve Review": {
    "prefix": "StripeReviewRetrieve",
    "description": "Retrieve Review",
    "body": "var service = new ReviewService();\nservice.Get(\"${1:prv_xxxxxxxxxxxxx}\");"
  },
  "List Setup Attempt": {
    "prefix": "StripeSetupAttemptList",
    "description": "List Setup Attempt",
    "body": "var options = new SetupAttemptListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new SetupAttemptService();\nStripeList<SetupAttempt> setupAttempts = service.List(\n  options\n);"
  },
  "Cancel Setup Intent": {
    "prefix": "StripeSetupIntentCancel",
    "description": "Cancel Setup Intent",
    "body": "var service = new SetupIntentService();\nservice.Cancel(\"${1:seti_xxxxxxxxxxxxx}\");"
  },
  "Confirm Setup Intent": {
    "prefix": "StripeSetupIntentConfirm",
    "description": "Confirm Setup Intent",
    "body": "var options = new SetupIntentConfirmOptions\n{\n  PaymentMethod = \"${2:pm_card_visa}\",\n};\nvar service = new SetupIntentService();\nservice.Confirm(\"${1:seti_xxxxxxxxxxxxx}\", options);"
  },
  "Create Setup Intent": {
    "prefix": "StripeSetupIntentCreate",
    "description": "Create Setup Intent",
    "body": "var options = new SetupIntentCreateOptions\n{\n  PaymentMethodTypes = new List<string>\n  {\n    \"card\",\n  },\n};\nvar service = new SetupIntentService();\nservice.Create(options);"
  },
  "List Setup Intent": {
    "prefix": "StripeSetupIntentList",
    "description": "List Setup Intent",
    "body": "var options = new SetupIntentListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new SetupIntentService();\nStripeList<SetupIntent> setupIntents = service.List(\n  options\n);"
  },
  "Retrieve Setup Intent": {
    "prefix": "StripeSetupIntentRetrieve",
    "description": "Retrieve Setup Intent",
    "body": "var service = new SetupIntentService();\nservice.Get(\"${1:seti_xxxxxxxxxxxxx}\");"
  },
  "Update Setup Intent": {
    "prefix": "StripeSetupIntentUpdate",
    "description": "Update Setup Intent",
    "body": "var options = new SetupIntentUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"user_id\", \"${2:3435453}\" },\n  },\n};\nvar service = new SetupIntentService();\nservice.Update(\"${1:seti_xxxxxxxxxxxxx}\", options);"
  },
  "List Sigma Scheduled Query Run": {
    "prefix": "StripeSigmaScheduledQueryRunList",
    "description": "List Sigma Scheduled Query Run",
    "body": "var options = new ScheduledQueryRunListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new ScheduledQueryRunService();\nStripeList<ScheduledQueryRun> scheduledQueryRuns = service.List(\n  options\n);"
  },
  "Retrieve Sigma Scheduled Query Run": {
    "prefix": "StripeSigmaScheduledQueryRunRetrieve",
    "description": "Retrieve Sigma Scheduled Query Run",
    "body": "var service = new ScheduledQueryRunService();\nservice.Get(\"${1:sqr_xxxxxxxxxxxxx}\");"
  },
  "Create Sku": {
    "prefix": "StripeSkuCreate",
    "description": "Create Sku",
    "body": "var options = new SkuCreateOptions\n{\n  Attributes = new SkuAttributesOptions\n  {\n    Size = \"${1:Medium}\",\n    Gender = \"${2:Unisex}\",\n  },\n  Price = ${3:1500},\n  Currency = \"${4:usd}\",\n  Inventory = new SkuInventoryOptions\n  {\n    Type = \"${5:finite}\",\n    Quantity = ${6:500},\n  },\n  Product = \"${7:prod_xxxxxxxxxxxxx}\",\n};\nvar service = new SkuService();\nservice.Create(options);"
  },
  "Delete Sku": {
    "prefix": "StripeSkuDelete",
    "description": "Delete Sku",
    "body": "var service = new SkuService();\nservice.Delete(\"${1:sku_xxxxxxxxxxxxx}\");"
  },
  "List Sku": {
    "prefix": "StripeSkuList",
    "description": "List Sku",
    "body": "var options = new SkuListOptions { Limit = ${1:3} };\nvar service = new SkuService();\nStripeList<Sku> skus = service.List(options);"
  },
  "Retrieve Sku": {
    "prefix": "StripeSkuRetrieve",
    "description": "Retrieve Sku",
    "body": "var service = new SkuService();\nservice.Get(\"${1:sku_xxxxxxxxxxxxx}\");"
  },
  "Update Sku": {
    "prefix": "StripeSkuUpdate",
    "description": "Update Sku",
    "body": "var options = new SkuUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new SkuService();\nservice.Update(\"${1:sku_xxxxxxxxxxxxx}\", options);"
  },
  "Attach Source": {
    "prefix": "StripeSourceAttach",
    "description": "Attach Source",
    "body": "var options = new SourceAttachOptions\n{\n  Source = \"${1:src_xxxxxxxxxxxxx}\",\n};\nvar service = new SourceService();\nvar source = service.Attach('${2:cus_xxxxxxxxxxxxx}', options);\n\n"
  },
  "Create Source": {
    "prefix": "StripeSourceCreate",
    "description": "Create Source",
    "body": "var options = new SourceCreateOptions {\n  Type = SourceType.AchCreditTransfer,\n  Currency = \"${1:usd}\",\n  Owner = new SourceOwnerOptions {\n    Email = \"${2:jenny.rosen@example.com}\"\n  }\n};\n\nvar service = new SourceService();\nSource source = service.Create(options);\n\n"
  },
  "Detach Source": {
    "prefix": "StripeSourceDetach",
    "description": "Detach Source",
    "body": "var service = new SourceService();\nvar source = service.Detach(\"${1:cus_xxxxxxxxxxxxx}\", \"${2:src_xxxxxxxxxxxxx}\");\n\n"
  },
  "Retrieve Source": {
    "prefix": "StripeSourceRetrieve",
    "description": "Retrieve Source",
    "body": "var service = new SourceService();\nservice.Get(\"${1:src_xxxxxxxxxxxxx}\");"
  },
  "Update Source": {
    "prefix": "StripeSourceUpdate",
    "description": "Update Source",
    "body": "var options = new SourceUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new SourceService();\nservice.Update(\"${1:src_xxxxxxxxxxxxx}\", options);"
  },
  "Create Subscription": {
    "prefix": "StripeSubscriptionCreate",
    "description": "Create Subscription",
    "body": "var options = new SubscriptionCreateOptions\n{\n  Customer = \"${1:cus_xxxxxxxxxxxxx}\",\n  Items = new List<SubscriptionItemOptions>\n  {\n    new SubscriptionItemOptions\n    {\n      Price = \"price_xxxxxxxxxxxxx\",\n    },\n  },\n};\nvar service = new SubscriptionService();\nservice.Create(options);"
  },
  "Delete Subscription": {
    "prefix": "StripeSubscriptionDelete",
    "description": "Delete Subscription",
    "body": "var service = new SubscriptionService();\nservice.Cancel(\"${1:sub_xxxxxxxxxxxxx}\");"
  },
  "Delete Subscription Discount": {
    "prefix": "StripeSubscriptionDiscountDelete",
    "description": "Delete Subscription Discount",
    "body": "var service = new DiscountService();\nservice.DeleteSubscriptionDiscount(\"${1:sub_xxxxxxxxxxxxx}\");\n\n"
  },
  "Create Subscription Item": {
    "prefix": "StripeSubscriptionItemCreate",
    "description": "Create Subscription Item",
    "body": "var options = new SubscriptionItemCreateOptions\n{\n  Subscription = \"${1:sub_xxxxxxxxxxxxx}\",\n  Price = \"${2:price_xxxxxxxxxxxxx}\",\n  Quantity = ${3:2},\n};\nvar service = new SubscriptionItemService();\nservice.Create(options);"
  },
  "Delete Subscription Item": {
    "prefix": "StripeSubscriptionItemDelete",
    "description": "Delete Subscription Item",
    "body": "var service = new SubscriptionItemService();\nservice.Delete(\"${1:si_xxxxxxxxxxxxx}\");"
  },
  "List Subscription Item": {
    "prefix": "StripeSubscriptionItemList",
    "description": "List Subscription Item",
    "body": "var options = new SubscriptionItemListOptions\n{\n  Subscription = \"${1:sub_xxxxxxxxxxxxx}\",\n};\nvar service = new SubscriptionItemService();\nStripeList<SubscriptionItem> subscriptionItems = service.List(\n  options\n);"
  },
  "Retrieve Subscription Item": {
    "prefix": "StripeSubscriptionItemRetrieve",
    "description": "Retrieve Subscription Item",
    "body": "var service = new SubscriptionItemService();\nservice.Get(\"${1:si_xxxxxxxxxxxxx}\");"
  },
  "Update Subscription Item": {
    "prefix": "StripeSubscriptionItemUpdate",
    "description": "Update Subscription Item",
    "body": "var options = new SubscriptionItemUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new SubscriptionItemService();\nservice.Update(\"${1:si_xxxxxxxxxxxxx}\", options);"
  },
  "Create Subscription Item Usage Record": {
    "prefix": "StripeSubscriptionItemUsageRecordCreate",
    "description": "Create Subscription Item Usage Record",
    "body": "var options = new UsageRecordCreateOptions\n{\n  Quantity = ${2:100},\n  Timestamp = ${3:1571252444},\n};\nvar service = new UsageRecordService();\nservice.Create(\"${1:si_xxxxxxxxxxxxx}\", options);"
  },
  "List Subscription Item Usage Record Summary": {
    "prefix": "StripeSubscriptionItemUsageRecordSummaryList",
    "description": "List Subscription Item Usage Record Summary",
    "body": "var options = new UsageRecordSummaryListOptions\n{\n  Limit = ${2:3},\n};\nvar service = new UsageRecordSummaryService();\nStripeList<UsageRecordSummary> usageRecordSummaries = service.List(\n  \"${1:si_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "List Subscription": {
    "prefix": "StripeSubscriptionList",
    "description": "List Subscription",
    "body": "var options = new SubscriptionListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new SubscriptionService();\nStripeList<Subscription> subscriptions = service.List(\n  options\n);"
  },
  "Retrieve Subscription": {
    "prefix": "StripeSubscriptionRetrieve",
    "description": "Retrieve Subscription",
    "body": "var service = new SubscriptionService();\nservice.Get(\"${1:sub_xxxxxxxxxxxxx}\");"
  },
  "Cancel Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleCancel",
    "description": "Cancel Subscription Schedule",
    "body": "var service = new SubscriptionScheduleService();\nservice.Cancel(\"${1:sub_sched_xxxxxxxxxxxxx}\");"
  },
  "Create Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleCreate",
    "description": "Create Subscription Schedule",
    "body": "var options = new SubscriptionScheduleCreateOptions\n{\n  Customer = \"${1:cus_xxxxxxxxxxxxx}\",\n  StartDate = ${2:1620753115},\n  EndBehavior = \"${3:release}\",\n  Phases = new List<SubscriptionSchedulePhaseOptions>\n  {\n    new SubscriptionSchedulePhaseOptions\n    {\n      Items = new List<SubscriptionSchedulePhaseItemOptions>\n      {\n        new SubscriptionSchedulePhaseItemOptions\n        {\n          Price = \"price_xxxxxxxxxxxxx\",\n          Quantity = 1,\n        },\n      },\n      Iterations = 12,\n    },\n  },\n};\nvar service = new SubscriptionScheduleService();\nservice.Create(options);"
  },
  "List Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleList",
    "description": "List Subscription Schedule",
    "body": "var options = new SubscriptionScheduleListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new SubscriptionScheduleService();\nStripeList<SubscriptionSchedule> subscriptionSchedules = service.List(\n  options\n);"
  },
  "Release Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleRelease",
    "description": "Release Subscription Schedule",
    "body": "var service = new SubscriptionScheduleService();\nservice.Release(\"${1:sub_sched_xxxxxxxxxxxxx}\");"
  },
  "Retrieve Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleRetrieve",
    "description": "Retrieve Subscription Schedule",
    "body": "var service = new SubscriptionScheduleService();\nservice.Get(\"${1:sub_sched_xxxxxxxxxxxxx}\");"
  },
  "Update Subscription Schedule": {
    "prefix": "StripeSubscriptionScheduleUpdate",
    "description": "Update Subscription Schedule",
    "body": "var options = new SubscriptionScheduleUpdateOptions\n{\n  EndBehavior = \"${2:release}\",\n};\nvar service = new SubscriptionScheduleService();\nservice.Update(\n  \"${1:sub_sched_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Update Subscription": {
    "prefix": "StripeSubscriptionUpdate",
    "description": "Update Subscription",
    "body": "var options = new SubscriptionUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new SubscriptionService();\nservice.Update(\"${1:sub_xxxxxxxxxxxxx}\", options);"
  },
  "Create Tax Rate": {
    "prefix": "StripeTaxRateCreate",
    "description": "Create Tax Rate",
    "body": "var options = new TaxRateOptions\n{\n  DisplayName = \"${1:VAT}\",\n  Description = \"${2:VAT Germany}\",\n  Jurisdiction = \"${3:DE}\",\n  Percentage = ${4:16.0m},\n  Inclusive = ${5:false},\n};\nvar service = new TaxRateService();\nvar taxRate = service.Create(options);\n\n"
  },
  "List Tax Rate": {
    "prefix": "StripeTaxRateList",
    "description": "List Tax Rate",
    "body": "var options = new TaxRateListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new TaxRateService();\nStripeList<TaxRate> taxRates = service.List(\n  options\n);"
  },
  "Retrieve Tax Rate": {
    "prefix": "StripeTaxRateRetrieve",
    "description": "Retrieve Tax Rate",
    "body": "var service = new TaxRateService();\nservice.Get(\"${1:txr_xxxxxxxxxxxxx}\");"
  },
  "Update Tax Rate": {
    "prefix": "StripeTaxRateUpdate",
    "description": "Update Tax Rate",
    "body": "var options = new TaxRateUpdateOptions\n{\n  Active = ${2:false},\n};\nvar service = new TaxRateService();\nservice.Update(\"${1:txr_xxxxxxxxxxxxx}\", options);"
  },
  "Create Terminal Connection Token": {
    "prefix": "StripeTerminalConnectionTokenCreate",
    "description": "Create Terminal Connection Token",
    "body": "var service = new ConnectionTokenService();\nservice.Create();"
  },
  "Create Terminal Location": {
    "prefix": "StripeTerminalLocationCreate",
    "description": "Create Terminal Location",
    "body": "var options = new LocationCreateOptions\n{\n  DisplayName = \"${1:My First Store}\",\n  Address = new AddressOptions\n  {\n    Line1 = \"${2:1234 Main Street}\",\n    City = \"${3:San Francisco}\",\n    Country = \"${4:US}\",\n    PostalCode = \"${5:94111}\",\n  },\n};\nvar service = new LocationService();\nservice.Create(options);"
  },
  "Delete Terminal Location": {
    "prefix": "StripeTerminalLocationDelete",
    "description": "Delete Terminal Location",
    "body": "var service = new LocationService();\nservice.Delete(\"${1:tml_xxxxxxxxxxxxx}\");"
  },
  "List Terminal Location": {
    "prefix": "StripeTerminalLocationList",
    "description": "List Terminal Location",
    "body": "var options = new LocationListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new LocationService();\nStripeList<Location> locations = service.List(\n  options\n);"
  },
  "Retrieve Terminal Location": {
    "prefix": "StripeTerminalLocationRetrieve",
    "description": "Retrieve Terminal Location",
    "body": "var service = new LocationService();\nservice.Get(\"${1:tml_xxxxxxxxxxxxx}\");"
  },
  "Update Terminal Location": {
    "prefix": "StripeTerminalLocationUpdate",
    "description": "Update Terminal Location",
    "body": "var options = new LocationUpdateOptions\n{\n  DisplayName = \"${2:My First Store}\",\n};\nvar service = new LocationService();\nservice.Update(\"${1:tml_xxxxxxxxxxxxx}\", options);"
  },
  "Create Terminal Reader": {
    "prefix": "StripeTerminalReaderCreate",
    "description": "Create Terminal Reader",
    "body": "var options = new ReaderCreateOptions\n{\n  RegistrationCode = \"${1:puppies-plug-could}\",\n  Label = \"${2:Blue Rabbit}\",\n  Location = \"${3:tml_1234}\",\n};\nvar service = new ReaderService();\nservice.Create(options);"
  },
  "Delete Terminal Reader": {
    "prefix": "StripeTerminalReaderDelete",
    "description": "Delete Terminal Reader",
    "body": "var service = new ReaderService();\nservice.Delete(\"${1:tmr_P400-123-456-789}\");"
  },
  "List Terminal Reader": {
    "prefix": "StripeTerminalReaderList",
    "description": "List Terminal Reader",
    "body": "var options = new ReaderListOptions { Limit = ${1:3} };\nvar service = new ReaderService();\nStripeList<Reader> readers = service.List(\n  options\n);"
  },
  "Retrieve Terminal Reader": {
    "prefix": "StripeTerminalReaderRetrieve",
    "description": "Retrieve Terminal Reader",
    "body": "var service = new ReaderService();\nservice.Get(\"${1:tmr_P400-123-456-789}\");"
  },
  "Update Terminal Reader": {
    "prefix": "StripeTerminalReaderUpdate",
    "description": "Update Terminal Reader",
    "body": "var options = new ReaderUpdateOptions\n{\n  Label = \"${2:Blue Rabbit}\",\n};\nvar service = new ReaderService();\nservice.Update(\"${1:tmr_P400-123-456-789}\", options);"
  },
  "Create Token": {
    "prefix": "StripeTokenCreate",
    "description": "Create Token",
    "body": "var options = new TokenCreateOptions\n{\n  CvcUpdate = new TokenCvcUpdateOptions\n  {\n    Cvc = \"${1:123}\",\n  },\n};\nvar service = new TokenService();\nservice.Create(options);"
  },
  "Retrieve Token": {
    "prefix": "StripeTokenRetrieve",
    "description": "Retrieve Token",
    "body": "var service = new TokenService();\nservice.Get(\"${1:tok_xxxx}\");"
  },
  "Cancel Topup": {
    "prefix": "StripeTopupCancel",
    "description": "Cancel Topup",
    "body": "var service = new TopupService();\nservice.Cancel(\"${1:tu_xxxxxxxxxxxxx}\");"
  },
  "Create Topup": {
    "prefix": "StripeTopupCreate",
    "description": "Create Topup",
    "body": "var options = new TopupCreateOptions\n{\n  Amount = ${1:2000},\n  Currency = \"${2:usd}\",\n  Description = \"${3:Top-up for Jenny Rosen}\",\n  StatementDescriptor = \"${4:Top-up}\",\n};\nvar service = new TopupService();\nservice.Create(options);"
  },
  "List Topup": {
    "prefix": "StripeTopupList",
    "description": "List Topup",
    "body": "var options = new TopupListOptions { Limit = ${1:3} };\nvar service = new TopupService();\nStripeList<Topup> topups = service.List(options);"
  },
  "Retrieve Topup": {
    "prefix": "StripeTopupRetrieve",
    "description": "Retrieve Topup",
    "body": "var service = new TopupService();\nservice.Get(\"${1:tu_xxxxxxxxxxxxx}\");"
  },
  "Update Topup": {
    "prefix": "StripeTopupUpdate",
    "description": "Update Topup",
    "body": "var options = new TopupUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new TopupService();\nservice.Update(\"${1:tu_xxxxxxxxxxxxx}\", options);"
  },
  "Create Transfer": {
    "prefix": "StripeTransferCreate",
    "description": "Create Transfer",
    "body": "var options = new TransferCreateOptions\n{\n  Amount = ${1:400},\n  Currency = \"${2:usd}\",\n  Destination = \"${3:acct_xxxxxxxxxxxxx}\",\n  TransferGroup = \"${4:ORDER_95}\",\n};\nvar service = new TransferService();\nservice.Create(options);"
  },
  "List Transfer": {
    "prefix": "StripeTransferList",
    "description": "List Transfer",
    "body": "var options = new TransferListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new TransferService();\nStripeList<Transfer> transfers = service.List(\n  options\n);"
  },
  "Retrieve Transfer": {
    "prefix": "StripeTransferRetrieve",
    "description": "Retrieve Transfer",
    "body": "var service = new TransferService();\nservice.Get(\"${1:tr_xxxxxxxxxxxxx}\");"
  },
  "Create Transfer Reversal": {
    "prefix": "StripeTransferReversalCreate",
    "description": "Create Transfer Reversal",
    "body": "var options = new TransferReversalCreateOptions\n{\n  Amount = ${2:100},\n};\nvar service = new TransferReversalService();\nservice.Create(\"${1:tr_xxxxxxxxxxxxx}\", options);"
  },
  "List Transfer Reversal": {
    "prefix": "StripeTransferReversalList",
    "description": "List Transfer Reversal",
    "body": "var options = new TransferReversalListOptions\n{\n  Limit = ${2:3},\n};\nvar service = new TransferReversalService();\nStripeList<TransferReversal> transferReversals = service.List(\n  \"${1:tr_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Retrieve Transfer Reversal": {
    "prefix": "StripeTransferReversalRetrieve",
    "description": "Retrieve Transfer Reversal",
    "body": "var service = new TransferReversalService();\nservice.Get(\n  \"${2:tr_xxxxxxxxxxxxx}\",\n  \"${1:trr_xxxxxxxxxxxxx}\"\n);"
  },
  "Update Transfer Reversal": {
    "prefix": "StripeTransferReversalUpdate",
    "description": "Update Transfer Reversal",
    "body": "var options = new TransferReversalUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${3:6735}\" },\n  },\n};\nvar service = new TransferReversalService();\nservice.Update(\n  \"${2:tr_xxxxxxxxxxxxx}\",\n  \"${1:trr_xxxxxxxxxxxxx}\",\n  options\n);"
  },
  "Update Transfer": {
    "prefix": "StripeTransferUpdate",
    "description": "Update Transfer",
    "body": "var options = new TransferUpdateOptions\n{\n  Metadata = new Dictionary<string, string>\n  {\n    { \"order_id\", \"${2:6735}\" },\n  },\n};\nvar service = new TransferService();\nservice.Update(\"${1:tr_xxxxxxxxxxxxx}\", options);"
  },
  "Create Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointCreate",
    "description": "Create Webhook Endpoint",
    "body": "var options = new WebhookEndpointCreateOptions\n{\n  Url = \"${1:https://example.com/my/webhook/endpoint}\",\n  EnabledEvents = new List<string>\n  {\n    \"charge.failed\",\n    \"charge.succeeded\",\n  },\n};\nvar service = new WebhookEndpointService();\nservice.Create(options);"
  },
  "Delete Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointDelete",
    "description": "Delete Webhook Endpoint",
    "body": "var service = new WebhookEndpointService();\nservice.Delete(\"${1:we_xxxxxxxxxxxxx}\");"
  },
  "List Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointList",
    "description": "List Webhook Endpoint",
    "body": "var options = new WebhookEndpointListOptions\n{\n  Limit = ${1:3},\n};\nvar service = new WebhookEndpointService();\nStripeList<WebhookEndpoint> webhookEndpoints = service.List(\n  options\n);"
  },
  "Retrieve Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointRetrieve",
    "description": "Retrieve Webhook Endpoint",
    "body": "var service = new WebhookEndpointService();\nservice.Get(\"${1:we_xxxxxxxxxxxxx}\");"
  },
  "Update Webhook Endpoint": {
    "prefix": "StripeWebhookEndpointUpdate",
    "description": "Update Webhook Endpoint",
    "body": "var options = new WebhookEndpointUpdateOptions\n{\n  Url = \"${2:https://example.com/new_endpoint}\",\n};\nvar service = new WebhookEndpointService();\nservice.Update(\"${1:we_xxxxxxxxxxxxx}\", options);"
  }
}